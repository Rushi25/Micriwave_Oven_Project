

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Aug 18 21:17:55 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.10
    42                           ; Generated 31/07/2019 GMT
    43                           ; 
    44                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  0087                     	;# 
   234  0088                     	;# 
   235  0089                     	;# 
   236  008C                     	;# 
   237  008D                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  010F                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0006                     	;# 
   262  0007                     	;# 
   263  0008                     	;# 
   264  0009                     	;# 
   265  000A                     	;# 
   266  000B                     	;# 
   267  000C                     	;# 
   268  000D                     	;# 
   269  000E                     	;# 
   270  000E                     	;# 
   271  000F                     	;# 
   272  0010                     	;# 
   273  0011                     	;# 
   274  0012                     	;# 
   275  0013                     	;# 
   276  0014                     	;# 
   277  0015                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  001A                     	;# 
   284  001B                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001D                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  0081                     	;# 
   291  0085                     	;# 
   292  0086                     	;# 
   293  0087                     	;# 
   294  0088                     	;# 
   295  0089                     	;# 
   296  008C                     	;# 
   297  008D                     	;# 
   298  008E                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  018C                     	;# 
   434  018D                     	;# 
   435                           
   436                           	psect	idataCOMMON
   437  07FB                     __pidataCOMMON:	
   438                           
   439                           ;initializer for read_matrix_keypad@once
   440  07FB  3401               	retlw	1
   441  0008                     _PORTD	set	8
   442  0061                     _TMR2IF	set	97
   443  0091                     _T2CKPS1	set	145
   444  0090                     _T2CKPS0	set	144
   445  0049                     _RE1	set	73
   446  004A                     _RE2	set	74
   447  0032                     _RB2	set	50
   448  0031                     _RB1	set	49
   449  0030                     _RB0	set	48
   450  0040                     _RD0	set	64
   451  0041                     _RD1	set	65
   452  0042                     _RD2	set	66
   453  0043                     _RD3	set	67
   454  0033                     _RB3	set	51
   455  0092                     _TMR2ON	set	146
   456  005F                     _GIE	set	95
   457  005E                     _PEIE	set	94
   458  003A                     _RC2	set	58
   459  0039                     _RC1	set	57
   460  0092                     _PR2	set	146
   461  0088                     _TRISD	set	136
   462  0086                     _TRISB	set	134
   463  0461                     _TMR2IE	set	1121
   464  0449                     _TRISE1	set	1097
   465  044A                     _TRISE2	set	1098
   466  040F                     _nRBPU	set	1039
   467  043A                     _TRISC2	set	1082
   468  0439                     _TRISC1	set	1081
   469                           
   470                           	psect	strings
   471  04EE                     __pstrings:	
   472  04EE                     stringtab:	
   473  04EE                     __stringtab:	
   474                           
   475                           ;	String table - string pointers are 2 bytes each
   476  04EE  1BFF               	btfsc	btemp+1,7
   477  04EF  2CF8               	ljmp	stringcode
   478  04F0  1383               	bcf	3,7
   479  04F1  187F               	btfsc	btemp+1,0
   480  04F2  1783               	bsf	3,7
   481  04F3  0800               	movf	0,w
   482  04F4  0A84               	incf	4,f
   483  04F5  1903               	skipnz
   484  04F6  0AFF               	incf	btemp+1,f
   485  04F7  0008               	return
   486  04F8                     stringcode:	
   487  04F8  087F               	movf	btemp+1,w
   488  04F9  397F               	andlw	127
   489  04FA  008A               	movwf	10
   490  04FB  0804               	movf	4,w
   491  04FC  0A84               	incf	4,f
   492  04FD  1903               	skipnz
   493  04FE  0AFF               	incf	btemp+1,f
   494  04FF  0082               	movwf	2
   495  0500                     __stringbase:	
   496  0500                     __end_of__stringtab:	
   497                           
   498                           	psect	stringtext
   499  0500                     __pstringtext:	
   500  0500                     STR_18:	
   501  0500  3420               	retlw	32	;' '
   502  0501  3436               	retlw	54	;'6'
   503  0502  342E               	retlw	46	;'.'
   504  0503  3453               	retlw	83	;'S'
   505  0504  3454               	retlw	84	;'T'
   506  0505  344F               	retlw	79	;'O'
   507  0506  3450               	retlw	80	;'P'
   508  0507  3420               	retlw	32	;' '
   509  0508  3420               	retlw	32	;' '
   510  0509  3420               	retlw	32	;' '
   511  050A  3420               	retlw	32	;' '
   512  050B  3420               	retlw	32	;' '
   513  050C  3420               	retlw	32	;' '
   514  050D  3420               	retlw	32	;' '
   515  050E  3420               	retlw	32	;' '
   516  050F  3420               	retlw	32	;' '
   517  0510  3400               	retlw	0
   518  0511                     STR_17:	
   519  0511  3420               	retlw	32	;' '
   520  0512  3435               	retlw	53	;'5'
   521  0513  342E               	retlw	46	;'.'
   522  0514  3450               	retlw	80	;'P'
   523  0515  3441               	retlw	65	;'A'
   524  0516  3455               	retlw	85	;'U'
   525  0517  3453               	retlw	83	;'S'
   526  0518  3445               	retlw	69	;'E'
   527  0519  3420               	retlw	32	;' '
   528  051A  3420               	retlw	32	;' '
   529  051B  3420               	retlw	32	;' '
   530  051C  3420               	retlw	32	;' '
   531  051D  3420               	retlw	32	;' '
   532  051E  3420               	retlw	32	;' '
   533  051F  3420               	retlw	32	;' '
   534  0520  3420               	retlw	32	;' '
   535  0521  3400               	retlw	0
   536  0522                     STR_20:	
   537  0522  3420               	retlw	32	;' '
   538  0523  3420               	retlw	32	;' '
   539  0524  3420               	retlw	32	;' '
   540  0525  3420               	retlw	32	;' '
   541  0526  3420               	retlw	32	;' '
   542  0527  3420               	retlw	32	;' '
   543  0528  3449               	retlw	73	;'I'
   544  0529  3453               	retlw	83	;'S'
   545  052A  3420               	retlw	32	;' '
   546  052B  3455               	retlw	85	;'U'
   547  052C  3450               	retlw	80	;'P'
   548  052D  3420               	retlw	32	;' '
   549  052E  3420               	retlw	32	;' '
   550  052F  3420               	retlw	32	;' '
   551  0530  3420               	retlw	32	;' '
   552  0531  3420               	retlw	32	;' '
   553  0532  3400               	retlw	0
   554  0533                     STR_19:	
   555  0533  3420               	retlw	32	;' '
   556  0534  3420               	retlw	32	;' '
   557  0535  3443               	retlw	67	;'C'
   558  0536  344F               	retlw	79	;'O'
   559  0537  344F               	retlw	79	;'O'
   560  0538  344B               	retlw	75	;'K'
   561  0539  3449               	retlw	73	;'I'
   562  053A  344E               	retlw	78	;'N'
   563  053B  3447               	retlw	71	;'G'
   564  053C  3420               	retlw	32	;' '
   565  053D  3454               	retlw	84	;'T'
   566  053E  3449               	retlw	73	;'I'
   567  053F  344D               	retlw	77	;'M'
   568  0540  3445               	retlw	69	;'E'
   569  0541  3420               	retlw	32	;' '
   570  0542  3420               	retlw	32	;' '
   571  0543  3400               	retlw	0
   572  0544                     STR_14:	
   573  0544  3420               	retlw	32	;' '
   574  0545  3420               	retlw	32	;' '
   575  0546  3450               	retlw	80	;'P'
   576  0547  346C               	retlw	108	;'l'
   577  0548  3465               	retlw	101	;'e'
   578  0549  3461               	retlw	97	;'a'
   579  054A  3473               	retlw	115	;'s'
   580  054B  3465               	retlw	101	;'e'
   581  054C  3420               	retlw	32	;' '
   582  054D  3443               	retlw	67	;'C'
   583  054E  346C               	retlw	108	;'l'
   584  054F  346F               	retlw	111	;'o'
   585  0550  3473               	retlw	115	;'s'
   586  0551  3465               	retlw	101	;'e'
   587  0552  3420               	retlw	32	;' '
   588  0553  3420               	retlw	32	;' '
   589  0554  3400               	retlw	0
   590  0555                     STR_25:	
   591  0555  3420               	retlw	32	;' '
   592  0556  3420               	retlw	32	;' '
   593  0557  3449               	retlw	73	;'I'
   594  0558  346E               	retlw	110	;'n'
   595  0559  3476               	retlw	118	;'v'
   596  055A  3461               	retlw	97	;'a'
   597  055B  346C               	retlw	108	;'l'
   598  055C  3469               	retlw	105	;'i'
   599  055D  3464               	retlw	100	;'d'
   600  055E  3420               	retlw	32	;' '
   601  055F  3454               	retlw	84	;'T'
   602  0560  3465               	retlw	101	;'e'
   603  0561  346D               	retlw	109	;'m'
   604  0562  3470               	retlw	112	;'p'
   605  0563  342E               	retlw	46	;'.'
   606  0564  3420               	retlw	32	;' '
   607  0565  3400               	retlw	0
   608  0566                     STR_16:	
   609  0566  3420               	retlw	32	;' '
   610  0567  3434               	retlw	52	;'4'
   611  0568  342E               	retlw	46	;'.'
   612  0569  3453               	retlw	83	;'S'
   613  056A  3454               	retlw	84	;'T'
   614  056B  3441               	retlw	65	;'A'
   615  056C  3452               	retlw	82	;'R'
   616  056D  3454               	retlw	84	;'T'
   617  056E  342F               	retlw	47	;'/'
   618  056F  3452               	retlw	82	;'R'
   619  0570  3445               	retlw	69	;'E'
   620  0571  3453               	retlw	83	;'S'
   621  0572  3455               	retlw	85	;'U'
   622  0573  344D               	retlw	77	;'M'
   623  0574  3445               	retlw	69	;'E'
   624  0575  3420               	retlw	32	;' '
   625  0576  3400               	retlw	0
   626  0577                     STR_3:	
   627  0577  3420               	retlw	32	;' '
   628  0578  344D               	retlw	77	;'M'
   629  0579  3469               	retlw	105	;'i'
   630  057A  3463               	retlw	99	;'c'
   631  057B  3472               	retlw	114	;'r'
   632  057C  346F               	retlw	111	;'o'
   633  057D  3477               	retlw	119	;'w'
   634  057E  3461               	retlw	97	;'a'
   635  057F  3476               	retlw	118	;'v'
   636  0580  3465               	retlw	101	;'e'
   637  0581  3420               	retlw	32	;' '
   638  0582  344F               	retlw	79	;'O'
   639  0583  3476               	retlw	118	;'v'
   640  0584  3465               	retlw	101	;'e'
   641  0585  346E               	retlw	110	;'n'
   642  0586  3420               	retlw	32	;' '
   643  0587  3400               	retlw	0
   644  0588                     STR_8:	
   645  0588  3453               	retlw	83	;'S'
   646  0589  3445               	retlw	69	;'E'
   647  058A  3454               	retlw	84	;'T'
   648  058B  3420               	retlw	32	;' '
   649  058C  3454               	retlw	84	;'T'
   650  058D  3449               	retlw	73	;'I'
   651  058E  344D               	retlw	77	;'M'
   652  058F  3445               	retlw	69	;'E'
   653  0590  3420               	retlw	32	;' '
   654  0591  3428               	retlw	40	;'('
   655  0592  344D               	retlw	77	;'M'
   656  0593  344D               	retlw	77	;'M'
   657  0594  343A               	retlw	58	;':'
   658  0595  3453               	retlw	83	;'S'
   659  0596  3453               	retlw	83	;'S'
   660  0597  3429               	retlw	41	;')'
   661  0598  3400               	retlw	0
   662  0599                     STR_13:	
   663  0599  3444               	retlw	68	;'D'
   664  059A  346F               	retlw	111	;'o'
   665  059B  346F               	retlw	111	;'o'
   666  059C  3472               	retlw	114	;'r'
   667  059D  3420               	retlw	32	;' '
   668  059E  3453               	retlw	83	;'S'
   669  059F  3474               	retlw	116	;'t'
   670  05A0  3461               	retlw	97	;'a'
   671  05A1  3474               	retlw	116	;'t'
   672  05A2  3475               	retlw	117	;'u'
   673  05A3  3473               	retlw	115	;'s'
   674  05A4  343A               	retlw	58	;':'
   675  05A5  344F               	retlw	79	;'O'
   676  05A6  3450               	retlw	80	;'P'
   677  05A7  3445               	retlw	69	;'E'
   678  05A8  344E               	retlw	78	;'N'
   679  05A9  3400               	retlw	0
   680  05AA                     STR_10:	
   681  05AA  342A               	retlw	42	;'*'
   682  05AB  343A               	retlw	58	;':'
   683  05AC  3443               	retlw	67	;'C'
   684  05AD  344C               	retlw	76	;'L'
   685  05AE  3445               	retlw	69	;'E'
   686  05AF  3441               	retlw	65	;'A'
   687  05B0  3452               	retlw	82	;'R'
   688  05B1  3420               	retlw	32	;' '
   689  05B2  3420               	retlw	32	;' '
   690  05B3  3423               	retlw	35	;'#'
   691  05B4  343A               	retlw	58	;':'
   692  05B5  3445               	retlw	69	;'E'
   693  05B6  344E               	retlw	78	;'N'
   694  05B7  3454               	retlw	84	;'T'
   695  05B8  3445               	retlw	69	;'E'
   696  05B9  3452               	retlw	82	;'R'
   697  05BA  3400               	retlw	0
   698  05BB                     STR_26:	
   699  05BB  3420               	retlw	32	;' '
   700  05BC  3420               	retlw	32	;' '
   701  05BD  3450               	retlw	80	;'P'
   702  05BE  3472               	retlw	114	;'r'
   703  05BF  3465               	retlw	101	;'e'
   704  05C0  342D               	retlw	45	;'-'
   705  05C1  3448               	retlw	72	;'H'
   706  05C2  3465               	retlw	101	;'e'
   707  05C3  3461               	retlw	97	;'a'
   708  05C4  3474               	retlw	116	;'t'
   709  05C5  3469               	retlw	105	;'i'
   710  05C6  346E               	retlw	110	;'n'
   711  05C7  3467               	retlw	103	;'g'
   712  05C8  3420               	retlw	32	;' '
   713  05C9  3420               	retlw	32	;' '
   714  05CA  3400               	retlw	0
   715  05CB                     STR_2:	
   716  05CB  3420               	retlw	32	;' '
   717  05CC  3420               	retlw	32	;' '
   718  05CD  3450               	retlw	80	;'P'
   719  05CE  346F               	retlw	111	;'o'
   720  05CF  3477               	retlw	119	;'w'
   721  05D0  3465               	retlw	101	;'e'
   722  05D1  3472               	retlw	114	;'r'
   723  05D2  3469               	retlw	105	;'i'
   724  05D3  346E               	retlw	110	;'n'
   725  05D4  3467               	retlw	103	;'g'
   726  05D5  3420               	retlw	32	;' '
   727  05D6  344F               	retlw	79	;'O'
   728  05D7  344E               	retlw	78	;'N'
   729  05D8  3420               	retlw	32	;' '
   730  05D9  3400               	retlw	0
   731  05DA                     STR_1:	
   732  05DA  3420               	retlw	32	;' '
   733  05DB  3450               	retlw	80	;'P'
   734  05DC  346F               	retlw	111	;'o'
   735  05DD  3477               	retlw	119	;'w'
   736  05DE  3465               	retlw	101	;'e'
   737  05DF  3472               	retlw	114	;'r'
   738  05E0  3420               	retlw	32	;' '
   739  05E1  343D               	retlw	61	;'='
   740  05E2  3420               	retlw	32	;' '
   741  05E3  3439               	retlw	57	;'9'
   742  05E4  3430               	retlw	48	;'0'
   743  05E5  3430               	retlw	48	;'0'
   744  05E6  3457               	retlw	87	;'W'
   745  05E7  3420               	retlw	32	;' '
   746  05E8  3400               	retlw	0
   747  05E9                     STR_21:	
   748  05E9  3453               	retlw	83	;'S'
   749  05EA  3445               	retlw	69	;'E'
   750  05EB  3454               	retlw	84	;'T'
   751  05EC  3420               	retlw	32	;' '
   752  05ED  3454               	retlw	84	;'T'
   753  05EE  3445               	retlw	69	;'E'
   754  05EF  344D               	retlw	77	;'M'
   755  05F0  3450               	retlw	80	;'P'
   756  05F1  342E               	retlw	46	;'.'
   757  05F2  3420               	retlw	32	;' '
   758  05F3  3428               	retlw	40	;'('
   759  05F4  3420               	retlw	32	;' '
   760  05F5  3400               	retlw	0
   761  05F6                     STR_23:	
   762  05F6  3420               	retlw	32	;' '
   763  05F7  3454               	retlw	84	;'T'
   764  05F8  3445               	retlw	69	;'E'
   765  05F9  344D               	retlw	77	;'M'
   766  05FA  3450               	retlw	80	;'P'
   767  05FB  3420               	retlw	32	;' '
   768  05FC  343A               	retlw	58	;':'
   769  05FD  3420               	retlw	32	;' '
   770  05FE  3430               	retlw	48	;'0'
   771  05FF  3430               	retlw	48	;'0'
   772  0600  3430               	retlw	48	;'0'
   773  0601  3420               	retlw	32	;' '
   774  0602  3400               	retlw	0
   775  0603                     STR_6:	
   776  0603  3433               	retlw	51	;'3'
   777  0604  342E               	retlw	46	;'.'
   778  0605  3443               	retlw	67	;'C'
   779  0606  346F               	retlw	111	;'o'
   780  0607  346E               	retlw	110	;'n'
   781  0608  3476               	retlw	118	;'v'
   782  0609  3465               	retlw	101	;'e'
   783  060A  3463               	retlw	99	;'c'
   784  060B  3474               	retlw	116	;'t'
   785  060C  3469               	retlw	105	;'i'
   786  060D  346F               	retlw	111	;'o'
   787  060E  346E               	retlw	110	;'n'
   788  060F  3400               	retlw	0
   789  0610                     STR_9:	
   790  0610  3454               	retlw	84	;'T'
   791  0611  3449               	retlw	73	;'I'
   792  0612  344D               	retlw	77	;'M'
   793  0613  3445               	retlw	69	;'E'
   794  0614  342D               	retlw	45	;'-'
   795  0615  3420               	retlw	32	;' '
   796  0616  3430               	retlw	48	;'0'
   797  0617  3430               	retlw	48	;'0'
   798  0618  343A               	retlw	58	;':'
   799  0619  3430               	retlw	48	;'0'
   800  061A  3430               	retlw	48	;'0'
   801  061B  3400               	retlw	0
   802  061C                     STR_27:	
   803  061C  3420               	retlw	32	;' '
   804  061D  3454               	retlw	84	;'T'
   805  061E  3469               	retlw	105	;'i'
   806  061F  346D               	retlw	109	;'m'
   807  0620  3465               	retlw	101	;'e'
   808  0621  3420               	retlw	32	;' '
   809  0622  3452               	retlw	82	;'R'
   810  0623  3465               	retlw	101	;'e'
   811  0624  346D               	retlw	109	;'m'
   812  0625  342E               	retlw	46	;'.'
   813  0626  343D               	retlw	61	;'='
   814  0627  3400               	retlw	0
   815  0628                     STR_15:	
   816  0628  3420               	retlw	32	;' '
   817  0629  3454               	retlw	84	;'T'
   818  062A  3449               	retlw	73	;'I'
   819  062B  344D               	retlw	77	;'M'
   820  062C  3445               	retlw	69	;'E'
   821  062D  3420               	retlw	32	;' '
   822  062E  343D               	retlw	61	;'='
   823  062F  3420               	retlw	32	;' '
   824  0630  3420               	retlw	32	;' '
   825  0631  3400               	retlw	0
   826  0632                     STR_5:	
   827  0632  3432               	retlw	50	;'2'
   828  0633  342E               	retlw	46	;'.'
   829  0634  3447               	retlw	71	;'G'
   830  0635  3472               	retlw	114	;'r'
   831  0636  3469               	retlw	105	;'i'
   832  0637  346C               	retlw	108	;'l'
   833  0638  346C               	retlw	108	;'l'
   834  0639  3400               	retlw	0
   835  063A                     STR_4:	
   836  063A  3431               	retlw	49	;'1'
   837  063B  342E               	retlw	46	;'.'
   838  063C  344D               	retlw	77	;'M'
   839  063D  3469               	retlw	105	;'i'
   840  063E  3463               	retlw	99	;'c'
   841  063F  3472               	retlw	114	;'r'
   842  0640  346F               	retlw	111	;'o'
   843  0641  3400               	retlw	0
   844  0642                     STR_7:	
   845  0642  3434               	retlw	52	;'4'
   846  0643  342E               	retlw	46	;'.'
   847  0644  3453               	retlw	83	;'S'
   848  0645  3474               	retlw	116	;'t'
   849  0646  3461               	retlw	97	;'a'
   850  0647  3472               	retlw	114	;'r'
   851  0648  3474               	retlw	116	;'t'
   852  0649  3400               	retlw	0
   853  064A                     STR_22:	
   854  064A  3443               	retlw	67	;'C'
   855  064B  3420               	retlw	32	;' '
   856  064C  3429               	retlw	41	;')'
   857  064D  3400               	retlw	0
   858  050E                     
   859                           ; #config settings
   860  0000                     
   861                           	psect	cinit
   862  0013                     start_initialization:	
   863  0013                     __initialization:	
   864                           
   865                           ; Initialize objects allocated to COMMON
   866  0013  120A  118A  27FB  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   867  0018  00FA               	movwf	__pdataCOMMON& (0+127)
   868                           
   869                           ; Clear objects allocated to BANK0
   870  0019  1383               	bcf	3,7	;select IRP bank0
   871  001A  3020               	movlw	low __pbssBANK0
   872  001B  0084               	movwf	4
   873  001C  3048               	movlw	low (__pbssBANK0+40)
   874  001D  120A  158A  233C  120A  118A  	fcall	clear_ram0
   875                           
   876                           ; Clear objects allocated to COMMON
   877  0022  01F8               	clrf	__pbssCOMMON& (0+127)
   878  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   879  0024                     end_of_initialization:	
   880                           ;End of C runtime variable initialization code
   881                           
   882  0024                     __end_of__initialization:	
   883  0024  0183               	clrf	3
   884  0025  120A  158A  2B81   	ljmp	_main	;jump to C main() function
   885                           
   886                           	psect	bssCOMMON
   887  0078                     __pbssCOMMON:	
   888  0078                     set_time@key_count:	
   889  0078                     	ds	2
   890                           
   891                           	psect	dataCOMMON
   892  007A                     __pdataCOMMON:	
   893  007A                     read_matrix_keypad@once:	
   894  007A                     	ds	1
   895                           
   896                           	psect	bssBANK0
   897  0020                     __pbssBANK0:	
   898  0020                     isr@sec_count:	
   899  0020                     	ds	2
   900  0022                     isr@count:	
   901  0022                     	ds	2
   902  0024                     set_temp@door:	
   903  0024                     	ds	2
   904  0026                     set_temp@temp:	
   905  0026                     	ds	2
   906  0028                     set_temp@key_count:	
   907  0028                     	ds	2
   908  002A                     set_temp@wait:	
   909  002A                     	ds	2
   910  002C                     set_temp@blink:	
   911  002C                     	ds	2
   912  002E                     set_time@blink_pos:	
   913  002E                     	ds	2
   914  0030                     set_time@wait:	
   915  0030                     	ds	2
   916  0032                     set_time@blink:	
   917  0032                     	ds	2
   918  0034                     _heat_flag:	
   919  0034                     	ds	2
   920  0036                     _flag:	
   921  0036                     	ds	2
   922  0038                     _ret:	
   923  0038                     	ds	2
   924  003A                     _sec:	
   925  003A                     	ds	2
   926  003C                     _min:	
   927  003C                     	ds	2
   928  003E                     _reset_flag:	
   929  003E                     	ds	2
   930  0040                     _operation_mode:	
   931  0040                     	ds	2
   932  0042                     _sec_array:	
   933  0042                     	ds	3
   934  0045                     _min_array:	
   935  0045                     	ds	3
   936                           
   937                           	psect	clrtext
   938  0B3C                     clear_ram0:	
   939                           ;	Called with FSR containing the base address, and
   940                           ;	W with the last address+1
   941                           
   942  0B3C  0064               	clrwdt	;clear the watchdog before getting into this loop
   943  0B3D                     clrloop0:	
   944  0B3D  0180               	clrf	0	;clear RAM location pointed to by FSR
   945  0B3E  0A84               	incf	4,f	;increment pointer
   946  0B3F  0604               	xorwf	4,w	;XOR with final address
   947  0B40  1903               	btfsc	3,2	;have we reached the end yet?
   948  0B41  3400               	retlw	0	;all done for this memory range, return
   949  0B42  0604               	xorwf	4,w	;XOR again to restore value
   950  0B43  2B3D               	goto	clrloop0	;do the next byte
   951                           
   952                           	psect	cstackCOMMON
   953  0070                     __pcstackCOMMON:	
   954  0070                     ?_init_clcd:	
   955  0070                     ?_init_matrix_keypad:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_init_timer2:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_power_on_screen:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_clear_display:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ?_loop:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ?_read_matrix_keypad:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ?_operation_call:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_cooking_mode_display:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ?_time_display:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?_set_time:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ?_set_temp:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?_init_config:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ?_main:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_door_status_check:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?_scan_keypad:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_init_display_controller:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_isr:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ??_isr:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0x0
  1011  0070                     	ds	3
  1012  0073                     ??_init_matrix_keypad:	
  1013  0073                     ??_init_timer2:	
  1014                           ; 1 bytes @ 0x3
  1015                           
  1016  0073                     ?_clcd_write:	
  1017                           ; 1 bytes @ 0x3
  1018                           
  1019  0073                     ??_scan_keypad:	
  1020                           ; 1 bytes @ 0x3
  1021                           
  1022  0073                     ?___wmul:	
  1023                           ; 1 bytes @ 0x3
  1024                           
  1025  0073                     ?___awdiv:	
  1026                           ; 2 bytes @ 0x3
  1027                           
  1028  0073                     clcd_write@mode:	
  1029                           ; 2 bytes @ 0x3
  1030                           
  1031  0073                     scan_keypad@i:	
  1032                           ; 1 bytes @ 0x3
  1033                           
  1034  0073                     ___wmul@multiplier:	
  1035                           ; 2 bytes @ 0x3
  1036                           
  1037  0073                     ___awdiv@divisor:	
  1038                           ; 2 bytes @ 0x3
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x3
  1042  0073                     	ds	1
  1043  0074                     ??_clcd_write:	
  1044                           
  1045                           ; 1 bytes @ 0x4
  1046  0074                     	ds	1
  1047  0075                     ??_read_matrix_keypad:	
  1048  0075                     ___wmul@multiplicand:	
  1049                           ; 1 bytes @ 0x5
  1050                           
  1051  0075                     ___awdiv@dividend:	
  1052                           ; 2 bytes @ 0x5
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x5
  1056  0075                     	ds	1
  1057  0076                     read_matrix_keypad@mode:	
  1058  0076                     clcd_write@byte:	
  1059                           ; 1 bytes @ 0x6
  1060                           
  1061                           
  1062                           ; 1 bytes @ 0x6
  1063  0076                     	ds	1
  1064  0077                     ??_init_clcd:	
  1065  0077                     ??_clear_display:	
  1066                           ; 1 bytes @ 0x7
  1067                           
  1068  0077                     ??_clcd_print:	
  1069                           ; 1 bytes @ 0x7
  1070                           
  1071  0077                     ??_cooking_mode_display:	
  1072                           ; 1 bytes @ 0x7
  1073                           
  1074  0077                     ??_init_config:	
  1075                           ; 1 bytes @ 0x7
  1076                           
  1077  0077                     ??_door_status_check:	
  1078                           ; 1 bytes @ 0x7
  1079                           
  1080  0077                     ??___wmul:	
  1081                           ; 1 bytes @ 0x7
  1082                           
  1083  0077                     ??___awdiv:	
  1084                           ; 1 bytes @ 0x7
  1085                           
  1086  0077                     read_matrix_keypad@key:	
  1087                           ; 1 bytes @ 0x7
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x7
  1091  0077                     	ds	1
  1092  0078                     ??_clcd_putch:	
  1093  0078                     ??_main:	
  1094                           ; 1 bytes @ 0x8
  1095                           
  1096                           
  1097                           	psect	cstackBANK0
  1098  0048                     __pcstackBANK0:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101  0048                     ?_clcd_print:	
  1102  0048                     ??_init_display_controller:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0048                     ___awdiv@counter:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0048                     clcd_print@str:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0048                     ___wmul@product:	
  1112                           ; 2 bytes @ 0x0
  1113                           
  1114                           
  1115                           ; 2 bytes @ 0x0
  1116  0048                     	ds	1
  1117  0049                     ___awdiv@sign:	
  1118                           
  1119                           ; 1 bytes @ 0x1
  1120  0049                     	ds	1
  1121  004A                     clcd_print@addr:	
  1122  004A                     ___awdiv@quotient:	
  1123                           ; 1 bytes @ 0x2
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x2
  1127  004A                     	ds	2
  1128  004C                     ?___awmod:	
  1129  004C                     ___awmod@divisor:	
  1130                           ; 2 bytes @ 0x4
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x4
  1134  004C                     	ds	2
  1135  004E                     ___awmod@dividend:	
  1136                           
  1137                           ; 2 bytes @ 0x6
  1138  004E                     	ds	2
  1139  0050                     ??___awmod:	
  1140                           
  1141                           ; 1 bytes @ 0x8
  1142  0050                     	ds	1
  1143  0051                     ___awmod@counter:	
  1144                           
  1145                           ; 1 bytes @ 0x9
  1146  0051                     	ds	1
  1147  0052                     ___awmod@sign:	
  1148                           
  1149                           ; 1 bytes @ 0xA
  1150  0052                     	ds	1
  1151  0053                     ??_set_time:	
  1152  0053                     ?_clcd_putch:	
  1153                           ; 1 bytes @ 0xB
  1154                           
  1155  0053                     clcd_putch@addr:	
  1156                           ; 1 bytes @ 0xB
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0xB
  1160  0053                     	ds	1
  1161  0054                     clcd_putch@data:	
  1162                           
  1163                           ; 1 bytes @ 0xC
  1164  0054                     	ds	1
  1165  0055                     ??_power_on_screen:	
  1166  0055                     ??_time_display:	
  1167                           ; 1 bytes @ 0xD
  1168                           
  1169  0055                     ??_set_temp:	
  1170                           ; 1 bytes @ 0xD
  1171                           
  1172  0055                     set_time@key:	
  1173                           ; 1 bytes @ 0xD
  1174                           
  1175                           
  1176                           ; 1 bytes @ 0xD
  1177  0055                     	ds	3
  1178  0058                     set_temp@key:	
  1179  0058                     power_on_screen@i:	
  1180                           ; 1 bytes @ 0x10
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0x10
  1184  0058                     	ds	1
  1185  0059                     ??_operation_call:	
  1186                           
  1187                           ; 1 bytes @ 0x11
  1188  0059                     	ds	1
  1189  005A                     power_on_screen@i_131:	
  1190                           
  1191                           ; 2 bytes @ 0x12
  1192  005A                     	ds	1
  1193  005B                     operation_call@key:	
  1194                           
  1195                           ; 1 bytes @ 0x13
  1196  005B                     	ds	1
  1197  005C                     ??_loop:	
  1198                           
  1199                           ; 1 bytes @ 0x14
  1200  005C                     	ds	3
  1201  005F                     loop@key:	
  1202                           
  1203                           ; 1 bytes @ 0x17
  1204  005F                     	ds	1
  1205                           
  1206                           	psect	maintext
  1207  0B81                     __pmaintext:	
  1208 ;;
  1209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1210 ;;
  1211 ;; *************** function _main *****************
  1212 ;; Defined at:
  1213 ;;		line 42 in file "main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : B00/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0
  1230 ;;      Totals:         0       0       0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels required when called:    7
  1233 ;; This function calls:
  1234 ;;		_clear_display
  1235 ;;		_init_config
  1236 ;;		_loop
  1237 ;;		_power_on_screen
  1238 ;; This function is called by:
  1239 ;;		Startup code after reset
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _main
  1245  0B81                     _main:	
  1246  0B81                     l3137:	
  1247                           ;incstack = 0
  1248                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1249                           
  1250                           
  1251                           ;main.c: 44:         }
  1252  0B81  120A  158A  239E  120A  158A  	fcall	_init_config
  1253  0B86                     l3139:	
  1254                           
  1255                           ;main.c: 45: 
  1256  0B86  120A  118A  2474  120A  158A  	fcall	_power_on_screen
  1257  0B8B                     l3141:	
  1258                           
  1259                           ;main.c: 46: 
  1260  0B8B  120A  158A  2334  120A  158A  	fcall	_clear_display
  1261  0B90                     l3143:	
  1262                           
  1263                           ;main.c: 47:         else if(key == 1)
  1264  0B90  3001               	movlw	1
  1265  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0B93  00C0               	movwf	_operation_mode
  1268  0B94  3000               	movlw	0
  1269  0B95  00C1               	movwf	_operation_mode+1
  1270  0B96                     l3145:	
  1271                           
  1272                           ;main.c: 48:         {
  1273  0B96  120A  158A  271B  120A  158A  	fcall	_loop
  1274  0B9B                     l74:	
  1275  0B9B  120A  118A  2810   	ljmp	start
  1276  0B9E                     __end_of_main:	
  1277                           
  1278                           	psect	text1
  1279  0474                     __ptext1:	
  1280 ;; *************** function _power_on_screen *****************
  1281 ;; Defined at:
  1282 ;;		line 214 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  i               2   18[BANK0 ] int 
  1287 ;;  i               2   16[BANK0 ] int 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         0       4       0       0       0
  1299 ;;      Temps:          0       3       0       0       0
  1300 ;;      Totals:         0       7       0       0       0
  1301 ;;Total ram usage:        7 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    3
  1304 ;; This function calls:
  1305 ;;		_clcd_print
  1306 ;;		_clcd_putch
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _power_on_screen
  1314  0474                     _power_on_screen:	
  1315  0474                     l3035:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _power_on_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1318                           
  1319                           
  1320                           ;main.c: 216:     clcd_print("3.Convection", (0x90 + 0));
  1321  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0476  01D8               	clrf	power_on_screen@i
  1324  0477  01D9               	clrf	power_on_screen@i+1
  1325  0478                     l3041:	
  1326                           
  1327                           ;main.c: 217:     clcd_print("4.Start", (0xD0 + 0));;main.c: 218: }
  1328  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1330  047A  0858               	movf	power_on_screen@i,w
  1331  047B  3E80               	addlw	128
  1332  047C  00D5               	movwf	??_power_on_screen
  1333  047D  0855               	movf	??_power_on_screen,w
  1334  047E  00D3               	movwf	clcd_putch@addr
  1335  047F  30FF               	movlw	255
  1336  0480  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  1337  0485                     l3043:	
  1338                           
  1339                           ;main.c: 219: 
  1340  0485  3001               	movlw	1
  1341  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0488  07D8               	addwf	power_on_screen@i,f
  1344  0489  1803               	skipnc
  1345  048A  0AD9               	incf	power_on_screen@i+1,f
  1346  048B  3000               	movlw	0
  1347  048C  07D9               	addwf	power_on_screen@i+1,f
  1348  048D                     l3045:	
  1349  048D  0859               	movf	power_on_screen@i+1,w
  1350  048E  3A80               	xorlw	128
  1351  048F  00FF               	movwf	btemp+1
  1352  0490  3080               	movlw	128
  1353  0491  027F               	subwf	btemp+1,w
  1354  0492  1D03               	skipz
  1355  0493  2C96               	goto	u2725
  1356  0494  3010               	movlw	16
  1357  0495  0258               	subwf	power_on_screen@i,w
  1358  0496                     u2725:	
  1359  0496  1C03               	skipc
  1360  0497  2C99               	goto	u2721
  1361  0498  2C9A               	goto	u2720
  1362  0499                     u2721:	
  1363  0499  2C78               	goto	l3041
  1364  049A                     u2720:	
  1365  049A                     l3047:	
  1366                           
  1367                           ;main.c: 220: void clear_display(void){
  1368  049A  30CB               	movlw	low (STR_2| (0+32768))
  1369  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1370  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1371  049D  00C8               	movwf	clcd_print@str
  1372  049E  3085               	movlw	high (STR_2| (0+32768))
  1373  049F  00C9               	movwf	clcd_print@str+1
  1374  04A0  30C0               	movlw	192
  1375  04A1  00D5               	movwf	??_power_on_screen
  1376  04A2  0855               	movf	??_power_on_screen,w
  1377  04A3  00CA               	movwf	clcd_print@addr
  1378  04A4  120A  158A  240C  120A  118A  	fcall	_clcd_print
  1379                           
  1380                           ;main.c: 221:     clcd_write(0x01, 0);
  1381  04A9  3077               	movlw	low (STR_3| (0+32768))
  1382  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1383  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1384  04AC  00C8               	movwf	clcd_print@str
  1385  04AD  3085               	movlw	high (STR_3| (0+32768))
  1386  04AE  00C9               	movwf	clcd_print@str+1
  1387  04AF  3090               	movlw	144
  1388  04B0  00D5               	movwf	??_power_on_screen
  1389  04B1  0855               	movf	??_power_on_screen,w
  1390  04B2  00CA               	movwf	clcd_print@addr
  1391  04B3  120A  158A  240C  120A  118A  	fcall	_clcd_print
  1392  04B8                     l3049:	
  1393                           
  1394                           ;main.c: 222: }
  1395  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1396  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1397  04BA  01DA               	clrf	power_on_screen@i_131
  1398  04BB  01DB               	clrf	power_on_screen@i_131+1
  1399  04BC                     l3055:	
  1400                           
  1401                           ;main.c: 223: ;main.c: 224: void set_time(unsigned char key)
  1402  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  1403  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  1404  04BE  085A               	movf	power_on_screen@i_131,w
  1405  04BF  3ED0               	addlw	208
  1406  04C0  00D5               	movwf	??_power_on_screen
  1407  04C1  0855               	movf	??_power_on_screen,w
  1408  04C2  00D3               	movwf	clcd_putch@addr
  1409  04C3  30FF               	movlw	255
  1410  04C4  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  1411  04C9                     l3057:	
  1412                           
  1413                           ;main.c: 225: {
  1414  04C9  3001               	movlw	1
  1415  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1416  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1417  04CC  07DA               	addwf	power_on_screen@i_131,f
  1418  04CD  1803               	skipnc
  1419  04CE  0ADB               	incf	power_on_screen@i_131+1,f
  1420  04CF  3000               	movlw	0
  1421  04D0  07DB               	addwf	power_on_screen@i_131+1,f
  1422  04D1                     l3059:	
  1423  04D1  085B               	movf	power_on_screen@i_131+1,w
  1424  04D2  3A80               	xorlw	128
  1425  04D3  00FF               	movwf	btemp+1
  1426  04D4  3080               	movlw	128
  1427  04D5  027F               	subwf	btemp+1,w
  1428  04D6  1D03               	skipz
  1429  04D7  2CDA               	goto	u2735
  1430  04D8  3010               	movlw	16
  1431  04D9  025A               	subwf	power_on_screen@i_131,w
  1432  04DA                     u2735:	
  1433  04DA  1C03               	skipc
  1434  04DB  2CDD               	goto	u2731
  1435  04DC  2CDE               	goto	u2730
  1436  04DD                     u2731:	
  1437  04DD  2CBC               	goto	l3055
  1438  04DE                     u2730:	
  1439  04DE                     l3061:	
  1440                           
  1441                           ;main.c: 227:     if(reset_flag >= 0x11)
  1442  04DE  301A               	movlw	26
  1443  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1444  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1445  04E1  00D7               	movwf	??_power_on_screen+2
  1446  04E2  305E               	movlw	94
  1447  04E3  00D6               	movwf	??_power_on_screen+1
  1448  04E4  306D               	movlw	109
  1449  04E5  00D5               	movwf	??_power_on_screen
  1450  04E6                     u2877:	
  1451  04E6  0BD5               	decfsz	??_power_on_screen,f
  1452  04E7  2CE6               	goto	u2877
  1453  04E8  0BD6               	decfsz	??_power_on_screen+1,f
  1454  04E9  2CE6               	goto	u2877
  1455  04EA  0BD7               	decfsz	??_power_on_screen+2,f
  1456  04EB  2CE6               	goto	u2877
  1457  04EC  2CED               	nop2
  1458  04ED                     l127:	
  1459  04ED  0008               	return
  1460  04EE                     __end_of_power_on_screen:	
  1461                           
  1462                           	psect	text2
  1463  0F1B                     __ptext2:	
  1464 ;; *************** function _loop *****************
  1465 ;; Defined at:
  1466 ;;		line 51 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  key             1   23[BANK0 ] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       1       0       0       0
  1482 ;;      Temps:          0       3       0       0       0
  1483 ;;      Totals:         0       4       0       0       0
  1484 ;;Total ram usage:        4 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    6
  1487 ;; This function calls:
  1488 ;;		_clcd_print
  1489 ;;		_clear_display
  1490 ;;		_operation_call
  1491 ;;		_read_matrix_keypad
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _loop
  1499  0F1B                     _loop:	
  1500  0F1B                     l77:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1503                           ;main.c: 53:             clcd_print(" Power = 900W ", (0xC0 + 0));;main.c: 54:          
      +                             _delay((unsigned long)((3000)*(20000000/4000.0)));
  1504                           
  1505  0F1B                     l3063:	
  1506                           
  1507                           ;main.c: 55:             clear_display();;main.c: 56:         }
  1508  0F1B  3001               	movlw	1
  1509  0F1C  120A  158A  23BC  120A  158A  	fcall	_read_matrix_keypad
  1510  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0F23  00DC               	movwf	??_loop
  1513  0F24  085C               	movf	??_loop,w
  1514  0F25  00DF               	movwf	loop@key
  1515  0F26                     l3065:	
  1516                           
  1517                           ;main.c: 58: 
  1518  0F26  3002               	movlw	2
  1519  0F27  0640               	xorwf	_operation_mode,w
  1520  0F28  0441               	iorwf	_operation_mode+1,w
  1521  0F29  1903               	btfsc	3,2
  1522  0F2A  2F2C               	goto	u2741
  1523  0F2B  2F2D               	goto	u2740
  1524  0F2C                     u2741:	
  1525  0F2C  2FF6               	goto	l3135
  1526  0F2D                     u2740:	
  1527  0F2D                     l3067:	
  1528  0F2D  3003               	movlw	3
  1529  0F2E  0640               	xorwf	_operation_mode,w
  1530  0F2F  0441               	iorwf	_operation_mode+1,w
  1531  0F30  1903               	btfsc	3,2
  1532  0F31  2F33               	goto	u2751
  1533  0F32  2F34               	goto	u2750
  1534  0F33                     u2751:	
  1535  0F33  2FF6               	goto	l3135
  1536  0F34                     u2750:	
  1537  0F34                     l3069:	
  1538  0F34  3004               	movlw	4
  1539  0F35  0640               	xorwf	_operation_mode,w
  1540  0F36  0441               	iorwf	_operation_mode+1,w
  1541  0F37  1D03               	btfss	3,2
  1542  0F38  2F3A               	goto	u2761
  1543  0F39  2F3B               	goto	u2760
  1544  0F3A                     u2761:	
  1545  0F3A  2F3D               	goto	l3071
  1546  0F3B                     u2760:	
  1547  0F3B  2FF6               	goto	l3135
  1548  0F3C                     l80:	
  1549                           
  1550                           ;main.c: 59:         else if(key == 2);main.c: 61: 
  1551  0F3C  2FF6               	goto	l3135
  1552  0F3D                     l3071:	
  1553  0F3D  035F               	decf	loop@key,w
  1554  0F3E  1D03               	btfss	3,2
  1555  0F3F  2F41               	goto	u2771
  1556  0F40  2F42               	goto	u2770
  1557  0F41                     u2771:	
  1558  0F41  2F72               	goto	l3083
  1559  0F42                     u2770:	
  1560  0F42                     l3073:	
  1561                           
  1562                           ;main.c: 65:         };main.c: 67: 
  1563  0F42  3002               	movlw	2
  1564  0F43  00C0               	movwf	_operation_mode
  1565  0F44  3000               	movlw	0
  1566  0F45  00C1               	movwf	_operation_mode+1
  1567                           
  1568                           ;main.c: 68:         else if(key == 3)
  1569  0F46  3011               	movlw	17
  1570  0F47  00BE               	movwf	_reset_flag
  1571  0F48  3000               	movlw	0
  1572  0F49  00BF               	movwf	_reset_flag+1
  1573  0F4A                     l3075:	
  1574                           
  1575                           ;main.c: 69:         {
  1576  0F4A  120A  158A  2334  120A  158A  	fcall	_clear_display
  1577  0F4F                     l3077:	
  1578                           
  1579                           ;main.c: 70: 
  1580  0F4F  30DA               	movlw	low (STR_1| (0+32768))
  1581  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0F52  00C8               	movwf	clcd_print@str
  1584  0F53  3085               	movlw	high (STR_1| (0+32768))
  1585  0F54  00C9               	movwf	clcd_print@str+1
  1586  0F55  30C0               	movlw	192
  1587  0F56  00DC               	movwf	??_loop
  1588  0F57  085C               	movf	??_loop,w
  1589  0F58  00CA               	movwf	clcd_print@addr
  1590  0F59  120A  158A  240C  120A  158A  	fcall	_clcd_print
  1591  0F5E                     l3079:	
  1592                           
  1593                           ;main.c: 71:             operation_mode = 0x04;
  1594  0F5E  304D               	movlw	77
  1595  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0F61  00DE               	movwf	??_loop+2
  1598  0F62  3019               	movlw	25
  1599  0F63  00DD               	movwf	??_loop+1
  1600  0F64  304F               	movlw	79
  1601  0F65  00DC               	movwf	??_loop
  1602  0F66                     u2887:	
  1603  0F66  0BDC               	decfsz	??_loop,f
  1604  0F67  2F66               	goto	u2887
  1605  0F68  0BDD               	decfsz	??_loop+1,f
  1606  0F69  2F66               	goto	u2887
  1607  0F6A  0BDE               	decfsz	??_loop+2,f
  1608  0F6B  2F66               	goto	u2887
  1609  0F6C                     l3081:	
  1610                           
  1611                           ;main.c: 72:             reset_flag = 0x13;
  1612  0F6C  120A  158A  2334  120A  158A  	fcall	_clear_display
  1613                           
  1614                           ;main.c: 73:             clear_display();
  1615  0F71  2FF6               	goto	l3135
  1616  0F72                     l3083:	
  1617  0F72  3002               	movlw	2
  1618  0F73  065F               	xorwf	loop@key,w
  1619  0F74  1D03               	btfss	3,2
  1620  0F75  2F77               	goto	u2781
  1621  0F76  2F78               	goto	u2780
  1622  0F77                     u2781:	
  1623  0F77  2F81               	goto	l3089
  1624  0F78                     u2780:	
  1625  0F78                     l3085:	
  1626                           
  1627                           ;main.c: 77:         else if(key == 4) {;main.c: 79:             {
  1628  0F78  3003               	movlw	3
  1629  0F79  00C0               	movwf	_operation_mode
  1630  0F7A  3000               	movlw	0
  1631  0F7B  00C1               	movwf	_operation_mode+1
  1632                           
  1633                           ;main.c: 80: 
  1634  0F7C  3012               	movlw	18
  1635  0F7D  00BE               	movwf	_reset_flag
  1636  0F7E  3000               	movlw	0
  1637  0F7F  00BF               	movwf	_reset_flag+1
  1638  0F80  2F6C               	goto	l3081
  1639  0F81                     l3089:	
  1640  0F81  3003               	movlw	3
  1641  0F82  065F               	xorwf	loop@key,w
  1642  0F83  1D03               	btfss	3,2
  1643  0F84  2F86               	goto	u2791
  1644  0F85  2F87               	goto	u2790
  1645  0F86                     u2791:	
  1646  0F86  2F90               	goto	l3095
  1647  0F87                     u2790:	
  1648  0F87                     l3091:	
  1649                           
  1650                           ;main.c: 86:             };main.c: 88:             {
  1651  0F87  3004               	movlw	4
  1652  0F88  00C0               	movwf	_operation_mode
  1653  0F89  3000               	movlw	0
  1654  0F8A  00C1               	movwf	_operation_mode+1
  1655                           
  1656                           ;main.c: 89:                 sec = sec + 30;
  1657  0F8B  3013               	movlw	19
  1658  0F8C  00BE               	movwf	_reset_flag
  1659  0F8D  3000               	movlw	0
  1660  0F8E  00BF               	movwf	_reset_flag+1
  1661  0F8F  2F6C               	goto	l3081
  1662  0F90                     l3095:	
  1663  0F90  3004               	movlw	4
  1664  0F91  065F               	xorwf	loop@key,w
  1665  0F92  1D03               	btfss	3,2
  1666  0F93  2F95               	goto	u2801
  1667  0F94  2F96               	goto	u2800
  1668  0F95                     u2801:	
  1669  0F95  2FE0               	goto	l3125
  1670  0F96                     u2800:	
  1671  0F96                     l3097:	
  1672                           
  1673                           ;main.c: 95:                 }
  1674  0F96  0340               	decf	_operation_mode,w
  1675  0F97  0441               	iorwf	_operation_mode+1,w
  1676  0F98  1D03               	btfss	3,2
  1677  0F99  2F9B               	goto	u2811
  1678  0F9A  2F9C               	goto	u2810
  1679  0F9B                     u2811:	
  1680  0F9B  2FA9               	goto	l3109
  1681  0F9C                     u2810:	
  1682  0F9C                     l3099:	
  1683                           
  1684                           ;main.c: 96:             };main.c: 98:             {
  1685  0F9C  01BC               	clrf	_min
  1686  0F9D  01BD               	clrf	_min+1
  1687  0F9E                     l3101:	
  1688                           
  1689                           ;main.c: 99:                 TMR2ON = 1;
  1690  0F9E  301E               	movlw	30
  1691  0F9F  00BA               	movwf	_sec
  1692  0FA0  3000               	movlw	0
  1693  0FA1  00BB               	movwf	_sec+1
  1694  0FA2                     l3103:	
  1695                           
  1696                           ;main.c: 100:                 RC2 = 1;
  1697  0FA2  1512               	bsf	18,2	;volatile
  1698  0FA3                     l3105:	
  1699                           
  1700                           ;main.c: 101:                 operation_mode = 0x06;
  1701  0FA3  1507               	bsf	7,2	;volatile
  1702  0FA4                     l3107:	
  1703                           
  1704                           ;main.c: 102:             }
  1705  0FA4  3006               	movlw	6
  1706  0FA5  00C0               	movwf	_operation_mode
  1707  0FA6  3000               	movlw	0
  1708  0FA7  00C1               	movwf	_operation_mode+1
  1709                           
  1710                           ;main.c: 103:         }
  1711  0FA8  2FF6               	goto	l3135
  1712  0FA9                     l3109:	
  1713  0FA9  3006               	movlw	6
  1714  0FAA  0640               	xorwf	_operation_mode,w
  1715  0FAB  0441               	iorwf	_operation_mode+1,w
  1716  0FAC  1D03               	btfss	3,2
  1717  0FAD  2FAF               	goto	u2821
  1718  0FAE  2FB0               	goto	u2820
  1719  0FAF                     u2821:	
  1720  0FAF  2FD6               	goto	l3119
  1721  0FB0                     u2820:	
  1722  0FB0                     l3111:	
  1723                           
  1724                           ;main.c: 105: ;main.c: 106:         else if(key == 5)
  1725  0FB0  083A               	movf	_sec,w
  1726  0FB1  3E1E               	addlw	30
  1727  0FB2  00BA               	movwf	_sec
  1728  0FB3  083B               	movf	_sec+1,w
  1729  0FB4  1803               	skipnc
  1730  0FB5  3E01               	addlw	1
  1731  0FB6  3E00               	addlw	0
  1732  0FB7  00BB               	movwf	_sec+1
  1733  0FB8                     l3113:	
  1734                           
  1735                           ;main.c: 108:             operation_mode = 0x08;
  1736  0FB8  083B               	movf	_sec+1,w
  1737  0FB9  3A80               	xorlw	128
  1738  0FBA  00FF               	movwf	btemp+1
  1739  0FBB  3080               	movlw	128
  1740  0FBC  027F               	subwf	btemp+1,w
  1741  0FBD  1D03               	skipz
  1742  0FBE  2FC1               	goto	u2835
  1743  0FBF  303C               	movlw	60
  1744  0FC0  023A               	subwf	_sec,w
  1745  0FC1                     u2835:	
  1746  0FC1  1C03               	skipc
  1747  0FC2  2FC4               	goto	u2831
  1748  0FC3  2FC5               	goto	u2830
  1749  0FC4                     u2831:	
  1750  0FC4  2F3C               	goto	l80
  1751  0FC5                     u2830:	
  1752  0FC5                     l3115:	
  1753                           
  1754                           ;main.c: 109:         };main.c: 110: 
  1755  0FC5  3001               	movlw	1
  1756  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0FC8  07BC               	addwf	_min,f
  1759  0FC9  1803               	skipnc
  1760  0FCA  0ABD               	incf	_min+1,f
  1761  0FCB  3000               	movlw	0
  1762  0FCC  07BD               	addwf	_min+1,f
  1763  0FCD                     l3117:	
  1764                           
  1765                           ;main.c: 111: 
  1766  0FCD  083A               	movf	_sec,w
  1767  0FCE  3EC4               	addlw	196
  1768  0FCF  00BA               	movwf	_sec
  1769  0FD0  083B               	movf	_sec+1,w
  1770  0FD1  1803               	skipnc
  1771  0FD2  3E01               	addlw	1
  1772  0FD3  3EFF               	addlw	255
  1773  0FD4  00BB               	movwf	_sec+1
  1774  0FD5  2FF6               	goto	l3135
  1775  0FD6                     l3119:	
  1776  0FD6  3008               	movlw	8
  1777  0FD7  0640               	xorwf	_operation_mode,w
  1778  0FD8  0441               	iorwf	_operation_mode+1,w
  1779  0FD9  1D03               	btfss	3,2
  1780  0FDA  2FDC               	goto	u2841
  1781  0FDB  2FDD               	goto	u2840
  1782  0FDC                     u2841:	
  1783  0FDC  2F3C               	goto	l80
  1784  0FDD                     u2840:	
  1785  0FDD                     l3121:	
  1786                           
  1787                           ;main.c: 115:             clear_display();;main.c: 116:         }
  1788  0FDD  1512               	bsf	18,2	;volatile
  1789                           
  1790                           ;main.c: 117: 
  1791  0FDE  1507               	bsf	7,2	;volatile
  1792  0FDF  2FA4               	goto	l3107
  1793  0FE0                     l3125:	
  1794  0FE0  3005               	movlw	5
  1795  0FE1  065F               	xorwf	loop@key,w
  1796  0FE2  1D03               	btfss	3,2
  1797  0FE3  2FE5               	goto	u2851
  1798  0FE4  2FE6               	goto	u2850
  1799  0FE5                     u2851:	
  1800  0FE5  2FEB               	goto	l3129
  1801  0FE6                     u2850:	
  1802  0FE6                     l3127:	
  1803                           
  1804                           ;main.c: 124:     switch(operation_mode);main.c: 125:     {
  1805  0FE6  3008               	movlw	8
  1806  0FE7  00C0               	movwf	_operation_mode
  1807  0FE8  3000               	movlw	0
  1808  0FE9  00C1               	movwf	_operation_mode+1
  1809                           
  1810                           ;main.c: 126:         case 0x01:
  1811  0FEA  2FF6               	goto	l3135
  1812  0FEB                     l3129:	
  1813  0FEB  3006               	movlw	6
  1814  0FEC  065F               	xorwf	loop@key,w
  1815  0FED  1D03               	btfss	3,2
  1816  0FEE  2FF0               	goto	u2861
  1817  0FEF  2FF1               	goto	u2860
  1818  0FF0                     u2861:	
  1819  0FF0  2F3C               	goto	l80
  1820  0FF1                     u2860:	
  1821  0FF1                     l3131:	
  1822                           
  1823                           ;main.c: 130: ;main.c: 131:         case 0x06:
  1824  0FF1  3007               	movlw	7
  1825  0FF2  00C0               	movwf	_operation_mode
  1826  0FF3  3000               	movlw	0
  1827  0FF4  00C1               	movwf	_operation_mode+1
  1828  0FF5  2F6C               	goto	l3081
  1829  0FF6                     l3135:	
  1830                           
  1831                           ;main.c: 135: 
  1832  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0FF8  085F               	movf	loop@key,w
  1835  0FF9  120A  118A  275C  120A  158A  	fcall	_operation_call
  1836  0FFE  2F1B               	goto	l77
  1837  0FFF  0008               	return
  1838  1000                     __end_of_loop:	
  1839                           
  1840                           	psect	text3
  1841  0BBC                     __ptext3:	
  1842 ;; *************** function _read_matrix_keypad *****************
  1843 ;; Defined at:
  1844 ;;		line 108 in file "matrix_keypad.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  mode            1    wreg     unsigned char 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  mode            1    6[COMMON] unsigned char 
  1849 ;;  key             1    7[COMMON] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      unsigned char 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       0       0       0       0
  1860 ;;      Locals:         2       0       0       0       0
  1861 ;;      Temps:          1       0       0       0       0
  1862 ;;      Totals:         3       0       0       0       0
  1863 ;;Total ram usage:        3 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    2
  1866 ;; This function calls:
  1867 ;;		_scan_keypad
  1868 ;; This function is called by:
  1869 ;;		_loop
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _read_matrix_keypad
  1875  0BBC                     _read_matrix_keypad:	
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1879                           ;read_matrix_keypad@mode stored from wreg
  1880  0BBC  00F6               	movwf	read_matrix_keypad@mode
  1881  0BBD                     l2319:	
  1882                           
  1883                           ;matrix_keypad.c: 108: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 109: {;matrix_keypad.c: 110:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          1:     unsigned char key;;matrix_keypad.c: 113:     key = scan_keypad();
  1884  0BBD  120A  158A  266F  120A  158A  	fcall	_scan_keypad
  1885  0BC2  00F5               	movwf	??_read_matrix_keypad
  1886  0BC3  0875               	movf	??_read_matrix_keypad,w
  1887  0BC4  00F7               	movwf	read_matrix_keypad@key
  1888  0BC5                     l2321:	
  1889                           
  1890                           ;matrix_keypad.c: 115:     if (mode == 0)
  1891  0BC5  0876               	movf	read_matrix_keypad@mode,w
  1892  0BC6  1D03               	btfss	3,2
  1893  0BC7  2BC9               	goto	u1891
  1894  0BC8  2BCA               	goto	u1890
  1895  0BC9                     u1891:	
  1896  0BC9  2BCC               	goto	l2329
  1897  0BCA                     u1890:	
  1898  0BCA                     l2323:	
  1899                           
  1900                           ;matrix_keypad.c: 116:     {;matrix_keypad.c: 117:         return key;
  1901  0BCA  0877               	movf	read_matrix_keypad@key,w
  1902  0BCB  2BE0               	goto	l268
  1903  0BCC                     l2329:	
  1904                           
  1905                           ;matrix_keypad.c: 120:     {;matrix_keypad.c: 121:         if ((key != 0xFF) && once)
  1906  0BCC  0A77               	incf	read_matrix_keypad@key,w
  1907  0BCD  1903               	btfsc	3,2
  1908  0BCE  2BD0               	goto	u1901
  1909  0BCF  2BD1               	goto	u1900
  1910  0BD0                     u1901:	
  1911  0BD0  2BD8               	goto	l2341
  1912  0BD1                     u1900:	
  1913  0BD1                     l2331:	
  1914  0BD1  087A               	movf	read_matrix_keypad@once,w
  1915  0BD2  1903               	btfsc	3,2
  1916  0BD3  2BD5               	goto	u1911
  1917  0BD4  2BD6               	goto	u1910
  1918  0BD5                     u1911:	
  1919  0BD5  2BD8               	goto	l2341
  1920  0BD6                     u1910:	
  1921  0BD6                     l2333:	
  1922                           
  1923                           ;matrix_keypad.c: 122:         {;matrix_keypad.c: 123:             once = 0;
  1924  0BD6  01FA               	clrf	read_matrix_keypad@once
  1925  0BD7  2BCA               	goto	l2323
  1926  0BD8                     l2341:	
  1927  0BD8  0A77               	incf	read_matrix_keypad@key,w
  1928  0BD9  1D03               	btfss	3,2
  1929  0BDA  2BDC               	goto	u1921
  1930  0BDB  2BDD               	goto	u1920
  1931  0BDC                     u1921:	
  1932  0BDC  2BDF               	goto	l2345
  1933  0BDD                     u1920:	
  1934  0BDD                     l2343:	
  1935                           
  1936                           ;matrix_keypad.c: 128:         {;matrix_keypad.c: 129:             once = 1;
  1937  0BDD  01FA               	clrf	read_matrix_keypad@once
  1938  0BDE  0AFA               	incf	read_matrix_keypad@once,f
  1939  0BDF                     l2345:	
  1940                           
  1941                           ;matrix_keypad.c: 133:     return 0xFF;
  1942  0BDF  30FF               	movlw	255
  1943  0BE0                     l268:	
  1944  0BE0  0008               	return
  1945  0BE1                     __end_of_read_matrix_keypad:	
  1946                           
  1947                           	psect	text4
  1948  0E6F                     __ptext4:	
  1949 ;; *************** function _scan_keypad *****************
  1950 ;; Defined at:
  1951 ;;		line 21 in file "matrix_keypad.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  i               2    3[COMMON] int 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      unsigned char 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       0       0       0       0
  1966 ;;      Locals:         2       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0
  1968 ;;      Totals:         2       0       0       0       0
  1969 ;;Total ram usage:        2 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_read_matrix_keypad
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           
  1980                           ;psect for function _scan_keypad
  1981  0E6F                     _scan_keypad:	
  1982  0E6F                     l2185:	
  1983                           ;incstack = 0
  1984                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1985                           
  1986                           
  1987                           ;matrix_keypad.c: 23:     int i;;matrix_keypad.c: 25:     RD3 = 0;
  1988  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0E71  1188               	bcf	8,3	;volatile
  1991                           
  1992                           ;matrix_keypad.c: 26:     RD2 = 1;
  1993  0E72  1508               	bsf	8,2	;volatile
  1994                           
  1995                           ;matrix_keypad.c: 27:     RD1 = 1;
  1996  0E73  1488               	bsf	8,1	;volatile
  1997                           
  1998                           ;matrix_keypad.c: 28:     RD0 = 1;
  1999  0E74  1408               	bsf	8,0	;volatile
  2000  0E75                     l2187:	
  2001                           
  2002                           ;matrix_keypad.c: 30:     for (i = 100; i--; );
  2003  0E75  3064               	movlw	100
  2004  0E76  00F3               	movwf	scan_keypad@i
  2005  0E77  3000               	movlw	0
  2006  0E78  00F4               	movwf	scan_keypad@i+1
  2007  0E79                     l2189:	
  2008  0E79  30FF               	movlw	255
  2009  0E7A  07F3               	addwf	scan_keypad@i,f
  2010  0E7B  1803               	skipnc
  2011  0E7C  0AF4               	incf	scan_keypad@i+1,f
  2012  0E7D  30FF               	movlw	255
  2013  0E7E  07F4               	addwf	scan_keypad@i+1,f
  2014  0E7F  0A73               	incf	scan_keypad@i,w
  2015  0E80  1D03               	skipz
  2016  0E81  2E86               	goto	u1731
  2017  0E82  0A74               	incf	scan_keypad@i+1,w
  2018  0E83  1D03               	btfss	3,2
  2019  0E84  2E86               	goto	u1731
  2020  0E85  2E87               	goto	u1730
  2021  0E86                     u1731:	
  2022  0E86  2E79               	goto	l2189
  2023  0E87                     u1730:	
  2024  0E87                     l232:	
  2025                           
  2026                           ;matrix_keypad.c: 32:     if (RB0 == 0)
  2027  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0E89  1806               	btfsc	6,0	;volatile
  2030  0E8A  2E8C               	goto	u1741
  2031  0E8B  2E8D               	goto	u1740
  2032  0E8C                     u1741:	
  2033  0E8C  2E8F               	goto	l233
  2034  0E8D                     u1740:	
  2035  0E8D                     l2191:	
  2036                           
  2037                           ;matrix_keypad.c: 33:     {;matrix_keypad.c: 34:         return 1;
  2038  0E8D  3001               	movlw	1
  2039  0E8E  2F1A               	goto	l234
  2040  0E8F                     l233:	
  2041                           ;matrix_keypad.c: 36:     else if (RB1 == 0)
  2042                           
  2043  0E8F  1886               	btfsc	6,1	;volatile
  2044  0E90  2E92               	goto	u1751
  2045  0E91  2E93               	goto	u1750
  2046  0E92                     u1751:	
  2047  0E92  2E95               	goto	l236
  2048  0E93                     u1750:	
  2049  0E93                     l2197:	
  2050                           
  2051                           ;matrix_keypad.c: 37:     {;matrix_keypad.c: 38:         return 2;
  2052  0E93  3002               	movlw	2
  2053  0E94  2F1A               	goto	l234
  2054  0E95                     l236:	
  2055                           ;matrix_keypad.c: 40:     else if (RB2 == 0)
  2056                           
  2057  0E95  1906               	btfsc	6,2	;volatile
  2058  0E96  2E98               	goto	u1761
  2059  0E97  2E99               	goto	u1760
  2060  0E98                     u1761:	
  2061  0E98  2E9B               	goto	l235
  2062  0E99                     u1760:	
  2063  0E99                     l2203:	
  2064                           
  2065                           ;matrix_keypad.c: 41:     {;matrix_keypad.c: 42:         return 3;
  2066  0E99  3003               	movlw	3
  2067  0E9A  2F1A               	goto	l234
  2068  0E9B                     l235:	
  2069                           
  2070                           ;matrix_keypad.c: 45:     RD3 = 1;
  2071  0E9B  1588               	bsf	8,3	;volatile
  2072                           
  2073                           ;matrix_keypad.c: 46:     RD2 = 0;
  2074  0E9C  1108               	bcf	8,2	;volatile
  2075                           
  2076                           ;matrix_keypad.c: 47:     RD1 = 1;
  2077  0E9D  1488               	bsf	8,1	;volatile
  2078                           
  2079                           ;matrix_keypad.c: 48:     RD0 = 1;
  2080  0E9E  1408               	bsf	8,0	;volatile
  2081  0E9F                     l2207:	
  2082                           
  2083                           ;matrix_keypad.c: 50:     for (i = 100; i--; );
  2084  0E9F  3064               	movlw	100
  2085  0EA0  00F3               	movwf	scan_keypad@i
  2086  0EA1  3000               	movlw	0
  2087  0EA2  00F4               	movwf	scan_keypad@i+1
  2088  0EA3                     l2209:	
  2089  0EA3  30FF               	movlw	255
  2090  0EA4  07F3               	addwf	scan_keypad@i,f
  2091  0EA5  1803               	skipnc
  2092  0EA6  0AF4               	incf	scan_keypad@i+1,f
  2093  0EA7  30FF               	movlw	255
  2094  0EA8  07F4               	addwf	scan_keypad@i+1,f
  2095  0EA9  0A73               	incf	scan_keypad@i,w
  2096  0EAA  1D03               	skipz
  2097  0EAB  2EB0               	goto	u1771
  2098  0EAC  0A74               	incf	scan_keypad@i+1,w
  2099  0EAD  1D03               	btfss	3,2
  2100  0EAE  2EB0               	goto	u1771
  2101  0EAF  2EB1               	goto	u1770
  2102  0EB0                     u1771:	
  2103  0EB0  2EA3               	goto	l2209
  2104  0EB1                     u1770:	
  2105  0EB1                     l241:	
  2106                           
  2107                           ;matrix_keypad.c: 52:     if (RB0 == 0)
  2108  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0EB3  1806               	btfsc	6,0	;volatile
  2111  0EB4  2EB6               	goto	u1781
  2112  0EB5  2EB7               	goto	u1780
  2113  0EB6                     u1781:	
  2114  0EB6  2EB9               	goto	l242
  2115  0EB7                     u1780:	
  2116  0EB7                     l2211:	
  2117                           
  2118                           ;matrix_keypad.c: 53:     {;matrix_keypad.c: 54:         return 4;
  2119  0EB7  3004               	movlw	4
  2120  0EB8  2F1A               	goto	l234
  2121  0EB9                     l242:	
  2122                           ;matrix_keypad.c: 56:     else if (RB1 == 0)
  2123                           
  2124  0EB9  1886               	btfsc	6,1	;volatile
  2125  0EBA  2EBC               	goto	u1791
  2126  0EBB  2EBD               	goto	u1790
  2127  0EBC                     u1791:	
  2128  0EBC  2EBF               	goto	l244
  2129  0EBD                     u1790:	
  2130  0EBD                     l2217:	
  2131                           
  2132                           ;matrix_keypad.c: 57:     {;matrix_keypad.c: 58:         return 5;
  2133  0EBD  3005               	movlw	5
  2134  0EBE  2F1A               	goto	l234
  2135  0EBF                     l244:	
  2136                           ;matrix_keypad.c: 60:     else if (RB2 == 0)
  2137                           
  2138  0EBF  1906               	btfsc	6,2	;volatile
  2139  0EC0  2EC2               	goto	u1801
  2140  0EC1  2EC3               	goto	u1800
  2141  0EC2                     u1801:	
  2142  0EC2  2EC5               	goto	l243
  2143  0EC3                     u1800:	
  2144  0EC3                     l2223:	
  2145                           
  2146                           ;matrix_keypad.c: 61:     {;matrix_keypad.c: 62:         return 6;
  2147  0EC3  3006               	movlw	6
  2148  0EC4  2F1A               	goto	l234
  2149  0EC5                     l243:	
  2150                           
  2151                           ;matrix_keypad.c: 65:     RD3 = 1;
  2152  0EC5  1588               	bsf	8,3	;volatile
  2153                           
  2154                           ;matrix_keypad.c: 66:     RD2 = 1;
  2155  0EC6  1508               	bsf	8,2	;volatile
  2156                           
  2157                           ;matrix_keypad.c: 67:     RD1 = 0;
  2158  0EC7  1088               	bcf	8,1	;volatile
  2159                           
  2160                           ;matrix_keypad.c: 68:     RD0 = 1;
  2161  0EC8  1408               	bsf	8,0	;volatile
  2162  0EC9                     l2227:	
  2163                           
  2164                           ;matrix_keypad.c: 70:     for (i = 100; i--; );
  2165  0EC9  3064               	movlw	100
  2166  0ECA  00F3               	movwf	scan_keypad@i
  2167  0ECB  3000               	movlw	0
  2168  0ECC  00F4               	movwf	scan_keypad@i+1
  2169  0ECD                     l2229:	
  2170  0ECD  30FF               	movlw	255
  2171  0ECE  07F3               	addwf	scan_keypad@i,f
  2172  0ECF  1803               	skipnc
  2173  0ED0  0AF4               	incf	scan_keypad@i+1,f
  2174  0ED1  30FF               	movlw	255
  2175  0ED2  07F4               	addwf	scan_keypad@i+1,f
  2176  0ED3  0A73               	incf	scan_keypad@i,w
  2177  0ED4  1D03               	skipz
  2178  0ED5  2EDA               	goto	u1811
  2179  0ED6  0A74               	incf	scan_keypad@i+1,w
  2180  0ED7  1D03               	btfss	3,2
  2181  0ED8  2EDA               	goto	u1811
  2182  0ED9  2EDB               	goto	u1810
  2183  0EDA                     u1811:	
  2184  0EDA  2ECD               	goto	l2229
  2185  0EDB                     u1810:	
  2186  0EDB                     l249:	
  2187                           
  2188                           ;matrix_keypad.c: 72:     if (RB0 == 0)
  2189  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0EDD  1806               	btfsc	6,0	;volatile
  2192  0EDE  2EE0               	goto	u1821
  2193  0EDF  2EE1               	goto	u1820
  2194  0EE0                     u1821:	
  2195  0EE0  2EE3               	goto	l250
  2196  0EE1                     u1820:	
  2197  0EE1                     l2231:	
  2198                           
  2199                           ;matrix_keypad.c: 73:     {;matrix_keypad.c: 74:         return 7;
  2200  0EE1  3007               	movlw	7
  2201  0EE2  2F1A               	goto	l234
  2202  0EE3                     l250:	
  2203                           ;matrix_keypad.c: 76:     else if (RB1 == 0)
  2204                           
  2205  0EE3  1886               	btfsc	6,1	;volatile
  2206  0EE4  2EE6               	goto	u1831
  2207  0EE5  2EE7               	goto	u1830
  2208  0EE6                     u1831:	
  2209  0EE6  2EE9               	goto	l252
  2210  0EE7                     u1830:	
  2211  0EE7                     l2237:	
  2212                           
  2213                           ;matrix_keypad.c: 77:     {;matrix_keypad.c: 78:         return 8;
  2214  0EE7  3008               	movlw	8
  2215  0EE8  2F1A               	goto	l234
  2216  0EE9                     l252:	
  2217                           ;matrix_keypad.c: 80:     else if (RB2 == 0)
  2218                           
  2219  0EE9  1906               	btfsc	6,2	;volatile
  2220  0EEA  2EEC               	goto	u1841
  2221  0EEB  2EED               	goto	u1840
  2222  0EEC                     u1841:	
  2223  0EEC  2EEF               	goto	l251
  2224  0EED                     u1840:	
  2225  0EED                     l2243:	
  2226                           
  2227                           ;matrix_keypad.c: 81:     {;matrix_keypad.c: 82:         return 9;
  2228  0EED  3009               	movlw	9
  2229  0EEE  2F1A               	goto	l234
  2230  0EEF                     l251:	
  2231                           
  2232                           ;matrix_keypad.c: 85:     RD3 = 1;
  2233  0EEF  1588               	bsf	8,3	;volatile
  2234                           
  2235                           ;matrix_keypad.c: 86:     RD2 = 1;
  2236  0EF0  1508               	bsf	8,2	;volatile
  2237                           
  2238                           ;matrix_keypad.c: 87:     RD1 = 1;
  2239  0EF1  1488               	bsf	8,1	;volatile
  2240                           
  2241                           ;matrix_keypad.c: 88:     RD0 = 0;
  2242  0EF2  1008               	bcf	8,0	;volatile
  2243  0EF3                     l2247:	
  2244                           
  2245                           ;matrix_keypad.c: 90:     for (i = 100; i--; );
  2246  0EF3  3064               	movlw	100
  2247  0EF4  00F3               	movwf	scan_keypad@i
  2248  0EF5  3000               	movlw	0
  2249  0EF6  00F4               	movwf	scan_keypad@i+1
  2250  0EF7                     l2249:	
  2251  0EF7  30FF               	movlw	255
  2252  0EF8  07F3               	addwf	scan_keypad@i,f
  2253  0EF9  1803               	skipnc
  2254  0EFA  0AF4               	incf	scan_keypad@i+1,f
  2255  0EFB  30FF               	movlw	255
  2256  0EFC  07F4               	addwf	scan_keypad@i+1,f
  2257  0EFD  0A73               	incf	scan_keypad@i,w
  2258  0EFE  1D03               	skipz
  2259  0EFF  2F04               	goto	u1851
  2260  0F00  0A74               	incf	scan_keypad@i+1,w
  2261  0F01  1D03               	btfss	3,2
  2262  0F02  2F04               	goto	u1851
  2263  0F03  2F05               	goto	u1850
  2264  0F04                     u1851:	
  2265  0F04  2EF7               	goto	l2249
  2266  0F05                     u1850:	
  2267  0F05                     l257:	
  2268                           
  2269                           ;matrix_keypad.c: 92:     if (RB0 == 0)
  2270  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0F07  1806               	btfsc	6,0	;volatile
  2273  0F08  2F0A               	goto	u1861
  2274  0F09  2F0B               	goto	u1860
  2275  0F0A                     u1861:	
  2276  0F0A  2F0D               	goto	l258
  2277  0F0B                     u1860:	
  2278  0F0B                     l2251:	
  2279                           
  2280                           ;matrix_keypad.c: 93:     {;matrix_keypad.c: 94:         return '*';
  2281  0F0B  302A               	movlw	42
  2282  0F0C  2F1A               	goto	l234
  2283  0F0D                     l258:	
  2284                           ;matrix_keypad.c: 96:     else if (RB1 == 0)
  2285                           
  2286  0F0D  1886               	btfsc	6,1	;volatile
  2287  0F0E  2F10               	goto	u1871
  2288  0F0F  2F11               	goto	u1870
  2289  0F10                     u1871:	
  2290  0F10  2F13               	goto	l260
  2291  0F11                     u1870:	
  2292  0F11                     l2257:	
  2293                           
  2294                           ;matrix_keypad.c: 97:     {;matrix_keypad.c: 98:         return 0;
  2295  0F11  3000               	movlw	0
  2296  0F12  2F1A               	goto	l234
  2297  0F13                     l260:	
  2298                           ;matrix_keypad.c: 100:     else if (RB2 == 0)
  2299                           
  2300  0F13  1906               	btfsc	6,2	;volatile
  2301  0F14  2F16               	goto	u1881
  2302  0F15  2F17               	goto	u1880
  2303  0F16                     u1881:	
  2304  0F16  2F19               	goto	l2267
  2305  0F17                     u1880:	
  2306  0F17                     l2263:	
  2307                           
  2308                           ;matrix_keypad.c: 101:     {;matrix_keypad.c: 102:         return '#';
  2309  0F17  3023               	movlw	35
  2310  0F18  2F1A               	goto	l234
  2311  0F19                     l2267:	
  2312                           
  2313                           ;matrix_keypad.c: 105:     return 0xFF;
  2314  0F19  30FF               	movlw	255
  2315  0F1A                     l234:	
  2316  0F1A  0008               	return
  2317  0F1B                     __end_of_scan_keypad:	
  2318                           
  2319                           	psect	text5
  2320  075C                     __ptext5:	
  2321 ;; *************** function _operation_call *****************
  2322 ;; Defined at:
  2323 ;;		line 139 in file "main.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  key             1    wreg     unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  key             1   19[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       0       0       0
  2338 ;;      Locals:         0       1       0       0       0
  2339 ;;      Temps:          0       2       0       0       0
  2340 ;;      Totals:         0       3       0       0       0
  2341 ;;Total ram usage:        3 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    5
  2344 ;; This function calls:
  2345 ;;		_clear_display
  2346 ;;		_cooking_mode_display
  2347 ;;		_set_temp
  2348 ;;		_set_time
  2349 ;;		_time_display
  2350 ;; This function is called by:
  2351 ;;		_loop
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           
  2356                           ;psect for function _operation_call
  2357  075C                     _operation_call:	
  2358                           
  2359                           ;incstack = 0
  2360                           ; Regs used in _operation_call: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2361                           ;operation_call@key stored from wreg
  2362  075C  1283               	bcf	3,5	;RP0=0, select bank0
  2363  075D  1303               	bcf	3,6	;RP1=0, select bank0
  2364  075E  00DB               	movwf	operation_call@key
  2365  075F                     l2971:	
  2366                           
  2367                           ;main.c: 139:             break;;main.c: 140: ;main.c: 141:         case 0x03:
  2368  075F  2FD2               	goto	l3009
  2369  0760                     l2973:	
  2370                           
  2371                           ;main.c: 145:         case 0x04:
  2372  0760  120A  158A  2475  120A  118A  	fcall	_cooking_mode_display
  2373                           
  2374                           ;main.c: 146:             if(heat_flag == 0)
  2375  0765  2FEE               	goto	l3011
  2376  0766                     l2975:	
  2377                           
  2378                           ;main.c: 150:                 {
  2379  0766  120A  118A  264E  120A  118A  	fcall	_time_display
  2380                           
  2381                           ;main.c: 151:                     flag = 1;
  2382  076B  2FEE               	goto	l3011
  2383  076C                     l2977:	
  2384                           
  2385                           ;main.c: 155:                 {
  2386  076C  085B               	movf	operation_call@key,w
  2387  076D  120A  118A  226A  120A  118A  	fcall	_set_time
  2388                           
  2389                           ;main.c: 156:                     TMR2ON = 0;
  2390  0772  2FEE               	goto	l3011
  2391  0773                     l2979:	
  2392                           
  2393                           ;main.c: 159:                     clear_display();
  2394  0773  085B               	movf	operation_call@key,w
  2395  0774  120A  118A  226A  120A  118A  	fcall	_set_time
  2396                           
  2397                           ;main.c: 160:                     reset_flag = 0x14;
  2398  0779  2FEE               	goto	l3011
  2399  077A                     l2981:	
  2400                           
  2401                           ;main.c: 163:                 {
  2402  077A  0834               	movf	_heat_flag,w
  2403  077B  0435               	iorwf	_heat_flag+1,w
  2404  077C  1D03               	btfss	3,2
  2405  077D  2F7F               	goto	u2681
  2406  077E  2F80               	goto	u2680
  2407  077F                     u2681:	
  2408  077F  2FBB               	goto	l3001
  2409  0780                     u2680:	
  2410  0780                     l2983:	
  2411                           
  2412                           ;main.c: 164:                     flag = 0;;main.c: 165:                 }
  2413  0780  085B               	movf	operation_call@key,w
  2414  0781  120A  118A  2028  120A  118A  	fcall	_set_temp
  2415  0786  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0787  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0788  00D9               	movwf	??_operation_call
  2418  0789  01DA               	clrf	??_operation_call+1
  2419  078A  0859               	movf	??_operation_call,w
  2420  078B  00B8               	movwf	_ret
  2421  078C  085A               	movf	??_operation_call+1,w
  2422  078D  00B9               	movwf	_ret+1
  2423  078E                     l2985:	
  2424                           
  2425                           ;main.c: 166:             }
  2426  078E  0338               	decf	_ret,w
  2427  078F  0439               	iorwf	_ret+1,w
  2428  0790  1D03               	btfss	3,2
  2429  0791  2F93               	goto	u2691
  2430  0792  2F94               	goto	u2690
  2431  0793                     u2691:	
  2432  0793  2F9D               	goto	l2989
  2433  0794                     u2690:	
  2434  0794                     l2987:	
  2435                           
  2436                           ;main.c: 167:             else;main.c: 168:             {
  2437  0794  3001               	movlw	1
  2438  0795  00B6               	movwf	_flag
  2439  0796  3000               	movlw	0
  2440  0797  00B7               	movwf	_flag+1
  2441                           
  2442                           ;main.c: 169:                 set_time(key);
  2443  0798  3013               	movlw	19
  2444  0799  00BE               	movwf	_reset_flag
  2445  079A  3000               	movlw	0
  2446  079B  00BF               	movwf	_reset_flag+1
  2447                           
  2448                           ;main.c: 170:                 reset_flag = 0x0F;
  2449  079C  2FEE               	goto	l3011
  2450  079D                     l2989:	
  2451  079D  0838               	movf	_ret,w
  2452  079E  0439               	iorwf	_ret+1,w
  2453  079F  1D03               	btfss	3,2
  2454  07A0  2FA2               	goto	u2701
  2455  07A1  2FA3               	goto	u2700
  2456  07A2                     u2701:	
  2457  07A2  2FB8               	goto	l2999
  2458  07A3                     u2700:	
  2459  07A3                     l2991:	
  2460                           
  2461                           ;main.c: 172:             break;;main.c: 173: 
  2462  07A3  1112               	bcf	18,2	;volatile
  2463  07A4                     l2993:	
  2464                           
  2465                           ;main.c: 174:         case 0x08:
  2466  07A4  3001               	movlw	1
  2467  07A5  00B6               	movwf	_flag
  2468  07A6  3000               	movlw	0
  2469  07A7  00B7               	movwf	_flag+1
  2470                           
  2471                           ;main.c: 175: 
  2472  07A8  3001               	movlw	1
  2473  07A9  00B4               	movwf	_heat_flag
  2474  07AA  3000               	movlw	0
  2475  07AB  00B5               	movwf	_heat_flag+1
  2476  07AC                     l2995:	
  2477                           
  2478                           ;main.c: 176:             TMR2ON = 0;
  2479  07AC  120A  158A  2334  120A  118A  	fcall	_clear_display
  2480  07B1                     l2997:	
  2481                           
  2482                           ;main.c: 177: 
  2483  07B1  3014               	movlw	20
  2484  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2485  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2486  07B4  00BE               	movwf	_reset_flag
  2487  07B5  3000               	movlw	0
  2488  07B6  00BF               	movwf	_reset_flag+1
  2489                           
  2490                           ;main.c: 178:             RC2 = 0;
  2491  07B7  2FEE               	goto	l3011
  2492  07B8                     l2999:	
  2493                           
  2494                           ;main.c: 180: ;main.c: 181:         case 0x07:
  2495  07B8  01B6               	clrf	_flag
  2496  07B9  01B7               	clrf	_flag+1
  2497  07BA  2FEE               	goto	l3011
  2498  07BB                     l3001:	
  2499                           
  2500                           ;main.c: 185:             RC2 = 0;;main.c: 186: 
  2501  07BB  085B               	movf	operation_call@key,w
  2502  07BC  120A  118A  226A  120A  118A  	fcall	_set_time
  2503  07C1                     l3003:	
  2504                           
  2505                           ;main.c: 187:             operation_mode = 0x01;
  2506  07C1  300F               	movlw	15
  2507  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2508  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  2509  07C4  00BE               	movwf	_reset_flag
  2510  07C5  3000               	movlw	0
  2511  07C6  00BF               	movwf	_reset_flag+1
  2512  07C7  2FEE               	goto	l3011
  2513  07C8                     l117:	
  2514                           ;main.c: 191:     {
  2515                           
  2516                           
  2517                           ;main.c: 193:     }
  2518  07C8  1112               	bcf	18,2	;volatile
  2519                           
  2520                           ;main.c: 195: 
  2521  07C9  1107               	bcf	7,2	;volatile
  2522                           
  2523                           ;main.c: 196: 
  2524  07CA  2FEE               	goto	l3011
  2525  07CB                     l118:	
  2526                           ;main.c: 198: {
  2527                           
  2528                           
  2529                           ;main.c: 200:     {
  2530  07CB  1112               	bcf	18,2	;volatile
  2531                           
  2532                           ;main.c: 202:     }
  2533  07CC  1107               	bcf	7,2	;volatile
  2534  07CD                     l3005:	
  2535                           
  2536                           ;main.c: 204:     clcd_print(" Microwave Oven ", (0x90 + 0));
  2537  07CD  3001               	movlw	1
  2538  07CE  00C0               	movwf	_operation_mode
  2539  07CF  3000               	movlw	0
  2540  07D0  00C1               	movwf	_operation_mode+1
  2541                           
  2542                           ;main.c: 205:     for(int i = 0; i < 16; i++)
  2543  07D1  2FEE               	goto	l3011
  2544  07D2                     l3009:	
  2545                           
  2546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2547                           ; Switch size 1, requested type "simple"
  2548                           ; Number of cases is 1, Range of values is 0 to 0
  2549                           ; switch strategies available:
  2550                           ; Name         Instructions Cycles
  2551                           ; simple_byte            4     3 (average)
  2552                           ; direct_byte           11     8 (fixed)
  2553                           ; jumptable            260     6 (fixed)
  2554                           ;	Chosen strategy is simple_byte
  2555  07D2  0841               	movf	_operation_mode+1,w
  2556  07D3  3A00               	xorlw	0	; case 0
  2557  07D4  1903               	skipnz
  2558  07D5  2FD7               	goto	l3197
  2559  07D6  2FEE               	goto	l3011
  2560  07D7                     l3197:	
  2561                           
  2562                           ; Switch size 1, requested type "simple"
  2563                           ; Number of cases is 7, Range of values is 1 to 8
  2564                           ; switch strategies available:
  2565                           ; Name         Instructions Cycles
  2566                           ; simple_byte           22    12 (average)
  2567                           ; direct_byte           35    11 (fixed)
  2568                           ; jumptable            263     9 (fixed)
  2569                           ;	Chosen strategy is simple_byte
  2570  07D7  0840               	movf	_operation_mode,w
  2571  07D8  3A01               	xorlw	1	; case 1
  2572  07D9  1903               	skipnz
  2573  07DA  2F60               	goto	l2973
  2574  07DB  3A03               	xorlw	3	; case 2
  2575  07DC  1903               	skipnz
  2576  07DD  2F6C               	goto	l2977
  2577  07DE  3A01               	xorlw	1	; case 3
  2578  07DF  1903               	skipnz
  2579  07E0  2F73               	goto	l2979
  2580  07E1  3A07               	xorlw	7	; case 4
  2581  07E2  1903               	skipnz
  2582  07E3  2F7A               	goto	l2981
  2583  07E4  3A02               	xorlw	2	; case 6
  2584  07E5  1903               	skipnz
  2585  07E6  2F66               	goto	l2975
  2586  07E7  3A01               	xorlw	1	; case 7
  2587  07E8  1903               	skipnz
  2588  07E9  2FCB               	goto	l118
  2589  07EA  3A0F               	xorlw	15	; case 8
  2590  07EB  1903               	skipnz
  2591  07EC  2FC8               	goto	l117
  2592  07ED  2FEE               	goto	l3011
  2593  07EE                     l3011:	
  2594                           
  2595                           ;main.c: 207:         clcd_putch(0xFF, (0xD0 + i));
  2596  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  2597  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  2598  07F0  0836               	movf	_flag,w
  2599  07F1  0437               	iorwf	_flag+1,w
  2600  07F2  1D03               	btfss	3,2
  2601  07F3  2FF5               	goto	u2711
  2602  07F4  2FF6               	goto	u2710
  2603  07F5                     u2711:	
  2604  07F5  2FFA               	goto	l120
  2605  07F6                     u2710:	
  2606  07F6                     l3013:	
  2607                           
  2608                           ;main.c: 208:     };main.c: 209: 
  2609  07F6  300F               	movlw	15
  2610  07F7  00BE               	movwf	_reset_flag
  2611  07F8  3000               	movlw	0
  2612  07F9  00BF               	movwf	_reset_flag+1
  2613  07FA                     l120:	
  2614  07FA  0008               	return
  2615  07FB                     __end_of_operation_call:	
  2616                           
  2617                           	psect	text6
  2618  064E                     __ptext6:	
  2619 ;; *************** function _time_display *****************
  2620 ;; Defined at:
  2621 ;;		line 369 in file "main.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0
  2637 ;;      Temps:          0       3       0       0       0
  2638 ;;      Totals:         0       3       0       0       0
  2639 ;;Total ram usage:        3 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		___awdiv
  2644 ;;		___awmod
  2645 ;;		_clcd_print
  2646 ;;		_clcd_putch
  2647 ;;		_clear_display
  2648 ;;		_door_status_check
  2649 ;; This function is called by:
  2650 ;;		_operation_call
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _time_display
  2656  064E                     _time_display:	
  2657  064E                     l2677:	
  2658                           ;incstack = 0
  2659                           ; Regs used in _time_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2660                           
  2661  064E  120A  158A  24B2  120A  118A  	fcall	_door_status_check
  2662  0653  3028               	movlw	low (STR_15| (0+32768))
  2663  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0656  00C8               	movwf	clcd_print@str
  2666  0657  3086               	movlw	high (STR_15| (0+32768))
  2667  0658  00C9               	movwf	clcd_print@str+1
  2668  0659  3080               	movlw	128
  2669  065A  00D5               	movwf	??_time_display
  2670  065B  0855               	movf	??_time_display,w
  2671  065C  00CA               	movwf	clcd_print@addr
  2672  065D  120A  158A  240C  120A  118A  	fcall	_clcd_print
  2673  0662                     l2679:	
  2674  0662  300A               	movlw	10
  2675  0663  00F3               	movwf	___awdiv@divisor
  2676  0664  3000               	movlw	0
  2677  0665  00F4               	movwf	___awdiv@divisor+1
  2678  0666  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0667  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0668  083D               	movf	_min+1,w
  2681  0669  00F6               	movwf	___awdiv@dividend+1
  2682  066A  083C               	movf	_min,w
  2683  066B  00F5               	movwf	___awdiv@dividend
  2684  066C  120A  158A  2606  120A  118A  	fcall	___awdiv
  2685  0671  0873               	movf	?___awdiv,w
  2686  0672  3E30               	addlw	48
  2687  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0675  00D5               	movwf	??_time_display
  2690  0676  0855               	movf	??_time_display,w
  2691  0677  00C5               	movwf	_min_array
  2692  0678                     l2681:	
  2693  0678  300A               	movlw	10
  2694  0679  00CC               	movwf	___awmod@divisor
  2695  067A  3000               	movlw	0
  2696  067B  00CD               	movwf	___awmod@divisor+1
  2697  067C  083D               	movf	_min+1,w
  2698  067D  00CF               	movwf	___awmod@dividend+1
  2699  067E  083C               	movf	_min,w
  2700  067F  00CE               	movwf	___awmod@dividend
  2701  0680  120A  158A  2548  120A  118A  	fcall	___awmod
  2702  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0687  084C               	movf	?___awmod,w
  2705  0688  3E30               	addlw	48
  2706  0689  00D5               	movwf	??_time_display
  2707  068A  0855               	movf	??_time_display,w
  2708  068B  00C6               	movwf	_min_array+1
  2709  068C                     l2683:	
  2710  068C  01C7               	clrf	_min_array+2
  2711  068D                     l2685:	
  2712  068D  3045               	movlw	(low (_min_array| 0))& (0+255)
  2713  068E  00C8               	movwf	clcd_print@str
  2714  068F  3000               	movlw	0
  2715  0690  00C9               	movwf	clcd_print@str+1
  2716  0691  3089               	movlw	137
  2717  0692  00D5               	movwf	??_time_display
  2718  0693  0855               	movf	??_time_display,w
  2719  0694  00CA               	movwf	clcd_print@addr
  2720  0695  120A  158A  240C  120A  118A  	fcall	_clcd_print
  2721  069A                     l2687:	
  2722  069A  308B               	movlw	139
  2723  069B  1283               	bcf	3,5	;RP0=0, select bank0
  2724  069C  1303               	bcf	3,6	;RP1=0, select bank0
  2725  069D  00D5               	movwf	??_time_display
  2726  069E  0855               	movf	??_time_display,w
  2727  069F  00D3               	movwf	clcd_putch@addr
  2728  06A0  303A               	movlw	58
  2729  06A1  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  2730  06A6                     l2689:	
  2731                           
  2732                           ;main.c: 389:     clcd_putch(sec / 10 + '0', (0x80 + 12));
  2733  06A6  308C               	movlw	140
  2734  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  2735  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  2736  06A9  00D5               	movwf	??_time_display
  2737  06AA  0855               	movf	??_time_display,w
  2738  06AB  00D3               	movwf	clcd_putch@addr
  2739  06AC  300A               	movlw	10
  2740  06AD  00F3               	movwf	___awdiv@divisor
  2741  06AE  3000               	movlw	0
  2742  06AF  00F4               	movwf	___awdiv@divisor+1
  2743  06B0  083B               	movf	_sec+1,w
  2744  06B1  00F6               	movwf	___awdiv@dividend+1
  2745  06B2  083A               	movf	_sec,w
  2746  06B3  00F5               	movwf	___awdiv@dividend
  2747  06B4  120A  158A  2606  120A  118A  	fcall	___awdiv
  2748  06B9  0873               	movf	?___awdiv,w
  2749  06BA  3E30               	addlw	48
  2750  06BB  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  2751  06C0                     l2691:	
  2752                           
  2753                           ;main.c: 390:     clcd_putch(sec % 10 + '0', (0x80 + 13));
  2754  06C0  308D               	movlw	141
  2755  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2756  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2757  06C3  00D5               	movwf	??_time_display
  2758  06C4  0855               	movf	??_time_display,w
  2759  06C5  00D3               	movwf	clcd_putch@addr
  2760  06C6  300A               	movlw	10
  2761  06C7  00CC               	movwf	___awmod@divisor
  2762  06C8  3000               	movlw	0
  2763  06C9  00CD               	movwf	___awmod@divisor+1
  2764  06CA  083B               	movf	_sec+1,w
  2765  06CB  00CF               	movwf	___awmod@dividend+1
  2766  06CC  083A               	movf	_sec,w
  2767  06CD  00CE               	movwf	___awmod@dividend
  2768  06CE  120A  158A  2548  120A  118A  	fcall	___awmod
  2769  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2770  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2771  06D5  084C               	movf	?___awmod,w
  2772  06D6  3E30               	addlw	48
  2773  06D7  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  2774  06DC                     l2693:	
  2775                           
  2776                           ;main.c: 393:     clcd_print(" 4.START/RESUME ", (0xC0 + 0));
  2777  06DC  3066               	movlw	low (STR_16| (0+32768))
  2778  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2779  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2780  06DF  00C8               	movwf	clcd_print@str
  2781  06E0  3085               	movlw	high (STR_16| (0+32768))
  2782  06E1  00C9               	movwf	clcd_print@str+1
  2783  06E2  30C0               	movlw	192
  2784  06E3  00D5               	movwf	??_time_display
  2785  06E4  0855               	movf	??_time_display,w
  2786  06E5  00CA               	movwf	clcd_print@addr
  2787  06E6  120A  158A  240C  120A  118A  	fcall	_clcd_print
  2788  06EB                     l2695:	
  2789                           
  2790                           ;main.c: 394:     clcd_print(" 5.PAUSE        ", (0x90 + 0));
  2791  06EB  3011               	movlw	low (STR_17| (0+32768))
  2792  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2793  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2794  06EE  00C8               	movwf	clcd_print@str
  2795  06EF  3085               	movlw	high (STR_17| (0+32768))
  2796  06F0  00C9               	movwf	clcd_print@str+1
  2797  06F1  3090               	movlw	144
  2798  06F2  00D5               	movwf	??_time_display
  2799  06F3  0855               	movf	??_time_display,w
  2800  06F4  00CA               	movwf	clcd_print@addr
  2801  06F5  120A  158A  240C  120A  118A  	fcall	_clcd_print
  2802  06FA                     l2697:	
  2803                           
  2804                           ;main.c: 395:     clcd_print(" 6.STOP         ", (0xD0 + 0));
  2805  06FA  3000               	movlw	low (STR_18| (0+32768))
  2806  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2807  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2808  06FD  00C8               	movwf	clcd_print@str
  2809  06FE  3085               	movlw	high (STR_18| (0+32768))
  2810  06FF  00C9               	movwf	clcd_print@str+1
  2811  0700  30D0               	movlw	208
  2812  0701  00D5               	movwf	??_time_display
  2813  0702  0855               	movf	??_time_display,w
  2814  0703  00CA               	movwf	clcd_print@addr
  2815  0704  120A  158A  240C  120A  118A  	fcall	_clcd_print
  2816  0709                     l2699:	
  2817                           
  2818                           ;main.c: 398:     if(min == 0 && sec == 0)
  2819  0709  1283               	bcf	3,5	;RP0=0, select bank0
  2820  070A  1303               	bcf	3,6	;RP1=0, select bank0
  2821  070B  083C               	movf	_min,w
  2822  070C  043D               	iorwf	_min+1,w
  2823  070D  1D03               	btfss	3,2
  2824  070E  2F10               	goto	u2331
  2825  070F  2F11               	goto	u2330
  2826  0710                     u2331:	
  2827  0710  2F5B               	goto	l176
  2828  0711                     u2330:	
  2829  0711                     l2701:	
  2830  0711  083A               	movf	_sec,w
  2831  0712  043B               	iorwf	_sec+1,w
  2832  0713  1D03               	btfss	3,2
  2833  0714  2F16               	goto	u2341
  2834  0715  2F17               	goto	u2340
  2835  0716                     u2341:	
  2836  0716  2F5B               	goto	l176
  2837  0717                     u2340:	
  2838  0717                     l2703:	
  2839                           
  2840                           ;main.c: 399:     {;main.c: 400:         TMR2ON = 0;
  2841  0717  1112               	bcf	18,2	;volatile
  2842                           
  2843                           ;main.c: 401:         RC2 = 0;
  2844  0718  1107               	bcf	7,2	;volatile
  2845  0719                     l2705:	
  2846                           
  2847                           ;main.c: 402:         clear_display();
  2848  0719  120A  158A  2334  120A  118A  	fcall	_clear_display
  2849  071E                     l2707:	
  2850                           
  2851                           ;main.c: 403:         clcd_print("  COOKING TIME  ", (0xC0 + 0));
  2852  071E  3033               	movlw	low (STR_19| (0+32768))
  2853  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0721  00C8               	movwf	clcd_print@str
  2856  0722  3085               	movlw	high (STR_19| (0+32768))
  2857  0723  00C9               	movwf	clcd_print@str+1
  2858  0724  30C0               	movlw	192
  2859  0725  00D5               	movwf	??_time_display
  2860  0726  0855               	movf	??_time_display,w
  2861  0727  00CA               	movwf	clcd_print@addr
  2862  0728  120A  158A  240C  120A  118A  	fcall	_clcd_print
  2863  072D                     l2709:	
  2864                           
  2865                           ;main.c: 404:         clcd_print("      IS UP     ", (0x90 + 0));
  2866  072D  3022               	movlw	low (STR_20| (0+32768))
  2867  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2868  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0730  00C8               	movwf	clcd_print@str
  2870  0731  3085               	movlw	high (STR_20| (0+32768))
  2871  0732  00C9               	movwf	clcd_print@str+1
  2872  0733  3090               	movlw	144
  2873  0734  00D5               	movwf	??_time_display
  2874  0735  0855               	movf	??_time_display,w
  2875  0736  00CA               	movwf	clcd_print@addr
  2876  0737  120A  158A  240C  120A  118A  	fcall	_clcd_print
  2877  073C                     l2711:	
  2878                           
  2879                           ;main.c: 406:         RC1 = 1;
  2880  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2881  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2882  073E  1487               	bsf	7,1	;volatile
  2883  073F                     l2713:	
  2884                           
  2885                           ;main.c: 407:         _delay((unsigned long)((3000)*(20000000/4000.0)));
  2886  073F  304D               	movlw	77
  2887  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0742  00D7               	movwf	??_time_display+2
  2890  0743  3019               	movlw	25
  2891  0744  00D6               	movwf	??_time_display+1
  2892  0745  304F               	movlw	79
  2893  0746  00D5               	movwf	??_time_display
  2894  0747                     u2897:	
  2895  0747  0BD5               	decfsz	??_time_display,f
  2896  0748  2F47               	goto	u2897
  2897  0749  0BD6               	decfsz	??_time_display+1,f
  2898  074A  2F47               	goto	u2897
  2899  074B  0BD7               	decfsz	??_time_display+2,f
  2900  074C  2F47               	goto	u2897
  2901  074D                     l2715:	
  2902                           
  2903                           ;main.c: 408:         RC1 = 0;
  2904  074D  1283               	bcf	3,5	;RP0=0, select bank0
  2905  074E  1303               	bcf	3,6	;RP1=0, select bank0
  2906  074F  1087               	bcf	7,1	;volatile
  2907  0750                     l2717:	
  2908                           
  2909                           ;main.c: 409:         clear_display();
  2910  0750  120A  158A  2334  120A  118A  	fcall	_clear_display
  2911                           
  2912                           ;main.c: 410:         operation_mode = 0x01;
  2913  0755  3001               	movlw	1
  2914  0756  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0757  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0758  00C0               	movwf	_operation_mode
  2917  0759  3000               	movlw	0
  2918  075A  00C1               	movwf	_operation_mode+1
  2919  075B                     l176:	
  2920  075B  0008               	return
  2921  075C                     __end_of_time_display:	
  2922                           
  2923                           	psect	text7
  2924  026A                     __ptext7:	
  2925 ;; *************** function _set_time *****************
  2926 ;; Defined at:
  2927 ;;		line 241 in file "main.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  key             1    wreg     unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  key             1   13[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         0       1       0       0       0
  2943 ;;      Temps:          0       2       0       0       0
  2944 ;;      Totals:         0       3       0       0       0
  2945 ;;Total ram usage:        3 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    3
  2948 ;; This function calls:
  2949 ;;		___awdiv
  2950 ;;		___awmod
  2951 ;;		___wmul
  2952 ;;		_clcd_print
  2953 ;;		_clcd_write
  2954 ;;		_clear_display
  2955 ;; This function is called by:
  2956 ;;		_operation_call
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _set_time
  2962  026A                     _set_time:	
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2966                           ;set_time@key stored from wreg
  2967  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2968  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2969  026C  00D5               	movwf	set_time@key
  2970  026D                     l2719:	
  2971                           
  2972                           ;main.c: 241: ;main.c: 242: ;main.c: 243: ;main.c: 244: 
  2973  026D  083F               	movf	_reset_flag+1,w
  2974  026E  3A80               	xorlw	128
  2975  026F  00FF               	movwf	btemp+1
  2976  0270  3080               	movlw	128
  2977  0271  027F               	subwf	btemp+1,w
  2978  0272  1D03               	skipz
  2979  0273  2A76               	goto	u2355
  2980  0274  3011               	movlw	17
  2981  0275  023E               	subwf	_reset_flag,w
  2982  0276                     u2355:	
  2983  0276  1C03               	skipc
  2984  0277  2A79               	goto	u2351
  2985  0278  2A7A               	goto	u2350
  2986  0279                     u2351:	
  2987  0279  2ABC               	goto	l2741
  2988  027A                     u2350:	
  2989  027A                     l2721:	
  2990                           
  2991                           ;main.c: 245:     if(key != 0xFF && key != '*' && key != '#');main.c: 246:     {
  2992  027A  01F3               	clrf	clcd_write@mode
  2993  027B  300C               	movlw	12
  2994  027C  120A  158A  243F  120A  118A  	fcall	_clcd_write
  2995  0281                     l2723:	
  2996                           
  2997                           ;main.c: 247: 
  2998  0281  30FF               	movlw	255
  2999  0282  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0283  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0284  00D3               	movwf	??_set_time
  3002  0285  0853               	movf	??_set_time,w
  3003  0286  00D5               	movwf	set_time@key
  3004  0287                     l2725:	
  3005                           
  3006                           ;main.c: 248:         key_count++;
  3007  0287  01F8               	clrf	set_time@key_count
  3008  0288  01F9               	clrf	set_time@key_count+1
  3009  0289                     l2727:	
  3010                           
  3011                           ;main.c: 249:         if(key_count <= 2)
  3012  0289  01BA               	clrf	_sec
  3013  028A  01BB               	clrf	_sec+1
  3014  028B                     l2729:	
  3015                           
  3016                           ;main.c: 250:         {
  3017  028B  01BC               	clrf	_min
  3018  028C  01BD               	clrf	_min+1
  3019  028D                     l2731:	
  3020                           
  3021                           ;main.c: 251:             sec = sec * 10 + key;
  3022  028D  01B2               	clrf	set_time@blink
  3023  028E  01B3               	clrf	set_time@blink+1
  3024  028F                     l2733:	
  3025                           
  3026                           ;main.c: 252: 
  3027  028F  01AE               	clrf	set_time@blink_pos
  3028  0290  01AF               	clrf	set_time@blink_pos+1
  3029  0291                     l2735:	
  3030                           
  3031                           ;main.c: 253:         }
  3032  0291  3088               	movlw	low (STR_8| (0+32768))
  3033  0292  00C8               	movwf	clcd_print@str
  3034  0293  3085               	movlw	high (STR_8| (0+32768))
  3035  0294  00C9               	movwf	clcd_print@str+1
  3036  0295  3080               	movlw	128
  3037  0296  00D3               	movwf	??_set_time
  3038  0297  0853               	movf	??_set_time,w
  3039  0298  00CA               	movwf	clcd_print@addr
  3040  0299  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3041  029E                     l2737:	
  3042                           
  3043                           ;main.c: 254:         else if(key_count > 2 && key_count < 5)
  3044  029E  3010               	movlw	low (STR_9| (0+32768))
  3045  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3046  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3047  02A1  00C8               	movwf	clcd_print@str
  3048  02A2  3086               	movlw	high (STR_9| (0+32768))
  3049  02A3  00C9               	movwf	clcd_print@str+1
  3050  02A4  30C0               	movlw	192
  3051  02A5  00D3               	movwf	??_set_time
  3052  02A6  0853               	movf	??_set_time,w
  3053  02A7  00CA               	movwf	clcd_print@addr
  3054  02A8  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3055  02AD                     l2739:	
  3056                           
  3057                           ;main.c: 256:             min = min * 10 + key;
  3058  02AD  30AA               	movlw	low (STR_10| (0+32768))
  3059  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  3060  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  3061  02B0  00C8               	movwf	clcd_print@str
  3062  02B1  3085               	movlw	high (STR_10| (0+32768))
  3063  02B2  00C9               	movwf	clcd_print@str+1
  3064  02B3  30D0               	movlw	208
  3065  02B4  00D3               	movwf	??_set_time
  3066  02B5  0853               	movf	??_set_time,w
  3067  02B6  00CA               	movwf	clcd_print@addr
  3068  02B7  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3069  02BC                     l2741:	
  3070                           
  3071                           ;main.c: 262:         else if(key_count >= 2 && key_count < 4)
  3072  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3073  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3074  02BE  0A55               	incf	set_time@key,w
  3075  02BF  1903               	btfsc	3,2
  3076  02C0  2AC2               	goto	u2361
  3077  02C1  2AC3               	goto	u2360
  3078  02C2                     u2361:	
  3079  02C2  2B62               	goto	l2769
  3080  02C3                     u2360:	
  3081  02C3                     l2743:	
  3082  02C3  302A               	movlw	42
  3083  02C4  0655               	xorwf	set_time@key,w
  3084  02C5  1903               	btfsc	3,2
  3085  02C6  2AC8               	goto	u2371
  3086  02C7  2AC9               	goto	u2370
  3087  02C8                     u2371:	
  3088  02C8  2B62               	goto	l2769
  3089  02C9                     u2370:	
  3090  02C9                     l2745:	
  3091  02C9  3023               	movlw	35
  3092  02CA  0655               	xorwf	set_time@key,w
  3093  02CB  1903               	btfsc	3,2
  3094  02CC  2ACE               	goto	u2381
  3095  02CD  2ACF               	goto	u2380
  3096  02CE                     u2381:	
  3097  02CE  2B62               	goto	l2769
  3098  02CF                     u2380:	
  3099  02CF                     l2747:	
  3100                           
  3101                           ;main.c: 263:         {;main.c: 265:         }
  3102  02CF  3001               	movlw	1
  3103  02D0  07F8               	addwf	set_time@key_count,f
  3104  02D1  1803               	skipnc
  3105  02D2  0AF9               	incf	set_time@key_count+1,f
  3106  02D3  3000               	movlw	0
  3107  02D4  07F9               	addwf	set_time@key_count+1,f
  3108  02D5                     l2749:	
  3109                           
  3110                           ;main.c: 266:     }
  3111  02D5  0879               	movf	set_time@key_count+1,w
  3112  02D6  3A80               	xorlw	128
  3113  02D7  00FF               	movwf	btemp+1
  3114  02D8  3080               	movlw	128
  3115  02D9  027F               	subwf	btemp+1,w
  3116  02DA  1D03               	skipz
  3117  02DB  2ADE               	goto	u2395
  3118  02DC  3003               	movlw	3
  3119  02DD  0278               	subwf	set_time@key_count,w
  3120  02DE                     u2395:	
  3121  02DE  1803               	skipnc
  3122  02DF  2AE1               	goto	u2391
  3123  02E0  2AE2               	goto	u2390
  3124  02E1                     u2391:	
  3125  02E1  2AFC               	goto	l2753
  3126  02E2                     u2390:	
  3127  02E2                     l2751:	
  3128                           
  3129                           ;main.c: 267: ;main.c: 268: 
  3130  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3131  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3132  02E4  083B               	movf	_sec+1,w
  3133  02E5  00F4               	movwf	___wmul@multiplier+1
  3134  02E6  083A               	movf	_sec,w
  3135  02E7  00F3               	movwf	___wmul@multiplier
  3136  02E8  300A               	movlw	10
  3137  02E9  00F5               	movwf	___wmul@multiplicand
  3138  02EA  3000               	movlw	0
  3139  02EB  00F6               	movwf	___wmul@multiplicand+1
  3140  02EC  120A  158A  23E1  120A  118A  	fcall	___wmul
  3141  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3142  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3143  02F3  0855               	movf	set_time@key,w
  3144  02F4  0773               	addwf	?___wmul,w
  3145  02F5  00BA               	movwf	_sec
  3146  02F6  3000               	movlw	0
  3147  02F7  1803               	skipnc
  3148  02F8  3001               	movlw	1
  3149  02F9  0774               	addwf	?___wmul+1,w
  3150  02FA  00BB               	movwf	_sec+1
  3151                           
  3152                           ;main.c: 270:     else if(key == '*') {
  3153  02FB  2B2F               	goto	l2759
  3154  02FC                     l2753:	
  3155  02FC  0879               	movf	set_time@key_count+1,w
  3156  02FD  3A80               	xorlw	128
  3157  02FE  00FF               	movwf	btemp+1
  3158  02FF  3080               	movlw	128
  3159  0300  027F               	subwf	btemp+1,w
  3160  0301  1D03               	skipz
  3161  0302  2B05               	goto	u2405
  3162  0303  3003               	movlw	3
  3163  0304  0278               	subwf	set_time@key_count,w
  3164  0305                     u2405:	
  3165  0305  1C03               	skipc
  3166  0306  2B08               	goto	u2401
  3167  0307  2B09               	goto	u2400
  3168  0308                     u2401:	
  3169  0308  2B2F               	goto	l2759
  3170  0309                     u2400:	
  3171  0309                     l2755:	
  3172  0309  0879               	movf	set_time@key_count+1,w
  3173  030A  3A80               	xorlw	128
  3174  030B  00FF               	movwf	btemp+1
  3175  030C  3080               	movlw	128
  3176  030D  027F               	subwf	btemp+1,w
  3177  030E  1D03               	skipz
  3178  030F  2B12               	goto	u2415
  3179  0310  3005               	movlw	5
  3180  0311  0278               	subwf	set_time@key_count,w
  3181  0312                     u2415:	
  3182  0312  1803               	skipnc
  3183  0313  2B15               	goto	u2411
  3184  0314  2B16               	goto	u2410
  3185  0315                     u2411:	
  3186  0315  2B2F               	goto	l2759
  3187  0316                     u2410:	
  3188  0316                     l2757:	
  3189                           
  3190                           ;main.c: 272:         {;main.c: 273:             sec = 0;
  3191  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0318  083D               	movf	_min+1,w
  3194  0319  00F4               	movwf	___wmul@multiplier+1
  3195  031A  083C               	movf	_min,w
  3196  031B  00F3               	movwf	___wmul@multiplier
  3197  031C  300A               	movlw	10
  3198  031D  00F5               	movwf	___wmul@multiplicand
  3199  031E  3000               	movlw	0
  3200  031F  00F6               	movwf	___wmul@multiplicand+1
  3201  0320  120A  158A  23E1  120A  118A  	fcall	___wmul
  3202  0325  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0326  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0327  0855               	movf	set_time@key,w
  3205  0328  0773               	addwf	?___wmul,w
  3206  0329  00BC               	movwf	_min
  3207  032A  3000               	movlw	0
  3208  032B  1803               	skipnc
  3209  032C  3001               	movlw	1
  3210  032D  0774               	addwf	?___wmul+1,w
  3211  032E  00BD               	movwf	_min+1
  3212  032F                     l2759:	
  3213                           
  3214                           ;main.c: 275:             blink_pos = 0;
  3215  032F  0879               	movf	set_time@key_count+1,w
  3216  0330  3A80               	xorlw	128
  3217  0331  00FF               	movwf	btemp+1
  3218  0332  3080               	movlw	128
  3219  0333  027F               	subwf	btemp+1,w
  3220  0334  1D03               	skipz
  3221  0335  2B38               	goto	u2425
  3222  0336  3002               	movlw	2
  3223  0337  0278               	subwf	set_time@key_count,w
  3224  0338                     u2425:	
  3225  0338  1803               	skipnc
  3226  0339  2B3B               	goto	u2421
  3227  033A  2B3C               	goto	u2420
  3228  033B                     u2421:	
  3229  033B  2B41               	goto	l2763
  3230  033C                     u2420:	
  3231  033C                     l2761:	
  3232                           
  3233                           ;main.c: 276:         };main.c: 277:         else if(key_count > 2 && key_count < 5)
  3234  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3235  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3236  033E  01AE               	clrf	set_time@blink_pos
  3237  033F  01AF               	clrf	set_time@blink_pos+1
  3238                           
  3239                           ;main.c: 278:         {
  3240  0340  2BB4               	goto	l2795
  3241  0341                     l2763:	
  3242  0341  0879               	movf	set_time@key_count+1,w
  3243  0342  3A80               	xorlw	128
  3244  0343  00FF               	movwf	btemp+1
  3245  0344  3080               	movlw	128
  3246  0345  027F               	subwf	btemp+1,w
  3247  0346  1D03               	skipz
  3248  0347  2B4A               	goto	u2435
  3249  0348  3002               	movlw	2
  3250  0349  0278               	subwf	set_time@key_count,w
  3251  034A                     u2435:	
  3252  034A  1C03               	skipc
  3253  034B  2B4D               	goto	u2431
  3254  034C  2B4E               	goto	u2430
  3255  034D                     u2431:	
  3256  034D  2BB4               	goto	l2795
  3257  034E                     u2430:	
  3258  034E                     l2765:	
  3259  034E  0879               	movf	set_time@key_count+1,w
  3260  034F  3A80               	xorlw	128
  3261  0350  00FF               	movwf	btemp+1
  3262  0351  3080               	movlw	128
  3263  0352  027F               	subwf	btemp+1,w
  3264  0353  1D03               	skipz
  3265  0354  2B57               	goto	u2445
  3266  0355  3004               	movlw	4
  3267  0356  0278               	subwf	set_time@key_count,w
  3268  0357                     u2445:	
  3269  0357  1803               	skipnc
  3270  0358  2B5A               	goto	u2441
  3271  0359  2B5B               	goto	u2440
  3272  035A                     u2441:	
  3273  035A  2BB4               	goto	l2795
  3274  035B                     u2440:	
  3275  035B                     l2767:	
  3276                           
  3277                           ;main.c: 280:             key_count = 2;;main.c: 281:             blink_pos = 1;
  3278  035B  3001               	movlw	1
  3279  035C  1283               	bcf	3,5	;RP0=0, select bank0
  3280  035D  1303               	bcf	3,6	;RP1=0, select bank0
  3281  035E  00AE               	movwf	set_time@blink_pos
  3282  035F  3000               	movlw	0
  3283  0360  00AF               	movwf	set_time@blink_pos+1
  3284  0361  2BB4               	goto	l2795
  3285  0362                     l2769:	
  3286  0362  302A               	movlw	42
  3287  0363  0655               	xorwf	set_time@key,w
  3288  0364  1D03               	btfss	3,2
  3289  0365  2B67               	goto	u2451
  3290  0366  2B68               	goto	u2450
  3291  0367                     u2451:	
  3292  0367  2BA1               	goto	l2785
  3293  0368                     u2450:	
  3294  0368                     l2771:	
  3295                           
  3296                           ;main.c: 288:         clear_display();
  3297  0368  0879               	movf	set_time@key_count+1,w
  3298  0369  3A80               	xorlw	128
  3299  036A  00FF               	movwf	btemp+1
  3300  036B  3080               	movlw	128
  3301  036C  027F               	subwf	btemp+1,w
  3302  036D  1D03               	skipz
  3303  036E  2B71               	goto	u2465
  3304  036F  3003               	movlw	3
  3305  0370  0278               	subwf	set_time@key_count,w
  3306  0371                     u2465:	
  3307  0371  1803               	skipnc
  3308  0372  2B74               	goto	u2461
  3309  0373  2B75               	goto	u2460
  3310  0374                     u2461:	
  3311  0374  2B7E               	goto	l2775
  3312  0375                     u2460:	
  3313  0375                     l2773:	
  3314                           
  3315                           ;main.c: 289:         TMR2ON = 1;;main.c: 290:         RC2 = 1;
  3316  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0377  01BA               	clrf	_sec
  3319  0378  01BB               	clrf	_sec+1
  3320                           
  3321                           ;main.c: 291:         operation_mode = 0x06;
  3322  0379  01F8               	clrf	set_time@key_count
  3323  037A  01F9               	clrf	set_time@key_count+1
  3324                           
  3325                           ;main.c: 292: 
  3326  037B  01AE               	clrf	set_time@blink_pos
  3327  037C  01AF               	clrf	set_time@blink_pos+1
  3328                           
  3329                           ;main.c: 293:     }
  3330  037D  2BB4               	goto	l2795
  3331  037E                     l2775:	
  3332  037E  0879               	movf	set_time@key_count+1,w
  3333  037F  3A80               	xorlw	128
  3334  0380  00FF               	movwf	btemp+1
  3335  0381  3080               	movlw	128
  3336  0382  027F               	subwf	btemp+1,w
  3337  0383  1D03               	skipz
  3338  0384  2B87               	goto	u2475
  3339  0385  3003               	movlw	3
  3340  0386  0278               	subwf	set_time@key_count,w
  3341  0387                     u2475:	
  3342  0387  1C03               	skipc
  3343  0388  2B8A               	goto	u2471
  3344  0389  2B8B               	goto	u2470
  3345  038A                     u2471:	
  3346  038A  2BB4               	goto	l2795
  3347  038B                     u2470:	
  3348  038B                     l2777:	
  3349  038B  0879               	movf	set_time@key_count+1,w
  3350  038C  3A80               	xorlw	128
  3351  038D  00FF               	movwf	btemp+1
  3352  038E  3080               	movlw	128
  3353  038F  027F               	subwf	btemp+1,w
  3354  0390  1D03               	skipz
  3355  0391  2B94               	goto	u2485
  3356  0392  3005               	movlw	5
  3357  0393  0278               	subwf	set_time@key_count,w
  3358  0394                     u2485:	
  3359  0394  1803               	skipnc
  3360  0395  2B97               	goto	u2481
  3361  0396  2B98               	goto	u2480
  3362  0397                     u2481:	
  3363  0397  2BB4               	goto	l2795
  3364  0398                     u2480:	
  3365  0398                     l2779:	
  3366                           
  3367                           ;main.c: 295: ;main.c: 296: 
  3368  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3370  039A  01BC               	clrf	_min
  3371  039B  01BD               	clrf	_min+1
  3372  039C                     l2781:	
  3373                           
  3374                           ;main.c: 297: 
  3375  039C  3002               	movlw	2
  3376  039D  00F8               	movwf	set_time@key_count
  3377  039E  3000               	movlw	0
  3378  039F  00F9               	movwf	set_time@key_count+1
  3379  03A0  2B5B               	goto	l2767
  3380  03A1                     l2785:	
  3381  03A1  3023               	movlw	35
  3382  03A2  0655               	xorwf	set_time@key,w
  3383  03A3  1D03               	btfss	3,2
  3384  03A4  2BA6               	goto	u2491
  3385  03A5  2BA7               	goto	u2490
  3386  03A6                     u2491:	
  3387  03A6  2BB4               	goto	l2795
  3388  03A7                     u2490:	
  3389  03A7                     l2787:	
  3390                           
  3391                           ;main.c: 303: ;main.c: 305:     min_array[1] = min % 10 + '0';
  3392  03A7  120A  158A  2334  120A  118A  	fcall	_clear_display
  3393  03AC                     l2789:	
  3394                           
  3395                           ;main.c: 306:     min_array[2] = '\0';
  3396  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3397  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3398  03AE  1512               	bsf	18,2	;volatile
  3399  03AF                     l2791:	
  3400                           
  3401                           ;main.c: 307: 
  3402  03AF  1507               	bsf	7,2	;volatile
  3403  03B0                     l2793:	
  3404                           
  3405                           ;main.c: 308: 
  3406  03B0  3006               	movlw	6
  3407  03B1  00C0               	movwf	_operation_mode
  3408  03B2  3000               	movlw	0
  3409  03B3  00C1               	movwf	_operation_mode+1
  3410  03B4                     l2795:	
  3411                           
  3412                           ;main.c: 316:     if(blink)
  3413  03B4  300A               	movlw	10
  3414  03B5  00F3               	movwf	___awdiv@divisor
  3415  03B6  3000               	movlw	0
  3416  03B7  00F4               	movwf	___awdiv@divisor+1
  3417  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3418  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3419  03BA  083B               	movf	_sec+1,w
  3420  03BB  00F6               	movwf	___awdiv@dividend+1
  3421  03BC  083A               	movf	_sec,w
  3422  03BD  00F5               	movwf	___awdiv@dividend
  3423  03BE  120A  158A  2606  120A  118A  	fcall	___awdiv
  3424  03C3  0873               	movf	?___awdiv,w
  3425  03C4  3E30               	addlw	48
  3426  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3427  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3428  03C7  00D3               	movwf	??_set_time
  3429  03C8  0853               	movf	??_set_time,w
  3430  03C9  00C2               	movwf	_sec_array
  3431  03CA                     l2797:	
  3432                           
  3433                           ;main.c: 317:     {
  3434  03CA  300A               	movlw	10
  3435  03CB  00CC               	movwf	___awmod@divisor
  3436  03CC  3000               	movlw	0
  3437  03CD  00CD               	movwf	___awmod@divisor+1
  3438  03CE  083B               	movf	_sec+1,w
  3439  03CF  00CF               	movwf	___awmod@dividend+1
  3440  03D0  083A               	movf	_sec,w
  3441  03D1  00CE               	movwf	___awmod@dividend
  3442  03D2  120A  158A  2548  120A  118A  	fcall	___awmod
  3443  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3444  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3445  03D9  084C               	movf	?___awmod,w
  3446  03DA  3E30               	addlw	48
  3447  03DB  00D3               	movwf	??_set_time
  3448  03DC  0853               	movf	??_set_time,w
  3449  03DD  00C3               	movwf	_sec_array+1
  3450  03DE                     l2799:	
  3451                           
  3452                           ;main.c: 318:         switch(blink_pos)
  3453  03DE  01C4               	clrf	_sec_array+2
  3454  03DF                     l2801:	
  3455                           
  3456                           ;main.c: 321:                 clcd_print("  ", (0xC0 + 9));
  3457  03DF  300A               	movlw	10
  3458  03E0  00F3               	movwf	___awdiv@divisor
  3459  03E1  3000               	movlw	0
  3460  03E2  00F4               	movwf	___awdiv@divisor+1
  3461  03E3  083D               	movf	_min+1,w
  3462  03E4  00F6               	movwf	___awdiv@dividend+1
  3463  03E5  083C               	movf	_min,w
  3464  03E6  00F5               	movwf	___awdiv@dividend
  3465  03E7  120A  158A  2606  120A  118A  	fcall	___awdiv
  3466  03EC  0873               	movf	?___awdiv,w
  3467  03ED  3E30               	addlw	48
  3468  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3469  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3470  03F0  00D3               	movwf	??_set_time
  3471  03F1  0853               	movf	??_set_time,w
  3472  03F2  00C5               	movwf	_min_array
  3473  03F3                     l2803:	
  3474                           
  3475                           ;main.c: 322:                 break;
  3476  03F3  300A               	movlw	10
  3477  03F4  00CC               	movwf	___awmod@divisor
  3478  03F5  3000               	movlw	0
  3479  03F6  00CD               	movwf	___awmod@divisor+1
  3480  03F7  083D               	movf	_min+1,w
  3481  03F8  00CF               	movwf	___awmod@dividend+1
  3482  03F9  083C               	movf	_min,w
  3483  03FA  00CE               	movwf	___awmod@dividend
  3484  03FB  120A  158A  2548  120A  118A  	fcall	___awmod
  3485  0400  1283               	bcf	3,5	;RP0=0, select bank0
  3486  0401  1303               	bcf	3,6	;RP1=0, select bank0
  3487  0402  084C               	movf	?___awmod,w
  3488  0403  3E30               	addlw	48
  3489  0404  00D3               	movwf	??_set_time
  3490  0405  0853               	movf	??_set_time,w
  3491  0406  00C6               	movwf	_min_array+1
  3492  0407                     l2805:	
  3493                           
  3494                           ;main.c: 323:             case 1:
  3495  0407  01C7               	clrf	_min_array+2
  3496  0408                     l2807:	
  3497                           
  3498                           ;main.c: 326:         }
  3499  0408  3001               	movlw	1
  3500  0409  07B0               	addwf	set_time@wait,f
  3501  040A  1803               	skipnc
  3502  040B  0AB1               	incf	set_time@wait+1,f
  3503  040C  3000               	movlw	0
  3504  040D  07B1               	addwf	set_time@wait+1,f
  3505  040E  3033               	movlw	51
  3506  040F  0630               	xorwf	set_time@wait,w
  3507  0410  0431               	iorwf	set_time@wait+1,w
  3508  0411  1D03               	btfss	3,2
  3509  0412  2C14               	goto	u2501
  3510  0413  2C15               	goto	u2500
  3511  0414                     u2501:	
  3512  0414  2C41               	goto	l2817
  3513  0415                     u2500:	
  3514  0415                     l2809:	
  3515                           
  3516                           ;main.c: 327:     };main.c: 328: }
  3517  0415  01B0               	clrf	set_time@wait
  3518  0416  01B1               	clrf	set_time@wait+1
  3519  0417                     l2811:	
  3520                           
  3521                           ;main.c: 329: 
  3522  0417  0832               	movf	set_time@blink,w
  3523  0418  0433               	iorwf	set_time@blink+1,w
  3524  0419  1903               	btfsc	3,2
  3525  041A  2C1C               	goto	u2511
  3526  041B  2C1E               	goto	u2510
  3527  041C                     u2511:	
  3528  041C  3001               	movlw	1
  3529  041D  2C1F               	goto	u2520
  3530  041E                     u2510:	
  3531  041E  3000               	movlw	0
  3532  041F                     u2520:	
  3533  041F  00D3               	movwf	??_set_time
  3534  0420  01D4               	clrf	??_set_time+1
  3535  0421  0853               	movf	??_set_time,w
  3536  0422  00B2               	movwf	set_time@blink
  3537  0423  0854               	movf	??_set_time+1,w
  3538  0424  00B3               	movwf	set_time@blink+1
  3539  0425                     l2813:	
  3540                           
  3541                           ;main.c: 330: char door_status_check(void)
  3542  0425  3045               	movlw	(low (_min_array| 0))& (0+255)
  3543  0426  00C8               	movwf	clcd_print@str
  3544  0427  3000               	movlw	0
  3545  0428  00C9               	movwf	clcd_print@str+1
  3546  0429  30C6               	movlw	198
  3547  042A  00D3               	movwf	??_set_time
  3548  042B  0853               	movf	??_set_time,w
  3549  042C  00CA               	movwf	clcd_print@addr
  3550  042D  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3551  0432                     l2815:	
  3552                           
  3553                           ;main.c: 331: {
  3554  0432  3042               	movlw	(low (_sec_array| 0))& (0+255)
  3555  0433  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0434  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0435  00C8               	movwf	clcd_print@str
  3558  0436  3000               	movlw	0
  3559  0437  00C9               	movwf	clcd_print@str+1
  3560  0438  30C9               	movlw	201
  3561  0439  00D3               	movwf	??_set_time
  3562  043A  0853               	movf	??_set_time,w
  3563  043B  00CA               	movwf	clcd_print@addr
  3564  043C  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3565  0441                     l2817:	
  3566                           
  3567                           ;main.c: 333:     if(RB3 == 0)
  3568  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0443  0832               	movf	set_time@blink,w
  3571  0444  0433               	iorwf	set_time@blink+1,w
  3572  0445  1903               	btfsc	3,2
  3573  0446  2C48               	goto	u2531
  3574  0447  2C49               	goto	u2530
  3575  0448                     u2531:	
  3576  0448  2C73               	goto	l165
  3577  0449                     u2530:	
  3578  0449  2C66               	goto	l2827
  3579  044A                     l2821:	
  3580                           
  3581                           ;main.c: 338:         clear_display();
  3582  044A  300E               	movlw	low ((STR_18+14)| (0+32768))
  3583  044B  00C8               	movwf	clcd_print@str
  3584  044C  3085               	movlw	high ((STR_18+14)| (0+32768))
  3585  044D  00C9               	movwf	clcd_print@str+1
  3586  044E  30C9               	movlw	201
  3587  044F  00D3               	movwf	??_set_time
  3588  0450  0853               	movf	??_set_time,w
  3589  0451  00CA               	movwf	clcd_print@addr
  3590  0452  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3591                           
  3592                           ;main.c: 339:         clcd_print("Door Status:OPEN", (0xC0 + 0));
  3593  0457  2C73               	goto	l165
  3594  0458                     l2823:	
  3595                           
  3596                           ;main.c: 341:         while(RB3 == 0)
  3597  0458  300E               	movlw	low ((STR_18+14)| (0+32768))
  3598  0459  00C8               	movwf	clcd_print@str
  3599  045A  3085               	movlw	high ((STR_18+14)| (0+32768))
  3600  045B  00C9               	movwf	clcd_print@str+1
  3601  045C  30C6               	movlw	198
  3602  045D  00D3               	movwf	??_set_time
  3603  045E  0853               	movf	??_set_time,w
  3604  045F  00CA               	movwf	clcd_print@addr
  3605  0460  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3606                           
  3607                           ;main.c: 342:         {
  3608  0465  2C73               	goto	l165
  3609  0466                     l2827:	
  3610                           
  3611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3612                           ; Switch size 1, requested type "simple"
  3613                           ; Number of cases is 1, Range of values is 0 to 0
  3614                           ; switch strategies available:
  3615                           ; Name         Instructions Cycles
  3616                           ; simple_byte            4     3 (average)
  3617                           ; direct_byte           11     8 (fixed)
  3618                           ; jumptable            260     6 (fixed)
  3619                           ;	Chosen strategy is simple_byte
  3620  0466  082F               	movf	set_time@blink_pos+1,w
  3621  0467  3A00               	xorlw	0	; case 0
  3622  0468  1903               	skipnz
  3623  0469  2C6B               	goto	l3199
  3624  046A  2C73               	goto	l165
  3625  046B                     l3199:	
  3626                           
  3627                           ; Switch size 1, requested type "simple"
  3628                           ; Number of cases is 2, Range of values is 0 to 1
  3629                           ; switch strategies available:
  3630                           ; Name         Instructions Cycles
  3631                           ; simple_byte            7     4 (average)
  3632                           ; direct_byte           14     8 (fixed)
  3633                           ; jumptable            260     6 (fixed)
  3634                           ;	Chosen strategy is simple_byte
  3635  046B  082E               	movf	set_time@blink_pos,w
  3636  046C  3A00               	xorlw	0	; case 0
  3637  046D  1903               	skipnz
  3638  046E  2C4A               	goto	l2821
  3639  046F  3A01               	xorlw	1	; case 1
  3640  0470  1903               	skipnz
  3641  0471  2C58               	goto	l2823
  3642  0472  2C73               	goto	l165
  3643  0473                     l165:	
  3644  0473  0008               	return
  3645  0474                     __end_of_set_time:	
  3646                           
  3647                           	psect	text8
  3648  0028                     __ptext8:	
  3649 ;; *************** function _set_temp *****************
  3650 ;; Defined at:
  3651 ;;		line 414 in file "main.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  key             1    wreg     unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  key             1   16[BANK0 ] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      unsigned char 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         0       0       0       0       0
  3666 ;;      Locals:         0       1       0       0       0
  3667 ;;      Temps:          0       3       0       0       0
  3668 ;;      Totals:         0       4       0       0       0
  3669 ;;Total ram usage:        4 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    4
  3672 ;; This function calls:
  3673 ;;		___awdiv
  3674 ;;		___awmod
  3675 ;;		___wmul
  3676 ;;		_clcd_print
  3677 ;;		_clcd_putch
  3678 ;;		_clear_display
  3679 ;;		_door_status_check
  3680 ;; This function is called by:
  3681 ;;		_operation_call
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _set_temp
  3687  0028                     _set_temp:	
  3688                           
  3689                           ;incstack = 0
  3690                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3691                           ;set_temp@key stored from wreg
  3692  0028  1283               	bcf	3,5	;RP0=0, select bank0
  3693  0029  1303               	bcf	3,6	;RP1=0, select bank0
  3694  002A  00D8               	movwf	set_temp@key
  3695  002B                     l2833:	
  3696                           
  3697                           ;main.c: 414: char set_temp(unsigned char key);main.c: 415: {;main.c: 416:     static in
      +                          t blink, wait, key_count, temp, door;;main.c: 417:     if(reset_flag == 0x13)
  3698  002B  3013               	movlw	19
  3699  002C  063E               	xorwf	_reset_flag,w
  3700  002D  043F               	iorwf	_reset_flag+1,w
  3701  002E  1D03               	btfss	3,2
  3702  002F  2831               	goto	u2541
  3703  0030  2832               	goto	u2540
  3704  0031                     u2541:	
  3705  0031  2884               	goto	l2855
  3706  0032                     u2540:	
  3707  0032                     l2835:	
  3708                           
  3709                           ;main.c: 418:     {;main.c: 419:         key = 0xFF;
  3710  0032  30FF               	movlw	255
  3711  0033  00D5               	movwf	??_set_temp
  3712  0034  0855               	movf	??_set_temp,w
  3713  0035  00D8               	movwf	set_temp@key
  3714  0036                     l2837:	
  3715                           
  3716                           ;main.c: 420:         key_count = 0;
  3717  0036  01A8               	clrf	set_temp@key_count
  3718  0037  01A9               	clrf	set_temp@key_count+1
  3719  0038                     l2839:	
  3720                           
  3721                           ;main.c: 421:         blink = 0;
  3722  0038  01AC               	clrf	set_temp@blink
  3723  0039  01AD               	clrf	set_temp@blink+1
  3724  003A                     l2841:	
  3725                           
  3726                           ;main.c: 422:         temp = 0;
  3727  003A  01A6               	clrf	set_temp@temp
  3728  003B  01A7               	clrf	set_temp@temp+1
  3729  003C                     l2843:	
  3730                           
  3731                           ;main.c: 423:         wait = 0;
  3732  003C  01AA               	clrf	set_temp@wait
  3733  003D  01AB               	clrf	set_temp@wait+1
  3734  003E                     l2845:	
  3735                           
  3736                           ;main.c: 424:         clcd_print("SET TEMP. ( ", (0x80 + 0));
  3737  003E  30E9               	movlw	low (STR_21| (0+32768))
  3738  003F  00C8               	movwf	clcd_print@str
  3739  0040  3085               	movlw	high (STR_21| (0+32768))
  3740  0041  00C9               	movwf	clcd_print@str+1
  3741  0042  3080               	movlw	128
  3742  0043  00D5               	movwf	??_set_temp
  3743  0044  0855               	movf	??_set_temp,w
  3744  0045  00CA               	movwf	clcd_print@addr
  3745  0046  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3746  004B                     l2847:	
  3747                           
  3748                           ;main.c: 425:         clcd_putch(0xDF, (0x80 + 12));
  3749  004B  308C               	movlw	140
  3750  004C  1283               	bcf	3,5	;RP0=0, select bank0
  3751  004D  1303               	bcf	3,6	;RP1=0, select bank0
  3752  004E  00D5               	movwf	??_set_temp
  3753  004F  0855               	movf	??_set_temp,w
  3754  0050  00D3               	movwf	clcd_putch@addr
  3755  0051  30DF               	movlw	223
  3756  0052  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  3757  0057                     l2849:	
  3758                           
  3759                           ;main.c: 426:         clcd_print("C )", (0x80 + 13));
  3760  0057  304A               	movlw	low (STR_22| (0+32768))
  3761  0058  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0059  1303               	bcf	3,6	;RP1=0, select bank0
  3763  005A  00C8               	movwf	clcd_print@str
  3764  005B  3086               	movlw	high (STR_22| (0+32768))
  3765  005C  00C9               	movwf	clcd_print@str+1
  3766  005D  308D               	movlw	141
  3767  005E  00D5               	movwf	??_set_temp
  3768  005F  0855               	movf	??_set_temp,w
  3769  0060  00CA               	movwf	clcd_print@addr
  3770  0061  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3771  0066                     l2851:	
  3772                           
  3773                           ;main.c: 427:         clcd_print(" TEMP : 000 ", (0xC0 + 0));
  3774  0066  30F6               	movlw	low (STR_23| (0+32768))
  3775  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0069  00C8               	movwf	clcd_print@str
  3778  006A  3085               	movlw	high (STR_23| (0+32768))
  3779  006B  00C9               	movwf	clcd_print@str+1
  3780  006C  30C0               	movlw	192
  3781  006D  00D5               	movwf	??_set_temp
  3782  006E  0855               	movf	??_set_temp,w
  3783  006F  00CA               	movwf	clcd_print@addr
  3784  0070  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3785  0075                     l2853:	
  3786                           
  3787                           ;main.c: 429:         clcd_print("*:CLEAR  #:ENTER", (0xD0 + 0));
  3788  0075  30AA               	movlw	low (STR_10| (0+32768))
  3789  0076  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0077  1303               	bcf	3,6	;RP1=0, select bank0
  3791  0078  00C8               	movwf	clcd_print@str
  3792  0079  3085               	movlw	high (STR_10| (0+32768))
  3793  007A  00C9               	movwf	clcd_print@str+1
  3794  007B  30D0               	movlw	208
  3795  007C  00D5               	movwf	??_set_temp
  3796  007D  0855               	movf	??_set_temp,w
  3797  007E  00CA               	movwf	clcd_print@addr
  3798  007F  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3799  0084                     l2855:	
  3800                           
  3801                           ;main.c: 434:     if(key != 0xFF && key != '*' && key != '#')
  3802  0084  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0085  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0086  0A58               	incf	set_temp@key,w
  3805  0087  1903               	btfsc	3,2
  3806  0088  288A               	goto	u2551
  3807  0089  288B               	goto	u2550
  3808  008A                     u2551:	
  3809  008A  28C4               	goto	l2867
  3810  008B                     u2550:	
  3811  008B                     l2857:	
  3812  008B  302A               	movlw	42
  3813  008C  0658               	xorwf	set_temp@key,w
  3814  008D  1903               	btfsc	3,2
  3815  008E  2890               	goto	u2561
  3816  008F  2891               	goto	u2560
  3817  0090                     u2561:	
  3818  0090  28C4               	goto	l2867
  3819  0091                     u2560:	
  3820  0091                     l2859:	
  3821  0091  3023               	movlw	35
  3822  0092  0658               	xorwf	set_temp@key,w
  3823  0093  1903               	btfsc	3,2
  3824  0094  2896               	goto	u2571
  3825  0095  2897               	goto	u2570
  3826  0096                     u2571:	
  3827  0096  28C4               	goto	l2867
  3828  0097                     u2570:	
  3829  0097                     l2861:	
  3830                           
  3831                           ;main.c: 435:     {;main.c: 437:         key_count++;
  3832  0097  3001               	movlw	1
  3833  0098  07A8               	addwf	set_temp@key_count,f
  3834  0099  1803               	skipnc
  3835  009A  0AA9               	incf	set_temp@key_count+1,f
  3836  009B  3000               	movlw	0
  3837  009C  07A9               	addwf	set_temp@key_count+1,f
  3838  009D                     l2863:	
  3839                           
  3840                           ;main.c: 438:         if(key_count <= 3)
  3841  009D  0829               	movf	set_temp@key_count+1,w
  3842  009E  3A80               	xorlw	128
  3843  009F  00FF               	movwf	btemp+1
  3844  00A0  3080               	movlw	128
  3845  00A1  027F               	subwf	btemp+1,w
  3846  00A2  1D03               	skipz
  3847  00A3  28A6               	goto	u2585
  3848  00A4  3004               	movlw	4
  3849  00A5  0228               	subwf	set_temp@key_count,w
  3850  00A6                     u2585:	
  3851  00A6  1803               	skipnc
  3852  00A7  28A9               	goto	u2581
  3853  00A8  28AA               	goto	u2580
  3854  00A9                     u2581:	
  3855  00A9  29D5               	goto	l2923
  3856  00AA                     u2580:	
  3857  00AA                     l2865:	
  3858                           
  3859                           ;main.c: 439:         {;main.c: 440:             temp = temp * 10 + key;
  3860  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  3861  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  3862  00AC  0827               	movf	set_temp@temp+1,w
  3863  00AD  00F4               	movwf	___wmul@multiplier+1
  3864  00AE  0826               	movf	set_temp@temp,w
  3865  00AF  00F3               	movwf	___wmul@multiplier
  3866  00B0  300A               	movlw	10
  3867  00B1  00F5               	movwf	___wmul@multiplicand
  3868  00B2  3000               	movlw	0
  3869  00B3  00F6               	movwf	___wmul@multiplicand+1
  3870  00B4  120A  158A  23E1  120A  118A  	fcall	___wmul
  3871  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  3872  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  3873  00BB  0858               	movf	set_temp@key,w
  3874  00BC  0773               	addwf	?___wmul,w
  3875  00BD  00A6               	movwf	set_temp@temp
  3876  00BE  3000               	movlw	0
  3877  00BF  1803               	skipnc
  3878  00C0  3001               	movlw	1
  3879  00C1  0774               	addwf	?___wmul+1,w
  3880  00C2  00A7               	movwf	set_temp@temp+1
  3881  00C3  29D5               	goto	l2923
  3882  00C4                     l2867:	
  3883  00C4  302A               	movlw	42
  3884  00C5  0658               	xorwf	set_temp@key,w
  3885  00C6  1D03               	btfss	3,2
  3886  00C7  28C9               	goto	u2591
  3887  00C8  28CA               	goto	u2590
  3888  00C9                     u2591:	
  3889  00C9  28CF               	goto	l2871
  3890  00CA                     u2590:	
  3891  00CA                     l2869:	
  3892                           
  3893                           ;main.c: 446:     {;main.c: 447:         key_count = 0;
  3894  00CA  01A8               	clrf	set_temp@key_count
  3895  00CB  01A9               	clrf	set_temp@key_count+1
  3896                           
  3897                           ;main.c: 448:         temp = 0;
  3898  00CC  01A6               	clrf	set_temp@temp
  3899  00CD  01A7               	clrf	set_temp@temp+1
  3900                           
  3901                           ;main.c: 449:     }
  3902  00CE  29D5               	goto	l2923
  3903  00CF                     l2871:	
  3904  00CF  3023               	movlw	35
  3905  00D0  0658               	xorwf	set_temp@key,w
  3906  00D1  1D03               	btfss	3,2
  3907  00D2  28D4               	goto	u2601
  3908  00D3  28D5               	goto	u2600
  3909  00D4                     u2601:	
  3910  00D4  29D5               	goto	l2923
  3911  00D5                     u2600:	
  3912  00D5                     l2873:	
  3913                           
  3914                           ;main.c: 452:     {;main.c: 454:         if(temp >= 250)
  3915  00D5  0827               	movf	set_temp@temp+1,w
  3916  00D6  3A80               	xorlw	128
  3917  00D7  00FF               	movwf	btemp+1
  3918  00D8  3080               	movlw	128
  3919  00D9  027F               	subwf	btemp+1,w
  3920  00DA  1D03               	skipz
  3921  00DB  28DE               	goto	u2615
  3922  00DC  30FA               	movlw	250
  3923  00DD  0226               	subwf	set_temp@temp,w
  3924  00DE                     u2615:	
  3925  00DE  1C03               	skipc
  3926  00DF  28E1               	goto	u2611
  3927  00E0  28E2               	goto	u2610
  3928  00E1                     u2611:	
  3929  00E1  2911               	goto	l2893
  3930  00E2                     u2610:	
  3931  00E2                     l2875:	
  3932                           
  3933                           ;main.c: 455:         {;main.c: 456:             clear_display();
  3934  00E2  120A  158A  2334  120A  118A  	fcall	_clear_display
  3935  00E7                     l2877:	
  3936                           
  3937                           ;main.c: 457:             clcd_print("  Invalid Temp. ", (0xC0 + 0));
  3938  00E7  3055               	movlw	low (STR_25| (0+32768))
  3939  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3940  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3941  00EA  00C8               	movwf	clcd_print@str
  3942  00EB  3085               	movlw	high (STR_25| (0+32768))
  3943  00EC  00C9               	movwf	clcd_print@str+1
  3944  00ED  30C0               	movlw	192
  3945  00EE  00D5               	movwf	??_set_temp
  3946  00EF  0855               	movf	??_set_temp,w
  3947  00F0  00CA               	movwf	clcd_print@addr
  3948  00F1  120A  158A  240C  120A  118A  	fcall	_clcd_print
  3949  00F6                     l2879:	
  3950                           
  3951                           ;main.c: 458:             RC1 = 1;
  3952  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3953  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3954  00F8  1487               	bsf	7,1	;volatile
  3955  00F9                     l2881:	
  3956                           
  3957                           ;main.c: 459:             _delay((unsigned long)((2000)*(20000000/4000.0)));
  3958  00F9  3033               	movlw	51
  3959  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  3960  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  3961  00FC  00D7               	movwf	??_set_temp+2
  3962  00FD  30BB               	movlw	187
  3963  00FE  00D6               	movwf	??_set_temp+1
  3964  00FF  30DF               	movlw	223
  3965  0100  00D5               	movwf	??_set_temp
  3966  0101                     u2907:	
  3967  0101  0BD5               	decfsz	??_set_temp,f
  3968  0102  2901               	goto	u2907
  3969  0103  0BD6               	decfsz	??_set_temp+1,f
  3970  0104  2901               	goto	u2907
  3971  0105  0BD7               	decfsz	??_set_temp+2,f
  3972  0106  2901               	goto	u2907
  3973  0107                     l2883:	
  3974                           
  3975                           ;main.c: 460:             RC1 = 0;
  3976  0107  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0108  1303               	bcf	3,6	;RP1=0, select bank0
  3978  0109  1087               	bcf	7,1	;volatile
  3979  010A                     l2885:	
  3980                           
  3981                           ;main.c: 461:             clear_display();
  3982  010A  120A  158A  2334  120A  118A  	fcall	_clear_display
  3983  010F                     l2887:	
  3984                           
  3985                           ;main.c: 462:             return 1;
  3986  010F  3001               	movlw	1
  3987  0110  2A69               	goto	l197
  3988  0111                     l2893:	
  3989                           
  3990                           ;main.c: 465:         {;main.c: 466:             clear_display();
  3991  0111  120A  158A  2334  120A  118A  	fcall	_clear_display
  3992  0116                     l2895:	
  3993                           
  3994                           ;main.c: 467:             clcd_print("  Pre-Heating  ", (0x80 + 0));
  3995  0116  30BB               	movlw	low (STR_26| (0+32768))
  3996  0117  1283               	bcf	3,5	;RP0=0, select bank0
  3997  0118  1303               	bcf	3,6	;RP1=0, select bank0
  3998  0119  00C8               	movwf	clcd_print@str
  3999  011A  3085               	movlw	high (STR_26| (0+32768))
  4000  011B  00C9               	movwf	clcd_print@str+1
  4001  011C  3080               	movlw	128
  4002  011D  00D5               	movwf	??_set_temp
  4003  011E  0855               	movf	??_set_temp,w
  4004  011F  00CA               	movwf	clcd_print@addr
  4005  0120  120A  158A  240C  120A  118A  	fcall	_clcd_print
  4006  0125                     l2897:	
  4007                           
  4008                           ;main.c: 468:             sec = 180;
  4009  0125  30B4               	movlw	180
  4010  0126  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0127  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0128  00BA               	movwf	_sec
  4013  0129  3000               	movlw	0
  4014  012A  00BB               	movwf	_sec+1
  4015  012B                     l2899:	
  4016                           
  4017                           ;main.c: 469:             TMR2ON = 1;
  4018  012B  1512               	bsf	18,2	;volatile
  4019  012C                     l2901:	
  4020                           
  4021                           ;main.c: 470:             clcd_print(" Time Rem.=", (0x90 + 0));
  4022  012C  301C               	movlw	low (STR_27| (0+32768))
  4023  012D  00C8               	movwf	clcd_print@str
  4024  012E  3086               	movlw	high (STR_27| (0+32768))
  4025  012F  00C9               	movwf	clcd_print@str+1
  4026  0130  3090               	movlw	144
  4027  0131  00D5               	movwf	??_set_temp
  4028  0132  0855               	movf	??_set_temp,w
  4029  0133  00CA               	movwf	clcd_print@addr
  4030  0134  120A  158A  240C  120A  118A  	fcall	_clcd_print
  4031                           
  4032                           ;main.c: 472:             while(sec)
  4033  0139  29CB               	goto	l2917
  4034  013A                     l2903:	
  4035                           
  4036                           ;main.c: 473:             {;main.c: 474:                 door = door_status_check();
  4037  013A  120A  158A  24B2  120A  118A  	fcall	_door_status_check
  4038  013F  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0140  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0141  00D5               	movwf	??_set_temp
  4041  0142  01D6               	clrf	??_set_temp+1
  4042  0143  0855               	movf	??_set_temp,w
  4043  0144  00A4               	movwf	set_temp@door
  4044  0145  0856               	movf	??_set_temp+1,w
  4045  0146  00A5               	movwf	set_temp@door+1
  4046  0147                     l2905:	
  4047                           
  4048                           ;main.c: 475:                 if (door == 1)
  4049  0147  0324               	decf	set_temp@door,w
  4050  0148  0425               	iorwf	set_temp@door+1,w
  4051  0149  1D03               	btfss	3,2
  4052  014A  294C               	goto	u2621
  4053  014B  294D               	goto	u2620
  4054  014C                     u2621:	
  4055  014C  296C               	goto	l2911
  4056  014D                     u2620:	
  4057  014D                     l2907:	
  4058                           
  4059                           ;main.c: 476:                 {;main.c: 477:                     clcd_print("  Pre-Heati
      +                          ng  ", (0x80 + 0));
  4060  014D  30BB               	movlw	low (STR_26| (0+32768))
  4061  014E  00C8               	movwf	clcd_print@str
  4062  014F  3085               	movlw	high (STR_26| (0+32768))
  4063  0150  00C9               	movwf	clcd_print@str+1
  4064  0151  3080               	movlw	128
  4065  0152  00D5               	movwf	??_set_temp
  4066  0153  0855               	movf	??_set_temp,w
  4067  0154  00CA               	movwf	clcd_print@addr
  4068  0155  120A  158A  240C  120A  118A  	fcall	_clcd_print
  4069                           
  4070                           ;main.c: 478:                     clcd_print(" Time Rem.=", (0x90 + 0));
  4071  015A  301C               	movlw	low (STR_27| (0+32768))
  4072  015B  1283               	bcf	3,5	;RP0=0, select bank0
  4073  015C  1303               	bcf	3,6	;RP1=0, select bank0
  4074  015D  00C8               	movwf	clcd_print@str
  4075  015E  3086               	movlw	high (STR_27| (0+32768))
  4076  015F  00C9               	movwf	clcd_print@str+1
  4077  0160  3090               	movlw	144
  4078  0161  00D5               	movwf	??_set_temp
  4079  0162  0855               	movf	??_set_temp,w
  4080  0163  00CA               	movwf	clcd_print@addr
  4081  0164  120A  158A  240C  120A  118A  	fcall	_clcd_print
  4082  0169                     l2909:	
  4083                           
  4084                           ;main.c: 479:                     RC2 = 0;
  4085  0169  1283               	bcf	3,5	;RP0=0, select bank0
  4086  016A  1303               	bcf	3,6	;RP1=0, select bank0
  4087  016B  1107               	bcf	7,2	;volatile
  4088  016C                     l2911:	
  4089                           
  4090                           ;main.c: 481:                 clcd_putch((sec/100 + '0'), (0x90 + 11));
  4091  016C  309B               	movlw	155
  4092  016D  00D5               	movwf	??_set_temp
  4093  016E  0855               	movf	??_set_temp,w
  4094  016F  00D3               	movwf	clcd_putch@addr
  4095  0170  3064               	movlw	100
  4096  0171  00F3               	movwf	___awdiv@divisor
  4097  0172  3000               	movlw	0
  4098  0173  00F4               	movwf	___awdiv@divisor+1
  4099  0174  083B               	movf	_sec+1,w
  4100  0175  00F6               	movwf	___awdiv@dividend+1
  4101  0176  083A               	movf	_sec,w
  4102  0177  00F5               	movwf	___awdiv@dividend
  4103  0178  120A  158A  2606  120A  118A  	fcall	___awdiv
  4104  017D  0873               	movf	?___awdiv,w
  4105  017E  3E30               	addlw	48
  4106  017F  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  4107  0184                     l2913:	
  4108                           
  4109                           ;main.c: 482:                 clcd_putch(((sec/10) % 10 + '0'), (0x90 + 12));
  4110  0184  309C               	movlw	156
  4111  0185  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0186  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0187  00D5               	movwf	??_set_temp
  4114  0188  0855               	movf	??_set_temp,w
  4115  0189  00D3               	movwf	clcd_putch@addr
  4116  018A  300A               	movlw	10
  4117  018B  00CC               	movwf	___awmod@divisor
  4118  018C  3000               	movlw	0
  4119  018D  00CD               	movwf	___awmod@divisor+1
  4120  018E  300A               	movlw	10
  4121  018F  00F3               	movwf	___awdiv@divisor
  4122  0190  3000               	movlw	0
  4123  0191  00F4               	movwf	___awdiv@divisor+1
  4124  0192  083B               	movf	_sec+1,w
  4125  0193  00F6               	movwf	___awdiv@dividend+1
  4126  0194  083A               	movf	_sec,w
  4127  0195  00F5               	movwf	___awdiv@dividend
  4128  0196  120A  158A  2606  120A  118A  	fcall	___awdiv
  4129  019B  0874               	movf	?___awdiv+1,w
  4130  019C  1283               	bcf	3,5	;RP0=0, select bank0
  4131  019D  1303               	bcf	3,6	;RP1=0, select bank0
  4132  019E  00CF               	movwf	___awmod@dividend+1
  4133  019F  0873               	movf	?___awdiv,w
  4134  01A0  00CE               	movwf	___awmod@dividend
  4135  01A1  120A  158A  2548  120A  118A  	fcall	___awmod
  4136  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  4137  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  4138  01A8  084C               	movf	?___awmod,w
  4139  01A9  3E30               	addlw	48
  4140  01AA  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  4141  01AF                     l2915:	
  4142                           
  4143                           ;main.c: 483:                 clcd_putch((sec % 10 + '0'), (0x90 + 13));
  4144  01AF  309D               	movlw	157
  4145  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  4146  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  4147  01B2  00D5               	movwf	??_set_temp
  4148  01B3  0855               	movf	??_set_temp,w
  4149  01B4  00D3               	movwf	clcd_putch@addr
  4150  01B5  300A               	movlw	10
  4151  01B6  00CC               	movwf	___awmod@divisor
  4152  01B7  3000               	movlw	0
  4153  01B8  00CD               	movwf	___awmod@divisor+1
  4154  01B9  083B               	movf	_sec+1,w
  4155  01BA  00CF               	movwf	___awmod@dividend+1
  4156  01BB  083A               	movf	_sec,w
  4157  01BC  00CE               	movwf	___awmod@dividend
  4158  01BD  120A  158A  2548  120A  118A  	fcall	___awmod
  4159  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  4160  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  4161  01C4  084C               	movf	?___awmod,w
  4162  01C5  3E30               	addlw	48
  4163  01C6  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  4164  01CB                     l2917:	
  4165                           
  4166                           ;main.c: 472:             while(sec)
  4167  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  4168  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  4169  01CD  083A               	movf	_sec,w
  4170  01CE  043B               	iorwf	_sec+1,w
  4171  01CF  1D03               	btfss	3,2
  4172  01D0  29D2               	goto	u2631
  4173  01D1  29D3               	goto	u2630
  4174  01D2                     u2631:	
  4175  01D2  293A               	goto	l2903
  4176  01D3                     u2630:	
  4177  01D3                     l2919:	
  4178                           
  4179                           ;main.c: 485:             return 0;
  4180  01D3  3000               	movlw	0
  4181  01D4  2A69               	goto	l197
  4182  01D5                     l2923:	
  4183                           
  4184                           ;main.c: 488:     if(wait++ == 50)
  4185  01D5  3001               	movlw	1
  4186  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  4187  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  4188  01D8  07AA               	addwf	set_temp@wait,f
  4189  01D9  1803               	skipnc
  4190  01DA  0AAB               	incf	set_temp@wait+1,f
  4191  01DB  3000               	movlw	0
  4192  01DC  07AB               	addwf	set_temp@wait+1,f
  4193  01DD  3033               	movlw	51
  4194  01DE  062A               	xorwf	set_temp@wait,w
  4195  01DF  042B               	iorwf	set_temp@wait+1,w
  4196  01E0  1D03               	btfss	3,2
  4197  01E1  29E3               	goto	u2641
  4198  01E2  29E4               	goto	u2640
  4199  01E3                     u2641:	
  4200  01E3  2A53               	goto	l2935
  4201  01E4                     u2640:	
  4202  01E4                     l2925:	
  4203                           
  4204                           ;main.c: 489:     {;main.c: 490:         wait = 0;
  4205  01E4  01AA               	clrf	set_temp@wait
  4206  01E5  01AB               	clrf	set_temp@wait+1
  4207  01E6                     l2927:	
  4208                           
  4209                           ;main.c: 491:         blink = !blink;
  4210  01E6  082C               	movf	set_temp@blink,w
  4211  01E7  042D               	iorwf	set_temp@blink+1,w
  4212  01E8  1903               	btfsc	3,2
  4213  01E9  29EB               	goto	u2651
  4214  01EA  29ED               	goto	u2650
  4215  01EB                     u2651:	
  4216  01EB  3001               	movlw	1
  4217  01EC  29EE               	goto	u2660
  4218  01ED                     u2650:	
  4219  01ED  3000               	movlw	0
  4220  01EE                     u2660:	
  4221  01EE  00D5               	movwf	??_set_temp
  4222  01EF  01D6               	clrf	??_set_temp+1
  4223  01F0  0855               	movf	??_set_temp,w
  4224  01F1  00AC               	movwf	set_temp@blink
  4225  01F2  0856               	movf	??_set_temp+1,w
  4226  01F3  00AD               	movwf	set_temp@blink+1
  4227  01F4                     l2929:	
  4228                           
  4229                           ;main.c: 493:         clcd_putch((temp/100 + '0'), (0xC0 + 8));
  4230  01F4  30C8               	movlw	200
  4231  01F5  00D5               	movwf	??_set_temp
  4232  01F6  0855               	movf	??_set_temp,w
  4233  01F7  00D3               	movwf	clcd_putch@addr
  4234  01F8  3064               	movlw	100
  4235  01F9  00F3               	movwf	___awdiv@divisor
  4236  01FA  3000               	movlw	0
  4237  01FB  00F4               	movwf	___awdiv@divisor+1
  4238  01FC  0827               	movf	set_temp@temp+1,w
  4239  01FD  00F6               	movwf	___awdiv@dividend+1
  4240  01FE  0826               	movf	set_temp@temp,w
  4241  01FF  00F5               	movwf	___awdiv@dividend
  4242  0200  120A  158A  2606  120A  118A  	fcall	___awdiv
  4243  0205  0873               	movf	?___awdiv,w
  4244  0206  3E30               	addlw	48
  4245  0207  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  4246  020C                     l2931:	
  4247                           
  4248                           ;main.c: 494:         clcd_putch(((temp/10) % 10 + '0'), (0xC0 + 9));
  4249  020C  30C9               	movlw	201
  4250  020D  1283               	bcf	3,5	;RP0=0, select bank0
  4251  020E  1303               	bcf	3,6	;RP1=0, select bank0
  4252  020F  00D5               	movwf	??_set_temp
  4253  0210  0855               	movf	??_set_temp,w
  4254  0211  00D3               	movwf	clcd_putch@addr
  4255  0212  300A               	movlw	10
  4256  0213  00CC               	movwf	___awmod@divisor
  4257  0214  3000               	movlw	0
  4258  0215  00CD               	movwf	___awmod@divisor+1
  4259  0216  300A               	movlw	10
  4260  0217  00F3               	movwf	___awdiv@divisor
  4261  0218  3000               	movlw	0
  4262  0219  00F4               	movwf	___awdiv@divisor+1
  4263  021A  0827               	movf	set_temp@temp+1,w
  4264  021B  00F6               	movwf	___awdiv@dividend+1
  4265  021C  0826               	movf	set_temp@temp,w
  4266  021D  00F5               	movwf	___awdiv@dividend
  4267  021E  120A  158A  2606  120A  118A  	fcall	___awdiv
  4268  0223  0874               	movf	?___awdiv+1,w
  4269  0224  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0225  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0226  00CF               	movwf	___awmod@dividend+1
  4272  0227  0873               	movf	?___awdiv,w
  4273  0228  00CE               	movwf	___awmod@dividend
  4274  0229  120A  158A  2548  120A  118A  	fcall	___awmod
  4275  022E  1283               	bcf	3,5	;RP0=0, select bank0
  4276  022F  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0230  084C               	movf	?___awmod,w
  4278  0231  3E30               	addlw	48
  4279  0232  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  4280  0237                     l2933:	
  4281                           
  4282                           ;main.c: 495:         clcd_putch((temp % 10 + '0'), (0xC0 + 10));
  4283  0237  30CA               	movlw	202
  4284  0238  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0239  1303               	bcf	3,6	;RP1=0, select bank0
  4286  023A  00D5               	movwf	??_set_temp
  4287  023B  0855               	movf	??_set_temp,w
  4288  023C  00D3               	movwf	clcd_putch@addr
  4289  023D  300A               	movlw	10
  4290  023E  00CC               	movwf	___awmod@divisor
  4291  023F  3000               	movlw	0
  4292  0240  00CD               	movwf	___awmod@divisor+1
  4293  0241  0827               	movf	set_temp@temp+1,w
  4294  0242  00CF               	movwf	___awmod@dividend+1
  4295  0243  0826               	movf	set_temp@temp,w
  4296  0244  00CE               	movwf	___awmod@dividend
  4297  0245  120A  158A  2548  120A  118A  	fcall	___awmod
  4298  024A  1283               	bcf	3,5	;RP0=0, select bank0
  4299  024B  1303               	bcf	3,6	;RP1=0, select bank0
  4300  024C  084C               	movf	?___awmod,w
  4301  024D  3E30               	addlw	48
  4302  024E  120A  158A  236C  120A  118A  	fcall	_clcd_putch
  4303  0253                     l2935:	
  4304                           
  4305                           ;main.c: 497:     if(blink)
  4306  0253  1283               	bcf	3,5	;RP0=0, select bank0
  4307  0254  1303               	bcf	3,6	;RP1=0, select bank0
  4308  0255  082C               	movf	set_temp@blink,w
  4309  0256  042D               	iorwf	set_temp@blink+1,w
  4310  0257  1903               	btfsc	3,2
  4311  0258  2A5A               	goto	u2671
  4312  0259  2A5B               	goto	u2670
  4313  025A                     u2671:	
  4314  025A  2A68               	goto	l2939
  4315  025B                     u2670:	
  4316  025B                     l2937:	
  4317                           
  4318                           ;main.c: 498:     {;main.c: 499:         clcd_print("   ", (0xC0 + 8));
  4319  025B  300D               	movlw	low ((STR_18+13)| (0+32768))
  4320  025C  00C8               	movwf	clcd_print@str
  4321  025D  3085               	movlw	high ((STR_18+13)| (0+32768))
  4322  025E  00C9               	movwf	clcd_print@str+1
  4323  025F  30C8               	movlw	200
  4324  0260  00D5               	movwf	??_set_temp
  4325  0261  0855               	movf	??_set_temp,w
  4326  0262  00CA               	movwf	clcd_print@addr
  4327  0263  120A  158A  240C  120A  118A  	fcall	_clcd_print
  4328  0268                     l2939:	
  4329                           
  4330                           ;main.c: 501:     return 0x0F;
  4331  0268  300F               	movlw	15
  4332  0269                     l197:	
  4333  0269  0008               	return
  4334  026A                     __end_of_set_temp:	
  4335                           
  4336                           	psect	text9
  4337  0CB2                     __ptext9:	
  4338 ;; *************** function _door_status_check *****************
  4339 ;; Defined at:
  4340 ;;		line 347 in file "main.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      unsigned char 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         0       0       0       0       0
  4355 ;;      Locals:         0       0       0       0       0
  4356 ;;      Temps:          1       0       0       0       0
  4357 ;;      Totals:         1       0       0       0       0
  4358 ;;Total ram usage:        1 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    3
  4361 ;; This function calls:
  4362 ;;		_clcd_print
  4363 ;;		_clear_display
  4364 ;; This function is called by:
  4365 ;;		_time_display
  4366 ;;		_set_temp
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _door_status_check
  4372  0CB2                     _door_status_check:	
  4373  0CB2                     l2601:	
  4374                           ;incstack = 0
  4375                           ; Regs used in _door_status_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4376                           
  4377                           
  4378                           ;main.c: 350:     return 1;
  4379  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  4381  0CB4  1986               	btfsc	6,3	;volatile
  4382  0CB5  2CB7               	goto	u2181
  4383  0CB6  2CB8               	goto	u2180
  4384  0CB7                     u2181:	
  4385  0CB7  2CEE               	goto	l2619
  4386  0CB8                     u2180:	
  4387  0CB8                     l2603:	
  4388                           
  4389                           ;main.c: 351: };main.c: 352: void time_display(void)
  4390  0CB8  1487               	bsf	7,1	;volatile
  4391                           
  4392                           ;main.c: 353: {
  4393  0CB9  1107               	bcf	7,2	;volatile
  4394                           
  4395                           ;main.c: 354:     door_status_check();
  4396  0CBA  1112               	bcf	18,2	;volatile
  4397  0CBB                     l2605:	
  4398                           
  4399                           ;main.c: 355:     clcd_print(" TIME =  ", (0x80 + 0));
  4400  0CBB  120A  158A  2334  120A  158A  	fcall	_clear_display
  4401  0CC0                     l2607:	
  4402                           
  4403                           ;main.c: 356: 
  4404  0CC0  3099               	movlw	low (STR_13| (0+32768))
  4405  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  4407  0CC3  00C8               	movwf	clcd_print@str
  4408  0CC4  3085               	movlw	high (STR_13| (0+32768))
  4409  0CC5  00C9               	movwf	clcd_print@str+1
  4410  0CC6  30C0               	movlw	192
  4411  0CC7  00F7               	movwf	??_door_status_check
  4412  0CC8  0877               	movf	??_door_status_check,w
  4413  0CC9  00CA               	movwf	clcd_print@addr
  4414  0CCA  120A  158A  240C  120A  158A  	fcall	_clcd_print
  4415  0CCF                     l2609:	
  4416                           
  4417                           ;main.c: 357: 
  4418  0CCF  3044               	movlw	low (STR_14| (0+32768))
  4419  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0CD2  00C8               	movwf	clcd_print@str
  4422  0CD3  3085               	movlw	high (STR_14| (0+32768))
  4423  0CD4  00C9               	movwf	clcd_print@str+1
  4424  0CD5  3090               	movlw	144
  4425  0CD6  00F7               	movwf	??_door_status_check
  4426  0CD7  0877               	movf	??_door_status_check,w
  4427  0CD8  00CA               	movwf	clcd_print@addr
  4428  0CD9  120A  158A  240C  120A  158A  	fcall	_clcd_print
  4429  0CDE                     l169:	
  4430                           ;main.c: 359:     min_array[1] = min % 10 + '0';;main.c: 361:     clcd_print(min_array, 
      +                          (0x80 + 9));
  4431                           
  4432                           
  4433                           ;main.c: 358:     min_array[0] = min / 10 + '0';
  4434  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  4435  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  4436  0CE0  1D86               	btfss	6,3	;volatile
  4437  0CE1  2CE3               	goto	u2191
  4438  0CE2  2CE4               	goto	u2190
  4439  0CE3                     u2191:	
  4440  0CE3  2CDE               	goto	l169
  4441  0CE4                     u2190:	
  4442  0CE4                     l2611:	
  4443                           
  4444                           ;main.c: 362:     clcd_putch(':', (0x80 + 11));
  4445  0CE4  120A  158A  2334  120A  158A  	fcall	_clear_display
  4446  0CE9                     l2613:	
  4447  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  4448  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  4449  0CEB  1512               	bsf	18,2	;volatile
  4450  0CEC                     l2615:	
  4451  0CEC  1087               	bcf	7,1	;volatile
  4452  0CED                     l2617:	
  4453  0CED  1507               	bsf	7,2	;volatile
  4454  0CEE                     l2619:	
  4455  0CEE  3001               	movlw	1
  4456  0CEF                     l172:	
  4457  0CEF  0008               	return
  4458  0CF0                     __end_of_door_status_check:	
  4459                           
  4460                           	psect	text10
  4461  0B34                     __ptext10:	
  4462 ;; *************** function _clear_display *****************
  4463 ;; Defined at:
  4464 ;;		line 237 in file "main.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4478 ;;      Params:         0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0
  4481 ;;      Totals:         0       0       0       0       0
  4482 ;;Total ram usage:        0 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    2
  4485 ;; This function calls:
  4486 ;;		_clcd_write
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;;		_loop
  4490 ;;		_operation_call
  4491 ;;		_set_time
  4492 ;;		_door_status_check
  4493 ;;		_time_display
  4494 ;;		_set_temp
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function _clear_display
  4500  0B34                     _clear_display:	
  4501  0B34                     l1787:	
  4502                           ;incstack = 0
  4503                           ; Regs used in _clear_display: [wreg+status,2+status,0+pclath+cstack]
  4504                           
  4505                           
  4506                           ;main.c: 238: 
  4507  0B34  01F3               	clrf	clcd_write@mode
  4508  0B35  3001               	movlw	1
  4509  0B36  120A  158A  243F  120A  158A  	fcall	_clcd_write
  4510  0B3B                     l133:	
  4511  0B3B  0008               	return
  4512  0B3C                     __end_of_clear_display:	
  4513                           
  4514                           	psect	text11
  4515  0B6C                     __ptext11:	
  4516 ;; *************** function _clcd_putch *****************
  4517 ;; Defined at:
  4518 ;;		line 55 in file "clcd.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  data            1    wreg     const unsigned char 
  4521 ;;  addr            1   11[BANK0 ] unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  data            1   12[BANK0 ] const unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         0       1       0       0       0
  4534 ;;      Locals:         0       1       0       0       0
  4535 ;;      Temps:          0       0       0       0       0
  4536 ;;      Totals:         0       2       0       0       0
  4537 ;;Total ram usage:        2 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    2
  4540 ;; This function calls:
  4541 ;;		_clcd_write
  4542 ;; This function is called by:
  4543 ;;		_power_on_screen
  4544 ;;		_time_display
  4545 ;;		_set_temp
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function _clcd_putch
  4551  0B6C                     _clcd_putch:	
  4552                           
  4553                           ;incstack = 0
  4554                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  4555                           ;clcd_putch@data stored from wreg
  4556  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0B6E  00D4               	movwf	clcd_putch@data
  4559  0B6F                     l1797:	
  4560                           
  4561                           ;clcd.c: 55: void clcd_putch(const char data, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
  4562  0B6F  01F3               	clrf	clcd_write@mode
  4563  0B70  0853               	movf	clcd_putch@addr,w
  4564  0B71  120A  158A  243F  120A  158A  	fcall	_clcd_write
  4565                           
  4566                           ;clcd.c: 58:     clcd_write(data, 1);
  4567  0B76  01F3               	clrf	clcd_write@mode
  4568  0B77  0AF3               	incf	clcd_write@mode,f
  4569  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  4570  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  4571  0B7A  0854               	movf	clcd_putch@data,w
  4572  0B7B  120A  158A  243F  120A  158A  	fcall	_clcd_write
  4573  0B80                     l298:	
  4574  0B80  0008               	return
  4575  0B81                     __end_of_clcd_putch:	
  4576                           
  4577                           	psect	text12
  4578  0BE1                     __ptext12:	
  4579 ;; *************** function ___wmul *****************
  4580 ;; Defined at:
  4581 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  multiplier      2    3[COMMON] unsigned int 
  4584 ;;  multiplicand    2    5[COMMON] unsigned int 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  product         2    0[BANK0 ] unsigned int 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  2    3[COMMON] unsigned int 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4596 ;;      Params:         4       0       0       0       0
  4597 ;;      Locals:         0       2       0       0       0
  4598 ;;      Temps:          0       0       0       0       0
  4599 ;;      Totals:         4       2       0       0       0
  4600 ;;Total ram usage:        6 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    1
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_set_time
  4607 ;;		_set_temp
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function ___wmul
  4613  0BE1                     ___wmul:	
  4614  0BE1                     l2623:	
  4615                           ;incstack = 0
  4616                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4617                           
  4618  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0BE3  01C8               	clrf	___wmul@product
  4621  0BE4  01C9               	clrf	___wmul@product+1
  4622  0BE5                     l2625:	
  4623  0BE5  1C73               	btfss	___wmul@multiplier,0
  4624  0BE6  2BE8               	goto	u2201
  4625  0BE7  2BE9               	goto	u2200
  4626  0BE8                     u2201:	
  4627  0BE8  2BF1               	goto	l423
  4628  0BE9                     u2200:	
  4629  0BE9                     l2627:	
  4630  0BE9  0875               	movf	___wmul@multiplicand,w
  4631  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  4633  0BEC  07C8               	addwf	___wmul@product,f
  4634  0BED  1803               	skipnc
  4635  0BEE  0AC9               	incf	___wmul@product+1,f
  4636  0BEF  0876               	movf	___wmul@multiplicand+1,w
  4637  0BF0  07C9               	addwf	___wmul@product+1,f
  4638  0BF1                     l423:	
  4639  0BF1  3001               	movlw	1
  4640  0BF2                     u2215:	
  4641  0BF2  1003               	clrc
  4642  0BF3  0DF5               	rlf	___wmul@multiplicand,f
  4643  0BF4  0DF6               	rlf	___wmul@multiplicand+1,f
  4644  0BF5  3EFF               	addlw	-1
  4645  0BF6  1D03               	skipz
  4646  0BF7  2BF2               	goto	u2215
  4647  0BF8                     l2629:	
  4648  0BF8  3001               	movlw	1
  4649  0BF9                     u2225:	
  4650  0BF9  1003               	clrc
  4651  0BFA  0CF4               	rrf	___wmul@multiplier+1,f
  4652  0BFB  0CF3               	rrf	___wmul@multiplier,f
  4653  0BFC  3EFF               	addlw	-1
  4654  0BFD  1D03               	skipz
  4655  0BFE  2BF9               	goto	u2225
  4656  0BFF                     l2631:	
  4657  0BFF  0873               	movf	___wmul@multiplier,w
  4658  0C00  0474               	iorwf	___wmul@multiplier+1,w
  4659  0C01  1D03               	btfss	3,2
  4660  0C02  2C04               	goto	u2231
  4661  0C03  2C05               	goto	u2230
  4662  0C04                     u2231:	
  4663  0C04  2BE5               	goto	l2625
  4664  0C05                     u2230:	
  4665  0C05                     l2633:	
  4666  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  4667  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  4668  0C07  0849               	movf	___wmul@product+1,w
  4669  0C08  00F4               	movwf	?___wmul+1
  4670  0C09  0848               	movf	___wmul@product,w
  4671  0C0A  00F3               	movwf	?___wmul
  4672  0C0B                     l425:	
  4673  0C0B  0008               	return
  4674  0C0C                     __end_of___wmul:	
  4675                           
  4676                           	psect	text13
  4677  0D48                     __ptext13:	
  4678 ;; *************** function ___awmod *****************
  4679 ;; Defined at:
  4680 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  divisor         2    4[BANK0 ] int 
  4683 ;;  dividend        2    6[BANK0 ] int 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  sign            1   10[BANK0 ] unsigned char 
  4686 ;;  counter         1    9[BANK0 ] unsigned char 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  2    4[BANK0 ] int 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4696 ;;      Params:         0       4       0       0       0
  4697 ;;      Locals:         0       2       0       0       0
  4698 ;;      Temps:          0       1       0       0       0
  4699 ;;      Totals:         0       7       0       0       0
  4700 ;;Total ram usage:        7 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    1
  4703 ;; This function calls:
  4704 ;;		Nothing
  4705 ;; This function is called by:
  4706 ;;		_set_time
  4707 ;;		_time_display
  4708 ;;		_set_temp
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function ___awmod
  4714  0D48                     ___awmod:	
  4715  0D48                     l2637:	
  4716                           ;incstack = 0
  4717                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4718                           
  4719  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  4720  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  4721  0D4A  01D2               	clrf	___awmod@sign
  4722  0D4B                     l2639:	
  4723  0D4B  1FCF               	btfss	___awmod@dividend+1,7
  4724  0D4C  2D4E               	goto	u2241
  4725  0D4D  2D4F               	goto	u2240
  4726  0D4E                     u2241:	
  4727  0D4E  2D56               	goto	l2645
  4728  0D4F                     u2240:	
  4729  0D4F                     l2641:	
  4730  0D4F  09CE               	comf	___awmod@dividend,f
  4731  0D50  09CF               	comf	___awmod@dividend+1,f
  4732  0D51  0ACE               	incf	___awmod@dividend,f
  4733  0D52  1903               	skipnz
  4734  0D53  0ACF               	incf	___awmod@dividend+1,f
  4735  0D54                     l2643:	
  4736  0D54  01D2               	clrf	___awmod@sign
  4737  0D55  0AD2               	incf	___awmod@sign,f
  4738  0D56                     l2645:	
  4739  0D56  1FCD               	btfss	___awmod@divisor+1,7
  4740  0D57  2D59               	goto	u2251
  4741  0D58  2D5A               	goto	u2250
  4742  0D59                     u2251:	
  4743  0D59  2D5F               	goto	l2649
  4744  0D5A                     u2250:	
  4745  0D5A                     l2647:	
  4746  0D5A  09CC               	comf	___awmod@divisor,f
  4747  0D5B  09CD               	comf	___awmod@divisor+1,f
  4748  0D5C  0ACC               	incf	___awmod@divisor,f
  4749  0D5D  1903               	skipnz
  4750  0D5E  0ACD               	incf	___awmod@divisor+1,f
  4751  0D5F                     l2649:	
  4752  0D5F  084C               	movf	___awmod@divisor,w
  4753  0D60  044D               	iorwf	___awmod@divisor+1,w
  4754  0D61  1903               	btfsc	3,2
  4755  0D62  2D64               	goto	u2261
  4756  0D63  2D65               	goto	u2260
  4757  0D64                     u2261:	
  4758  0D64  2D94               	goto	l2667
  4759  0D65                     u2260:	
  4760  0D65                     l2651:	
  4761  0D65  01D1               	clrf	___awmod@counter
  4762  0D66  0AD1               	incf	___awmod@counter,f
  4763  0D67  2D73               	goto	l2657
  4764  0D68                     l2653:	
  4765  0D68  3001               	movlw	1
  4766  0D69                     u2275:	
  4767  0D69  1003               	clrc
  4768  0D6A  0DCC               	rlf	___awmod@divisor,f
  4769  0D6B  0DCD               	rlf	___awmod@divisor+1,f
  4770  0D6C  3EFF               	addlw	-1
  4771  0D6D  1D03               	skipz
  4772  0D6E  2D69               	goto	u2275
  4773  0D6F                     l2655:	
  4774  0D6F  3001               	movlw	1
  4775  0D70  00D0               	movwf	??___awmod
  4776  0D71  0850               	movf	??___awmod,w
  4777  0D72  07D1               	addwf	___awmod@counter,f
  4778  0D73                     l2657:	
  4779  0D73  1FCD               	btfss	___awmod@divisor+1,7
  4780  0D74  2D76               	goto	u2281
  4781  0D75  2D77               	goto	u2280
  4782  0D76                     u2281:	
  4783  0D76  2D68               	goto	l2653
  4784  0D77                     u2280:	
  4785  0D77                     l2659:	
  4786  0D77  084D               	movf	___awmod@divisor+1,w
  4787  0D78  024F               	subwf	___awmod@dividend+1,w
  4788  0D79  1D03               	skipz
  4789  0D7A  2D7D               	goto	u2295
  4790  0D7B  084C               	movf	___awmod@divisor,w
  4791  0D7C  024E               	subwf	___awmod@dividend,w
  4792  0D7D                     u2295:	
  4793  0D7D  1C03               	skipc
  4794  0D7E  2D80               	goto	u2291
  4795  0D7F  2D81               	goto	u2290
  4796  0D80                     u2291:	
  4797  0D80  2D87               	goto	l2663
  4798  0D81                     u2290:	
  4799  0D81                     l2661:	
  4800  0D81  084C               	movf	___awmod@divisor,w
  4801  0D82  02CE               	subwf	___awmod@dividend,f
  4802  0D83  084D               	movf	___awmod@divisor+1,w
  4803  0D84  1C03               	skipc
  4804  0D85  03CF               	decf	___awmod@dividend+1,f
  4805  0D86  02CF               	subwf	___awmod@dividend+1,f
  4806  0D87                     l2663:	
  4807  0D87  3001               	movlw	1
  4808  0D88                     u2305:	
  4809  0D88  1003               	clrc
  4810  0D89  0CCD               	rrf	___awmod@divisor+1,f
  4811  0D8A  0CCC               	rrf	___awmod@divisor,f
  4812  0D8B  3EFF               	addlw	-1
  4813  0D8C  1D03               	skipz
  4814  0D8D  2D88               	goto	u2305
  4815  0D8E                     l2665:	
  4816  0D8E  3001               	movlw	1
  4817  0D8F  02D1               	subwf	___awmod@counter,f
  4818  0D90  1D03               	btfss	3,2
  4819  0D91  2D93               	goto	u2311
  4820  0D92  2D94               	goto	u2310
  4821  0D93                     u2311:	
  4822  0D93  2D77               	goto	l2659
  4823  0D94                     u2310:	
  4824  0D94                     l2667:	
  4825  0D94  0852               	movf	___awmod@sign,w
  4826  0D95  1903               	btfsc	3,2
  4827  0D96  2D98               	goto	u2321
  4828  0D97  2D99               	goto	u2320
  4829  0D98                     u2321:	
  4830  0D98  2D9E               	goto	l2671
  4831  0D99                     u2320:	
  4832  0D99                     l2669:	
  4833  0D99  09CE               	comf	___awmod@dividend,f
  4834  0D9A  09CF               	comf	___awmod@dividend+1,f
  4835  0D9B  0ACE               	incf	___awmod@dividend,f
  4836  0D9C  1903               	skipnz
  4837  0D9D  0ACF               	incf	___awmod@dividend+1,f
  4838  0D9E                     l2671:	
  4839  0D9E  084F               	movf	___awmod@dividend+1,w
  4840  0D9F  00CD               	movwf	?___awmod+1
  4841  0DA0  084E               	movf	___awmod@dividend,w
  4842  0DA1  00CC               	movwf	?___awmod
  4843  0DA2                     l589:	
  4844  0DA2  0008               	return
  4845  0DA3                     __end_of___awmod:	
  4846                           
  4847                           	psect	text14
  4848  0E06                     __ptext14:	
  4849 ;; *************** function ___awdiv *****************
  4850 ;; Defined at:
  4851 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  divisor         2    3[COMMON] int 
  4854 ;;  dividend        2    5[COMMON] int 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  quotient        2    2[BANK0 ] int 
  4857 ;;  sign            1    1[BANK0 ] unsigned char 
  4858 ;;  counter         1    0[BANK0 ] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  2    3[COMMON] int 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4868 ;;      Params:         4       0       0       0       0
  4869 ;;      Locals:         0       4       0       0       0
  4870 ;;      Temps:          1       0       0       0       0
  4871 ;;      Totals:         5       4       0       0       0
  4872 ;;Total ram usage:        9 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    1
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_set_time
  4879 ;;		_time_display
  4880 ;;		_set_temp
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           
  4885                           ;psect for function ___awdiv
  4886  0E06                     ___awdiv:	
  4887  0E06                     l1835:	
  4888                           ;incstack = 0
  4889                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4890                           
  4891  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  4892  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  4893  0E08  01C9               	clrf	___awdiv@sign
  4894  0E09                     l1837:	
  4895  0E09  1FF4               	btfss	___awdiv@divisor+1,7
  4896  0E0A  2E0C               	goto	u1191
  4897  0E0B  2E0D               	goto	u1190
  4898  0E0C                     u1191:	
  4899  0E0C  2E14               	goto	l1843
  4900  0E0D                     u1190:	
  4901  0E0D                     l1839:	
  4902  0E0D  09F3               	comf	___awdiv@divisor,f
  4903  0E0E  09F4               	comf	___awdiv@divisor+1,f
  4904  0E0F  0AF3               	incf	___awdiv@divisor,f
  4905  0E10  1903               	skipnz
  4906  0E11  0AF4               	incf	___awdiv@divisor+1,f
  4907  0E12                     l1841:	
  4908  0E12  01C9               	clrf	___awdiv@sign
  4909  0E13  0AC9               	incf	___awdiv@sign,f
  4910  0E14                     l1843:	
  4911  0E14  1FF6               	btfss	___awdiv@dividend+1,7
  4912  0E15  2E17               	goto	u1201
  4913  0E16  2E18               	goto	u1200
  4914  0E17                     u1201:	
  4915  0E17  2E21               	goto	l1849
  4916  0E18                     u1200:	
  4917  0E18                     l1845:	
  4918  0E18  09F5               	comf	___awdiv@dividend,f
  4919  0E19  09F6               	comf	___awdiv@dividend+1,f
  4920  0E1A  0AF5               	incf	___awdiv@dividend,f
  4921  0E1B  1903               	skipnz
  4922  0E1C  0AF6               	incf	___awdiv@dividend+1,f
  4923  0E1D                     l1847:	
  4924  0E1D  3001               	movlw	1
  4925  0E1E  00F7               	movwf	??___awdiv
  4926  0E1F  0877               	movf	??___awdiv,w
  4927  0E20  06C9               	xorwf	___awdiv@sign,f
  4928  0E21                     l1849:	
  4929  0E21  01CA               	clrf	___awdiv@quotient
  4930  0E22  01CB               	clrf	___awdiv@quotient+1
  4931  0E23                     l1851:	
  4932  0E23  0873               	movf	___awdiv@divisor,w
  4933  0E24  0474               	iorwf	___awdiv@divisor+1,w
  4934  0E25  1903               	btfsc	3,2
  4935  0E26  2E28               	goto	u1211
  4936  0E27  2E29               	goto	u1210
  4937  0E28                     u1211:	
  4938  0E28  2E60               	goto	l1871
  4939  0E29                     u1210:	
  4940  0E29                     l1853:	
  4941  0E29  01C8               	clrf	___awdiv@counter
  4942  0E2A  0AC8               	incf	___awdiv@counter,f
  4943  0E2B  2E37               	goto	l1859
  4944  0E2C                     l1855:	
  4945  0E2C  3001               	movlw	1
  4946  0E2D                     u1225:	
  4947  0E2D  1003               	clrc
  4948  0E2E  0DF3               	rlf	___awdiv@divisor,f
  4949  0E2F  0DF4               	rlf	___awdiv@divisor+1,f
  4950  0E30  3EFF               	addlw	-1
  4951  0E31  1D03               	skipz
  4952  0E32  2E2D               	goto	u1225
  4953  0E33                     l1857:	
  4954  0E33  3001               	movlw	1
  4955  0E34  00F7               	movwf	??___awdiv
  4956  0E35  0877               	movf	??___awdiv,w
  4957  0E36  07C8               	addwf	___awdiv@counter,f
  4958  0E37                     l1859:	
  4959  0E37  1FF4               	btfss	___awdiv@divisor+1,7
  4960  0E38  2E3A               	goto	u1231
  4961  0E39  2E3B               	goto	u1230
  4962  0E3A                     u1231:	
  4963  0E3A  2E2C               	goto	l1855
  4964  0E3B                     u1230:	
  4965  0E3B                     l1861:	
  4966  0E3B  3001               	movlw	1
  4967  0E3C                     u1245:	
  4968  0E3C  1003               	clrc
  4969  0E3D  0DCA               	rlf	___awdiv@quotient,f
  4970  0E3E  0DCB               	rlf	___awdiv@quotient+1,f
  4971  0E3F  3EFF               	addlw	-1
  4972  0E40  1D03               	skipz
  4973  0E41  2E3C               	goto	u1245
  4974  0E42  0874               	movf	___awdiv@divisor+1,w
  4975  0E43  0276               	subwf	___awdiv@dividend+1,w
  4976  0E44  1D03               	skipz
  4977  0E45  2E48               	goto	u1255
  4978  0E46  0873               	movf	___awdiv@divisor,w
  4979  0E47  0275               	subwf	___awdiv@dividend,w
  4980  0E48                     u1255:	
  4981  0E48  1C03               	skipc
  4982  0E49  2E4B               	goto	u1251
  4983  0E4A  2E4C               	goto	u1250
  4984  0E4B                     u1251:	
  4985  0E4B  2E53               	goto	l1867
  4986  0E4C                     u1250:	
  4987  0E4C                     l1863:	
  4988  0E4C  0873               	movf	___awdiv@divisor,w
  4989  0E4D  02F5               	subwf	___awdiv@dividend,f
  4990  0E4E  0874               	movf	___awdiv@divisor+1,w
  4991  0E4F  1C03               	skipc
  4992  0E50  03F6               	decf	___awdiv@dividend+1,f
  4993  0E51  02F6               	subwf	___awdiv@dividend+1,f
  4994  0E52                     l1865:	
  4995  0E52  144A               	bsf	___awdiv@quotient,0
  4996  0E53                     l1867:	
  4997  0E53  3001               	movlw	1
  4998  0E54                     u1265:	
  4999  0E54  1003               	clrc
  5000  0E55  0CF4               	rrf	___awdiv@divisor+1,f
  5001  0E56  0CF3               	rrf	___awdiv@divisor,f
  5002  0E57  3EFF               	addlw	-1
  5003  0E58  1D03               	skipz
  5004  0E59  2E54               	goto	u1265
  5005  0E5A                     l1869:	
  5006  0E5A  3001               	movlw	1
  5007  0E5B  02C8               	subwf	___awdiv@counter,f
  5008  0E5C  1D03               	btfss	3,2
  5009  0E5D  2E5F               	goto	u1271
  5010  0E5E  2E60               	goto	u1270
  5011  0E5F                     u1271:	
  5012  0E5F  2E3B               	goto	l1861
  5013  0E60                     u1270:	
  5014  0E60                     l1871:	
  5015  0E60  0849               	movf	___awdiv@sign,w
  5016  0E61  1903               	btfsc	3,2
  5017  0E62  2E64               	goto	u1281
  5018  0E63  2E65               	goto	u1280
  5019  0E64                     u1281:	
  5020  0E64  2E6A               	goto	l1875
  5021  0E65                     u1280:	
  5022  0E65                     l1873:	
  5023  0E65  09CA               	comf	___awdiv@quotient,f
  5024  0E66  09CB               	comf	___awdiv@quotient+1,f
  5025  0E67  0ACA               	incf	___awdiv@quotient,f
  5026  0E68  1903               	skipnz
  5027  0E69  0ACB               	incf	___awdiv@quotient+1,f
  5028  0E6A                     l1875:	
  5029  0E6A  084B               	movf	___awdiv@quotient+1,w
  5030  0E6B  00F4               	movwf	?___awdiv+1
  5031  0E6C  084A               	movf	___awdiv@quotient,w
  5032  0E6D  00F3               	movwf	?___awdiv
  5033  0E6E                     l576:	
  5034  0E6E  0008               	return
  5035  0E6F                     __end_of___awdiv:	
  5036                           
  5037                           	psect	text15
  5038  0C75                     __ptext15:	
  5039 ;; *************** function _cooking_mode_display *****************
  5040 ;; Defined at:
  5041 ;;		line 230 in file "main.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5055 ;;      Params:         0       0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0
  5057 ;;      Temps:          1       0       0       0       0
  5058 ;;      Totals:         1       0       0       0       0
  5059 ;;Total ram usage:        1 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    3
  5062 ;; This function calls:
  5063 ;;		_clcd_print
  5064 ;; This function is called by:
  5065 ;;		_operation_call
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _cooking_mode_display
  5071  0C75                     _cooking_mode_display:	
  5072  0C75                     l2675:	
  5073                           ;incstack = 0
  5074                           ; Regs used in _cooking_mode_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  5075                           
  5076                           
  5077                           ;main.c: 231:         key_count = 0;
  5078  0C75  303A               	movlw	low (STR_4| (0+32768))
  5079  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5080  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5081  0C78  00C8               	movwf	clcd_print@str
  5082  0C79  3086               	movlw	high (STR_4| (0+32768))
  5083  0C7A  00C9               	movwf	clcd_print@str+1
  5084  0C7B  3080               	movlw	128
  5085  0C7C  00F7               	movwf	??_cooking_mode_display
  5086  0C7D  0877               	movf	??_cooking_mode_display,w
  5087  0C7E  00CA               	movwf	clcd_print@addr
  5088  0C7F  120A  158A  240C  120A  158A  	fcall	_clcd_print
  5089                           
  5090                           ;main.c: 232:         sec = 0;
  5091  0C84  3032               	movlw	low (STR_5| (0+32768))
  5092  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  5093  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  5094  0C87  00C8               	movwf	clcd_print@str
  5095  0C88  3086               	movlw	high (STR_5| (0+32768))
  5096  0C89  00C9               	movwf	clcd_print@str+1
  5097  0C8A  30C0               	movlw	192
  5098  0C8B  00F7               	movwf	??_cooking_mode_display
  5099  0C8C  0877               	movf	??_cooking_mode_display,w
  5100  0C8D  00CA               	movwf	clcd_print@addr
  5101  0C8E  120A  158A  240C  120A  158A  	fcall	_clcd_print
  5102                           
  5103                           ;main.c: 233:         min = 0;
  5104  0C93  3003               	movlw	low (STR_6| (0+32768))
  5105  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0C96  00C8               	movwf	clcd_print@str
  5108  0C97  3086               	movlw	high (STR_6| (0+32768))
  5109  0C98  00C9               	movwf	clcd_print@str+1
  5110  0C99  3090               	movlw	144
  5111  0C9A  00F7               	movwf	??_cooking_mode_display
  5112  0C9B  0877               	movf	??_cooking_mode_display,w
  5113  0C9C  00CA               	movwf	clcd_print@addr
  5114  0C9D  120A  158A  240C  120A  158A  	fcall	_clcd_print
  5115                           
  5116                           ;main.c: 234:         blink = 0;
  5117  0CA2  3042               	movlw	low (STR_7| (0+32768))
  5118  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0CA5  00C8               	movwf	clcd_print@str
  5121  0CA6  3086               	movlw	high (STR_7| (0+32768))
  5122  0CA7  00C9               	movwf	clcd_print@str+1
  5123  0CA8  30D0               	movlw	208
  5124  0CA9  00F7               	movwf	??_cooking_mode_display
  5125  0CAA  0877               	movf	??_cooking_mode_display,w
  5126  0CAB  00CA               	movwf	clcd_print@addr
  5127  0CAC  120A  158A  240C  120A  158A  	fcall	_clcd_print
  5128  0CB1                     l130:	
  5129  0CB1  0008               	return
  5130  0CB2                     __end_of_cooking_mode_display:	
  5131                           
  5132                           	psect	text16
  5133  0C0C                     __ptext16:	
  5134 ;; *************** function _clcd_print *****************
  5135 ;; Defined at:
  5136 ;;		line 61 in file "clcd.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  5139 ;;		 -> STR_30(4), STR_29(12), STR_28(16), STR_27(12), 
  5140 ;;		 -> STR_26(16), STR_25(17), STR_24(17), STR_23(13), 
  5141 ;;		 -> STR_22(4), STR_21(13), STR_20(17), STR_19(17), 
  5142 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(10), 
  5143 ;;		 -> STR_14(17), STR_13(17), STR_12(3), STR_11(3), 
  5144 ;;		 -> min_array(3), sec_array(3), STR_10(17), STR_9(12), 
  5145 ;;		 -> STR_8(17), STR_7(8), STR_6(13), STR_5(8), 
  5146 ;;		 -> STR_4(8), STR_3(17), STR_2(15), STR_1(15), 
  5147 ;;  addr            1    2[BANK0 ] unsigned char 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5159 ;;      Params:         0       3       0       0       0
  5160 ;;      Locals:         0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0
  5162 ;;      Totals:         0       3       0       0       0
  5163 ;;Total ram usage:        3 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    2
  5166 ;; This function calls:
  5167 ;;		_clcd_write
  5168 ;; This function is called by:
  5169 ;;		_loop
  5170 ;;		_power_on_screen
  5171 ;;		_cooking_mode_display
  5172 ;;		_set_time
  5173 ;;		_door_status_check
  5174 ;;		_time_display
  5175 ;;		_set_temp
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function _clcd_print
  5181  0C0C                     _clcd_print:	
  5182  0C0C                     l2593:	
  5183                           ;incstack = 0
  5184                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5185                           
  5186                           
  5187                           ;clcd.c: 61: void clcd_print(const char *str, unsigned char addr);clcd.c: 62: {;clcd.c: 
      +                          63:     clcd_write(addr, 0);
  5188  0C0C  01F3               	clrf	clcd_write@mode
  5189  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0C0F  084A               	movf	clcd_print@addr,w
  5192  0C10  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5193                           
  5194                           ;clcd.c: 65:     while (*str != '\0')
  5195  0C15  2C2E               	goto	l2599
  5196  0C16                     l2595:	
  5197                           
  5198                           ;clcd.c: 66:     {;clcd.c: 67:         clcd_write(*str, 1);
  5199  0C16  01F3               	clrf	clcd_write@mode
  5200  0C17  0AF3               	incf	clcd_write@mode,f
  5201  0C18  0849               	movf	clcd_print@str+1,w
  5202  0C19  00FF               	movwf	btemp+1
  5203  0C1A  0848               	movf	clcd_print@str,w
  5204  0C1B  0084               	movwf	4
  5205  0C1C  120A  118A  24EE  120A  158A  	fcall	stringtab
  5206  0C21  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5207  0C26                     l2597:	
  5208                           
  5209                           ;clcd.c: 68:         str++;
  5210  0C26  3001               	movlw	1
  5211  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  5212  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  5213  0C29  07C8               	addwf	clcd_print@str,f
  5214  0C2A  1803               	skipnc
  5215  0C2B  0AC9               	incf	clcd_print@str+1,f
  5216  0C2C  3000               	movlw	0
  5217  0C2D  07C9               	addwf	clcd_print@str+1,f
  5218  0C2E                     l2599:	
  5219                           
  5220                           ;clcd.c: 65:     while (*str != '\0')
  5221  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  5223  0C30  0849               	movf	clcd_print@str+1,w
  5224  0C31  00FF               	movwf	btemp+1
  5225  0C32  0848               	movf	clcd_print@str,w
  5226  0C33  0084               	movwf	4
  5227  0C34  120A  118A  24EE  120A  158A  	fcall	stringtab
  5228  0C39  3A00               	xorlw	0
  5229  0C3A  1D03               	skipz
  5230  0C3B  2C3D               	goto	u2171
  5231  0C3C  2C3E               	goto	u2170
  5232  0C3D                     u2171:	
  5233  0C3D  2C16               	goto	l2595
  5234  0C3E                     u2170:	
  5235  0C3E                     l304:	
  5236  0C3E  0008               	return
  5237  0C3F                     __end_of_clcd_print:	
  5238                           
  5239                           	psect	text17
  5240  0B9E                     __ptext17:	
  5241 ;; *************** function _init_config *****************
  5242 ;; Defined at:
  5243 ;;		line 22 in file "main.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0, pclath, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5257 ;;      Params:         0       0       0       0       0
  5258 ;;      Locals:         0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0
  5260 ;;      Totals:         0       0       0       0       0
  5261 ;;Total ram usage:        0 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    4
  5264 ;; This function calls:
  5265 ;;		_init_clcd
  5266 ;;		_init_matrix_keypad
  5267 ;;		_init_timer2
  5268 ;; This function is called by:
  5269 ;;		_main
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function _init_config
  5275  0B9E                     _init_config:	
  5276  0B9E                     l3021:	
  5277                           ;incstack = 0
  5278                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  5279                           
  5280                           
  5281                           ;main.c: 25: void main(void)
  5282  0B9E  120A  158A  2344  120A  158A  	fcall	_init_clcd
  5283                           
  5284                           ;main.c: 27:     init_config();
  5285  0BA3  120A  158A  235C  120A  158A  	fcall	_init_matrix_keypad
  5286                           
  5287                           ;main.c: 29:     clear_display();
  5288  0BA8  120A  158A  234F  120A  158A  	fcall	_init_timer2
  5289  0BAD                     l3023:	
  5290                           
  5291                           ;main.c: 31:     loop();
  5292  0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  5293  0BAE  1303               	bcf	3,6	;RP1=0, select bank1
  5294  0BAF  1087               	bcf	7,1	;volatile
  5295  0BB0                     l3025:	
  5296                           
  5297                           ;main.c: 33: 
  5298  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  5299  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  5300  0BB2  1087               	bcf	7,1	;volatile
  5301  0BB3                     l3027:	
  5302                           
  5303                           ;main.c: 35: {
  5304  0BB3  1683               	bsf	3,5	;RP0=1, select bank1
  5305  0BB4  1303               	bcf	3,6	;RP1=0, select bank1
  5306  0BB5  1107               	bcf	7,2	;volatile
  5307  0BB6                     l3029:	
  5308                           
  5309                           ;main.c: 37:     while(1)
  5310  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  5311  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  5312  0BB8  1107               	bcf	7,2	;volatile
  5313  0BB9                     l3031:	
  5314                           
  5315                           ;main.c: 38:     {
  5316  0BB9  170B               	bsf	11,6	;volatile
  5317  0BBA                     l3033:	
  5318                           
  5319                           ;main.c: 39:         key = read_matrix_keypad(1);
  5320  0BBA  178B               	bsf	11,7	;volatile
  5321  0BBB                     l69:	
  5322  0BBB  0008               	return
  5323  0BBC                     __end_of_init_config:	
  5324                           
  5325                           	psect	text18
  5326  0B4F                     __ptext18:	
  5327 ;; *************** function _init_timer2 *****************
  5328 ;; Defined at:
  5329 ;;		line 3 in file "timers.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5343 ;;      Params:         0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0
  5346 ;;      Totals:         0       0       0       0       0
  5347 ;;Total ram usage:        0 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    1
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_init_config
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _init_timer2
  5359  0B4F                     _init_timer2:	
  5360  0B4F                     l2311:	
  5361                           ;incstack = 0
  5362                           ; Regs used in _init_timer2: [wreg]
  5363                           
  5364                           
  5365                           ;timers.c: 6:     T2CKPS0 = 1;
  5366  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  5367  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  5368  0B51  1412               	bsf	18,0	;volatile
  5369                           
  5370                           ;timers.c: 7:     T2CKPS1 = 1;
  5371  0B52  1492               	bsf	18,1	;volatile
  5372  0B53                     l2313:	
  5373                           
  5374                           ;timers.c: 10:     PR2 = 250;
  5375  0B53  30FA               	movlw	250
  5376  0B54  1683               	bsf	3,5	;RP0=1, select bank1
  5377  0B55  1303               	bcf	3,6	;RP1=0, select bank1
  5378  0B56  0092               	movwf	18	;volatile
  5379  0B57                     l2315:	
  5380                           
  5381                           ;timers.c: 13:     TMR2IE = 1;
  5382  0B57  148C               	bsf	12,1	;volatile
  5383  0B58                     l2317:	
  5384                           
  5385                           ;timers.c: 16:     TMR2ON = 0;
  5386  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0B5A  1112               	bcf	18,2	;volatile
  5389  0B5B                     l317:	
  5390  0B5B  0008               	return
  5391  0B5C                     __end_of_init_timer2:	
  5392                           
  5393                           	psect	text19
  5394  0B5C                     __ptext19:	
  5395 ;; *************** function _init_matrix_keypad *****************
  5396 ;; Defined at:
  5397 ;;		line 4 in file "matrix_keypad.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       0       0       0       0
  5412 ;;      Locals:         0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0
  5414 ;;      Totals:         0       0       0       0       0
  5415 ;;Total ram usage:        0 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_init_config
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _init_matrix_keypad
  5427  0B5C                     _init_matrix_keypad:	
  5428  0B5C                     l2299:	
  5429                           ;incstack = 0
  5430                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  5431                           
  5432                           
  5433                           ;matrix_keypad.c: 7:     TRISB = TRISB | 0x07;
  5434  0B5C  1683               	bsf	3,5	;RP0=1, select bank1
  5435  0B5D  1303               	bcf	3,6	;RP1=0, select bank1
  5436  0B5E  0806               	movf	6,w	;volatile
  5437  0B5F  3807               	iorlw	7
  5438  0B60  0086               	movwf	6	;volatile
  5439                           
  5440                           ;matrix_keypad.c: 9:     TRISD = TRISD & 0xF0;
  5441  0B61  0808               	movf	8,w	;volatile
  5442  0B62  39F0               	andlw	240
  5443  0B63  0088               	movwf	8	;volatile
  5444  0B64                     l2301:	
  5445                           
  5446                           ;matrix_keypad.c: 12:     nRBPU = 0;
  5447  0B64  1381               	bcf	1,7	;volatile
  5448  0B65                     l2303:	
  5449                           
  5450                           ;matrix_keypad.c: 15:     RD3 = 1;
  5451  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0B67  1588               	bsf	8,3	;volatile
  5454  0B68                     l2305:	
  5455                           
  5456                           ;matrix_keypad.c: 16:     RD2 = 1;
  5457  0B68  1508               	bsf	8,2	;volatile
  5458  0B69                     l2307:	
  5459                           
  5460                           ;matrix_keypad.c: 17:     RD1 = 1;
  5461  0B69  1488               	bsf	8,1	;volatile
  5462  0B6A                     l2309:	
  5463                           
  5464                           ;matrix_keypad.c: 18:     RD0 = 1;
  5465  0B6A  1408               	bsf	8,0	;volatile
  5466  0B6B                     l227:	
  5467  0B6B  0008               	return
  5468  0B6C                     __end_of_init_matrix_keypad:	
  5469                           
  5470                           	psect	text20
  5471  0B44                     __ptext20:	
  5472 ;; *************** function _init_clcd *****************
  5473 ;; Defined at:
  5474 ;;		line 43 in file "clcd.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5488 ;;      Params:         0       0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0
  5490 ;;      Temps:          0       0       0       0       0
  5491 ;;      Totals:         0       0       0       0       0
  5492 ;;Total ram usage:        0 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    3
  5495 ;; This function calls:
  5496 ;;		_init_display_controller
  5497 ;; This function is called by:
  5498 ;;		_init_config
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           
  5503                           ;psect for function _init_clcd
  5504  0B44                     _init_clcd:	
  5505  0B44                     l2963:	
  5506                           ;incstack = 0
  5507                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  5508                           
  5509                           
  5510                           ;clcd.c: 46:     TRISD = 0x00;
  5511  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  5512  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  5513  0B46  0188               	clrf	8	;volatile
  5514  0B47                     l2965:	
  5515                           
  5516                           ;clcd.c: 49:     TRISE2 = 0;
  5517  0B47  1109               	bcf	9,2	;volatile
  5518  0B48                     l2967:	
  5519                           
  5520                           ;clcd.c: 50:     TRISE1 = 0;
  5521  0B48  1089               	bcf	9,1	;volatile
  5522  0B49                     l2969:	
  5523                           
  5524                           ;clcd.c: 52:     init_display_controller();
  5525  0B49  120A  158A  25A3  120A  158A  	fcall	_init_display_controller
  5526  0B4E                     l295:	
  5527  0B4E  0008               	return
  5528  0B4F                     __end_of_init_clcd:	
  5529                           
  5530                           	psect	text21
  5531  0DA3                     __ptext21:	
  5532 ;; *************** function _init_display_controller *****************
  5533 ;; Defined at:
  5534 ;;		line 21 in file "clcd.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0
  5550 ;;      Temps:          0       2       0       0       0
  5551 ;;      Totals:         0       2       0       0       0
  5552 ;;Total ram usage:        2 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    2
  5555 ;; This function calls:
  5556 ;;		_clcd_write
  5557 ;; This function is called by:
  5558 ;;		_init_clcd
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function _init_display_controller
  5564  0DA3                     _init_display_controller:	
  5565  0DA3                     l2943:	
  5566                           ;incstack = 0
  5567                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  5568                           
  5569                           
  5570                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  5571  0DA3  30C3               	movlw	195
  5572  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  5573  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  5574  0DA6  00C9               	movwf	??_init_display_controller+1
  5575  0DA7  30CC               	movlw	204
  5576  0DA8  00C8               	movwf	??_init_display_controller
  5577  0DA9                     u2917:	
  5578  0DA9  0BC8               	decfsz	??_init_display_controller,f
  5579  0DAA  2DA9               	goto	u2917
  5580  0DAB  0BC9               	decfsz	??_init_display_controller+1,f
  5581  0DAC  2DA9               	goto	u2917
  5582  0DAD  0000               	nop
  5583  0DAE                     l2945:	
  5584                           
  5585                           ;clcd.c: 27:     clcd_write(0x30, 0);
  5586  0DAE  01F3               	clrf	clcd_write@mode
  5587  0DAF  3030               	movlw	48
  5588  0DB0  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5589  0DB5                     l2947:	
  5590                           
  5591                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5592  0DB5  301B               	movlw	27
  5593  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0DB8  00C9               	movwf	??_init_display_controller+1
  5596  0DB9  309D               	movlw	157
  5597  0DBA  00C8               	movwf	??_init_display_controller
  5598  0DBB                     u2927:	
  5599  0DBB  0BC8               	decfsz	??_init_display_controller,f
  5600  0DBC  2DBB               	goto	u2927
  5601  0DBD  0BC9               	decfsz	??_init_display_controller+1,f
  5602  0DBE  2DBB               	goto	u2927
  5603  0DBF  2DC0               	nop2
  5604                           
  5605                           ;clcd.c: 29:     clcd_write(0x30, 0);
  5606  0DC0  01F3               	clrf	clcd_write@mode
  5607  0DC1  3030               	movlw	48
  5608  0DC2  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5609  0DC7                     l2949:	
  5610                           
  5611                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5612  0DC7  30A5               	movlw	165
  5613  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  5614  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  5615  0DCA  00C8               	movwf	??_init_display_controller
  5616  0DCB                     u2937:	
  5617  0DCB  0BC8               	decfsz	??_init_display_controller,f
  5618  0DCC  2DCB               	goto	u2937
  5619  0DCD  2DCE               	nop2
  5620  0DCE                     l2951:	
  5621                           
  5622                           ;clcd.c: 31:     clcd_write(0x30, 0);
  5623  0DCE  01F3               	clrf	clcd_write@mode
  5624  0DCF  3030               	movlw	48
  5625  0DD0  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5626  0DD5                     l2953:	
  5627                           
  5628                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5629  0DD5  2DD6               	nop2	;2 cycle nop
  5630  0DD6  2DD7               	nop2	;2 cycle nop
  5631  0DD7  0000               	nop
  5632  0DD8                     l2955:	
  5633                           
  5634                           ;clcd.c: 34:     clcd_write(0x02 , 0);
  5635  0DD8  01F3               	clrf	clcd_write@mode
  5636  0DD9  3002               	movlw	2
  5637  0DDA  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5638  0DDF                     l2957:	
  5639                           
  5640                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5641  0DDF  30A5               	movlw	165
  5642  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  5643  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  5644  0DE2  00C8               	movwf	??_init_display_controller
  5645  0DE3                     u2947:	
  5646  0DE3  0BC8               	decfsz	??_init_display_controller,f
  5647  0DE4  2DE3               	goto	u2947
  5648  0DE5  2DE6               	nop2
  5649                           
  5650                           ;clcd.c: 37:     clcd_write(0x01, 0);
  5651  0DE6  01F3               	clrf	clcd_write@mode
  5652  0DE7  3001               	movlw	1
  5653  0DE8  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5654  0DED                     l2959:	
  5655                           
  5656                           ;clcd.c: 38:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  5657  0DED  3004               	movlw	4
  5658  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  5659  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  5660  0DF0  00C9               	movwf	??_init_display_controller+1
  5661  0DF1  303D               	movlw	61
  5662  0DF2  00C8               	movwf	??_init_display_controller
  5663  0DF3                     u2957:	
  5664  0DF3  0BC8               	decfsz	??_init_display_controller,f
  5665  0DF4  2DF3               	goto	u2957
  5666  0DF5  0BC9               	decfsz	??_init_display_controller+1,f
  5667  0DF6  2DF3               	goto	u2957
  5668  0DF7                     l2961:	
  5669                           
  5670                           ;clcd.c: 39:     clcd_write(0x0C, 0);
  5671  0DF7  01F3               	clrf	clcd_write@mode
  5672  0DF8  300C               	movlw	12
  5673  0DF9  120A  158A  243F  120A  158A  	fcall	_clcd_write
  5674                           
  5675                           ;clcd.c: 40:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5676  0DFE  30A5               	movlw	165
  5677  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  5678  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  5679  0E01  00C8               	movwf	??_init_display_controller
  5680  0E02                     u2967:	
  5681  0E02  0BC8               	decfsz	??_init_display_controller,f
  5682  0E03  2E02               	goto	u2967
  5683  0E04  2E05               	nop2
  5684  0E05                     l292:	
  5685  0E05  0008               	return
  5686  0E06                     __end_of_init_display_controller:	
  5687                           
  5688                           	psect	text22
  5689  0C3F                     __ptext22:	
  5690 ;; *************** function _clcd_write *****************
  5691 ;; Defined at:
  5692 ;;		line 4 in file "clcd.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  byte            1    wreg     unsigned char 
  5695 ;;  mode            1    3[COMMON] unsigned char 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  byte            1    6[COMMON] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5707 ;;      Params:         1       0       0       0       0
  5708 ;;      Locals:         1       0       0       0       0
  5709 ;;      Temps:          2       0       0       0       0
  5710 ;;      Totals:         4       0       0       0       0
  5711 ;;Total ram usage:        4 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_clear_display
  5718 ;;		_set_time
  5719 ;;		_init_display_controller
  5720 ;;		_clcd_putch
  5721 ;;		_clcd_print
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _clcd_write
  5727  0C3F                     _clcd_write:	
  5728                           
  5729                           ;incstack = 0
  5730                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  5731                           ;clcd_write@byte stored from wreg
  5732  0C3F  00F6               	movwf	clcd_write@byte
  5733  0C40                     l1767:	
  5734                           
  5735                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 = mode;
  5736  0C40  1873               	btfsc	clcd_write@mode,0
  5737  0C41  2C43               	goto	u1091
  5738  0C42  2C47               	goto	u1090
  5739  0C43                     u1091:	
  5740  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  5741  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  5742  0C45  1509               	bsf	9,2	;volatile
  5743  0C46  2C4A               	goto	u1104
  5744  0C47                     u1090:	
  5745  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  5746  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  5747  0C49  1109               	bcf	9,2	;volatile
  5748  0C4A                     u1104:	
  5749  0C4A                     l1769:	
  5750                           
  5751                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  5752  0C4A  0876               	movf	clcd_write@byte,w
  5753  0C4B  39F0               	andlw	240
  5754  0C4C  0088               	movwf	8	;volatile
  5755  0C4D                     l1771:	
  5756                           
  5757                           ;clcd.c: 9:     RE1 = 1;
  5758  0C4D  1489               	bsf	9,1	;volatile
  5759  0C4E                     l1773:	
  5760                           
  5761                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5762  0C4E  30A6               	movlw	166
  5763  0C4F  00F4               	movwf	??_clcd_write
  5764  0C50                     u2977:	
  5765  0C50  0BF4               	decfsz	??_clcd_write,f
  5766  0C51  2C50               	goto	u2977
  5767  0C52  0000               	nop
  5768  0C53                     l1775:	
  5769                           
  5770                           ;clcd.c: 11:     RE1 = 0;
  5771  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0C54  1303               	bcf	3,6	;RP1=0, select bank0
  5773  0C55  1089               	bcf	9,1	;volatile
  5774  0C56                     l1777:	
  5775                           
  5776                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  5777  0C56  0876               	movf	clcd_write@byte,w
  5778  0C57  390F               	andlw	15
  5779  0C58  00F4               	movwf	??_clcd_write
  5780  0C59  3003               	movlw	3
  5781  0C5A                     u1115:	
  5782  0C5A  1003               	clrc
  5783  0C5B  0DF4               	rlf	??_clcd_write,f
  5784  0C5C  3EFF               	addlw	-1
  5785  0C5D  1D03               	skipz
  5786  0C5E  2C5A               	goto	u1115
  5787  0C5F  1003               	clrc
  5788  0C60  0D74               	rlf	??_clcd_write,w
  5789  0C61  0088               	movwf	8	;volatile
  5790  0C62                     l1779:	
  5791                           
  5792                           ;clcd.c: 14:     RE1 = 1;
  5793  0C62  1489               	bsf	9,1	;volatile
  5794  0C63                     l1781:	
  5795                           
  5796                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5797  0C63  30A6               	movlw	166
  5798  0C64  00F4               	movwf	??_clcd_write
  5799  0C65                     u2987:	
  5800  0C65  0BF4               	decfsz	??_clcd_write,f
  5801  0C66  2C65               	goto	u2987
  5802  0C67  0000               	nop
  5803  0C68                     l1783:	
  5804                           
  5805                           ;clcd.c: 16:     RE1 = 0;
  5806  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  5807  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0C6A  1089               	bcf	9,1	;volatile
  5809  0C6B                     l1785:	
  5810                           
  5811                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5812  0C6B  301B               	movlw	27
  5813  0C6C  00F5               	movwf	??_clcd_write+1
  5814  0C6D  309E               	movlw	158
  5815  0C6E  00F4               	movwf	??_clcd_write
  5816  0C6F                     u2997:	
  5817  0C6F  0BF4               	decfsz	??_clcd_write,f
  5818  0C70  2C6F               	goto	u2997
  5819  0C71  0BF5               	decfsz	??_clcd_write+1,f
  5820  0C72  2C6F               	goto	u2997
  5821  0C73  0000               	nop
  5822  0C74                     l289:	
  5823  0C74  0008               	return
  5824  0C75                     __end_of_clcd_write:	
  5825                           
  5826                           	psect	text23
  5827  0CF0                     __ptext23:	
  5828 ;; *************** function _isr *****************
  5829 ;; Defined at:
  5830 ;;		line 6 in file "isr.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      void 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0, btemp+1
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5844 ;;      Params:         0       0       0       0       0
  5845 ;;      Locals:         0       0       0       0       0
  5846 ;;      Temps:          3       0       0       0       0
  5847 ;;      Totals:         3       0       0       0       0
  5848 ;;Total ram usage:        3 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; This function calls:
  5851 ;;		Nothing
  5852 ;; This function is called by:
  5853 ;;		Interrupt level 1
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           
  5858                           ;psect for function _isr
  5859  0CF0                     _isr:	
  5860  0CF0                     i1l2525:	
  5861                           
  5862                           ;isr.c: 8:     static unsigned int count = 0, sec_count;;isr.c: 10:     if (TMR2IF == 1)
  5863  0CF0  1C8C               	btfss	12,1	;volatile
  5864  0CF1  2CF3               	goto	u212_21
  5865  0CF2  2CF4               	goto	u212_20
  5866  0CF3                     u212_21:	
  5867  0CF3  2D3F               	goto	i1l337
  5868  0CF4                     u212_20:	
  5869  0CF4                     i1l2527:	
  5870                           
  5871                           ;isr.c: 11:     {;isr.c: 12:         if (++count == 1250)
  5872  0CF4  3001               	movlw	1
  5873  0CF5  07A2               	addwf	isr@count,f
  5874  0CF6  1803               	skipnc
  5875  0CF7  0AA3               	incf	isr@count+1,f
  5876  0CF8  3000               	movlw	0
  5877  0CF9  07A3               	addwf	isr@count+1,f
  5878  0CFA  30E2               	movlw	226
  5879  0CFB  0622               	xorwf	isr@count,w
  5880  0CFC  3004               	movlw	4
  5881  0CFD  1903               	skipnz
  5882  0CFE  0623               	xorwf	isr@count+1,w
  5883  0CFF  1D03               	btfss	3,2
  5884  0D00  2D02               	goto	u213_21
  5885  0D01  2D03               	goto	u213_20
  5886  0D02                     u213_21:	
  5887  0D02  2D3C               	goto	i1l2541
  5888  0D03                     u213_20:	
  5889  0D03                     i1l2529:	
  5890                           
  5891                           ;isr.c: 13:         {;isr.c: 14:             count = 0;
  5892  0D03  01A2               	clrf	isr@count
  5893  0D04  01A3               	clrf	isr@count+1
  5894  0D05                     i1l2531:	
  5895                           
  5896                           ;isr.c: 15:             if(sec > 0)
  5897  0D05  083B               	movf	_sec+1,w
  5898  0D06  3A80               	xorlw	128
  5899  0D07  00FF               	movwf	btemp+1
  5900  0D08  3080               	movlw	128
  5901  0D09  027F               	subwf	btemp+1,w
  5902  0D0A  1D03               	skipz
  5903  0D0B  2D0E               	goto	u214_25
  5904  0D0C  3001               	movlw	1
  5905  0D0D  023A               	subwf	_sec,w
  5906  0D0E                     u214_25:	
  5907  0D0E  1C03               	skipc
  5908  0D0F  2D11               	goto	u214_21
  5909  0D10  2D12               	goto	u214_20
  5910  0D11                     u214_21:	
  5911  0D11  2D1B               	goto	i1l2535
  5912  0D12                     u214_20:	
  5913  0D12                     i1l2533:	
  5914                           
  5915                           ;isr.c: 16:             {;isr.c: 17:                 sec--;
  5916  0D12  30FF               	movlw	255
  5917  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  5918  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  5919  0D15  07BA               	addwf	_sec,f
  5920  0D16  1803               	skipnc
  5921  0D17  0ABB               	incf	_sec+1,f
  5922  0D18  30FF               	movlw	255
  5923  0D19  07BB               	addwf	_sec+1,f
  5924                           
  5925                           ;isr.c: 18:             }
  5926  0D1A  2D3C               	goto	i1l2541
  5927  0D1B                     i1l2535:	
  5928  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0D1D  083A               	movf	_sec,w
  5931  0D1E  043B               	iorwf	_sec+1,w
  5932  0D1F  1D03               	btfss	3,2
  5933  0D20  2D22               	goto	u215_21
  5934  0D21  2D23               	goto	u215_20
  5935  0D22                     u215_21:	
  5936  0D22  2D3C               	goto	i1l2541
  5937  0D23                     u215_20:	
  5938  0D23                     i1l2537:	
  5939  0D23  083D               	movf	_min+1,w
  5940  0D24  3A80               	xorlw	128
  5941  0D25  00FF               	movwf	btemp+1
  5942  0D26  3080               	movlw	128
  5943  0D27  027F               	subwf	btemp+1,w
  5944  0D28  1D03               	skipz
  5945  0D29  2D2C               	goto	u216_25
  5946  0D2A  3001               	movlw	1
  5947  0D2B  023C               	subwf	_min,w
  5948  0D2C                     u216_25:	
  5949  0D2C  1C03               	skipc
  5950  0D2D  2D2F               	goto	u216_21
  5951  0D2E  2D30               	goto	u216_20
  5952  0D2F                     u216_21:	
  5953  0D2F  2D3C               	goto	i1l2541
  5954  0D30                     u216_20:	
  5955  0D30                     i1l2539:	
  5956                           
  5957                           ;isr.c: 20:             {;isr.c: 21:                 min--;
  5958  0D30  30FF               	movlw	255
  5959  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  5960  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  5961  0D33  07BC               	addwf	_min,f
  5962  0D34  1803               	skipnc
  5963  0D35  0ABD               	incf	_min+1,f
  5964  0D36  30FF               	movlw	255
  5965  0D37  07BD               	addwf	_min+1,f
  5966                           
  5967                           ;isr.c: 22:                 sec = 59;
  5968  0D38  303B               	movlw	59
  5969  0D39  00BA               	movwf	_sec
  5970  0D3A  3000               	movlw	0
  5971  0D3B  00BB               	movwf	_sec+1
  5972  0D3C                     i1l2541:	
  5973                           
  5974                           ;isr.c: 26:         TMR2IF = 0;
  5975  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  5977  0D3E  108C               	bcf	12,1	;volatile
  5978  0D3F                     i1l337:	
  5979  0D3F  0872               	movf	??_isr+2,w
  5980  0D40  00FF               	movwf	btemp+1
  5981  0D41  0871               	movf	??_isr+1,w
  5982  0D42  008A               	movwf	10
  5983  0D43  0E70               	swapf	??_isr^(0+4294967168),w
  5984  0D44  0083               	movwf	3
  5985  0D45  0EFE               	swapf	btemp,f
  5986  0D46  0E7E               	swapf	btemp,w
  5987  0D47  0009               	retfie
  5988  0D48                     __end_of_isr:	
  5989  007E                     btemp	set	126	;btemp
  5990  007E                     wtemp0	set	126
  5991                           
  5992                           	psect	intentry
  5993  0004                     __pintentry:	
  5994                           ;incstack = 0
  5995                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  5996                           
  5997  0004                     interrupt_function:	
  5998  007E                     saved_w	set	btemp
  5999  0004  00FE               	movwf	btemp
  6000  0005  0E03               	swapf	3,w
  6001  0006  00F0               	movwf	??_isr
  6002  0007  080A               	movf	10,w
  6003  0008  00F1               	movwf	??_isr+1
  6004  0009  1283               	bcf	3,5	;RP0=0, select bank0
  6005  000A  1303               	bcf	3,6	;RP1=0, select bank0
  6006  000B  087F               	movf	btemp+1,w
  6007  000C  00F2               	movwf	??_isr+2
  6008  000D  120A  158A  2CF0   	ljmp	_isr


Data Sizes:
    Strings     334
    Constant    0
    Data        1
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     24      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_30(CODE[4]), STR_29(CODE[12]), STR_28(CODE[16]), STR_27(CODE[12]), 
		 -> STR_26(CODE[16]), STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[13]), 
		 -> STR_22(CODE[4]), STR_21(CODE[13]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> min_array(BANK0[3]), sec_array(BANK0[3]), STR_10(CODE[17]), STR_9(CODE[12]), 
		 -> STR_8(CODE[17]), STR_7(CODE[8]), STR_6(CODE[13]), STR_5(CODE[8]), 
		 -> STR_4(CODE[8]), STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _loop->_read_matrix_keypad
    _read_matrix_keypad->_scan_keypad
    _operation_call->_cooking_mode_display
    _time_display->___awdiv
    _time_display->_door_status_check
    _set_time->___awdiv
    _set_temp->___awdiv
    _set_temp->_door_status_check
    _clear_display->_clcd_write
    _clcd_putch->___awdiv
    ___awmod->___awdiv
    _clcd_print->_clcd_write
    _init_display_controller->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_loop
    _power_on_screen->_clcd_putch
    _loop->_operation_call
    _operation_call->_set_temp
    _time_display->_clcd_putch
    _set_time->___awmod
    _set_temp->_clcd_putch
    _door_status_check->_clcd_print
    _clcd_putch->___awmod
    ___awmod->___awdiv
    _cooking_mode_display->_clcd_print
    _init_clcd->_init_display_controller

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   84367
                      _clear_display
                        _init_config
                               _loop
                    _power_on_screen
 ---------------------------------------------------------------------------------
 (1) _power_on_screen                                      7     7      0    9146
                                             13 BANK0      7     7      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (1) _loop                                                 4     4      0   73265
                                             20 BANK0      4     4      0
                         _clcd_print
                      _clear_display
                     _operation_call
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _read_matrix_keypad                                   3     3      0     203
                                              5 COMMON     3     3      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (3) _scan_keypad                                          2     2      0      92
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _operation_call                                       3     3      0   64850
                                             17 BANK0      3     3      0
                      _clear_display
               _cooking_mode_display
                           _set_temp
                           _set_time
                       _time_display
 ---------------------------------------------------------------------------------
 (3) _time_display                                         3     3      0   21307
                                             13 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                      _clear_display
                  _door_status_check
 ---------------------------------------------------------------------------------
 (3) _set_time                                             3     3      0   13255
                                             11 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _clcd_print
                         _clcd_write
                      _clear_display
 ---------------------------------------------------------------------------------
 (3) _set_temp                                             4     4      0   22172
                                             13 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                      _clear_display
                  _door_status_check
 ---------------------------------------------------------------------------------
 (4) _door_status_check                                    1     1      0    7992
                                              7 COMMON     1     1      0
                         _clcd_print
                      _clear_display
 ---------------------------------------------------------------------------------
 (5) _clear_display                                        0     0      0     978
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1934
                                             11 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1873
                                              4 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1516
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _cooking_mode_display                                 1     1      0    7014
                                              7 COMMON     1     1      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    7014
                                              0 BANK0      3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     978
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     978
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     978
                                              0 BANK0      2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     978
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear_display
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer2
   _loop
     _clcd_print
       _clcd_write
     _clear_display
       _clcd_write
     _operation_call
       _clear_display
         _clcd_write
       _cooking_mode_display
         _clcd_print
           _clcd_write
       _set_temp
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         ___wmul
         _clcd_print
           _clcd_write
         _clcd_putch
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           _clcd_write (ARG)
         _clear_display
           _clcd_write
         _door_status_check
           _clcd_print
             _clcd_write
           _clear_display
             _clcd_write
       _set_time
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         ___wmul
         _clcd_print
           _clcd_write
         _clcd_write
         _clear_display
           _clcd_write
       _time_display
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _clcd_print
           _clcd_write
         _clcd_putch
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           _clcd_write (ARG)
         _clear_display
           _clcd_write
         _door_status_check
           _clcd_print
             _clcd_write
           _clear_display
             _clcd_write
     _read_matrix_keypad
       _scan_keypad
   _power_on_screen
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _clcd_write (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Aug 18 21:17:55 2021

                               pc 0002                    clcd_print@addr 004A  __size_of_init_display_controller 0063  
                      __CFG_WDTE$ 0000                                l80 0F3C                                l74 0B9B  
                              l69 0BBB                                l77 0F1B                      ___awdiv@sign 0049  
                              fsr 0004               ___wmul@multiplicand 0075                _init_matrix_keypad 0B5C  
                             l120 07FA                               l130 0CB1                               l133 0B3B  
                             l117 07C8                               l118 07CB                               l127 04ED  
                             l304 0C3E                               l232 0E87                               l241 0EB1  
                             l233 0E8F                               l250 0EE3                               l242 0EB9  
                             l234 0F1A                               l227 0B6B                               l251 0EEF  
                             l243 0EC5                               l235 0E9B                               l172 0CEF  
                             l260 0F13                               l252 0EE9                               l244 0EBF  
                             l236 0E95                               l317 0B5B                               l165 0473  
                             l423 0BF1                               l176 075B                               l425 0C0B  
                             l169 0CDE                               l257 0F05                               l249 0EDB  
                             l258 0F0D                               l292 0E05                               l268 0BE0  
                             l197 0269                               l295 0B4E                               l289 0C74  
                             l298 0B80                               l576 0E6E                               l589 0DA2  
                             _GIE 005F                               _RB0 0030                               _RB1 0031  
                             _RB2 0032                               _RC1 0039                               _RB3 0033  
                             _RC2 003A                               _RD0 0040                               _RD1 0041  
                             _RD2 0042                               _RD3 0043                               _RE1 0049  
                             _RE2 004A                               _PR2 0092                               _min 003C  
                             _sec 003A                               _isr 0CF0                               _ret 0038  
                  clcd_putch@addr 0053                               fsr0 0004                    clcd_putch@data 0054  
                             indf 0000                      ___awmod@sign 0052     __size_of_cooking_mode_display 003D  
             ?_init_matrix_keypad 0070                              l3001 07BB                              l3003 07C1  
                            l3011 07EE                              l2211 0EB7                              l2203 0E99  
                            l2301 0B64                              l3021 0B9E                              l3013 07F6  
                            l3005 07CD                              l3101 0F9E                              l2303 0B65  
                            l2311 0B4F                              l3031 0BB9                              l3023 0BAD  
                            l2231 0EE1                              l2223 0EC3                              l2207 0E9F  
                            l3111 0FB0                              l3103 0FA2                              l2305 0B68  
                            l2313 0B53                              l3033 0BBA                              l3025 0BB0  
                            l3009 07D2                              l2217 0EBD                              l2209 0EA3  
                            l2321 0BC5                              l3121 0FDD                              l3113 0FB8  
                            l3105 0FA3                              l3041 0478                              l2307 0B69  
                            l2315 0B57                              l3027 0BB3                              l2251 0F0B  
                            l2243 0EED                              l2227 0EC9                              l2331 0BD1  
                            l2323 0BCA                              l3131 0FF1                              l3115 0FC5  
                            l3107 0FA4                              l3043 0485                              l3035 0474  
                            l2309 0B6A                              l2317 0B58                              l3029 0BB6  
                            l2237 0EE7                              l2229 0ECD                              l2333 0BD6  
                            l2341 0BD8                              l3117 0FCD                              l3109 0FA9  
                            l3125 0FE0                              l3061 04DE                              l3045 048D  
                            l3141 0B8B                              l2263 0F17                              l2247 0EF3  
                            l2191 0E8D                              l2343 0BDD                              l2319 0BBD  
                            l3127 0FE6                              l3119 0FD6                              l3071 0F3D  
                            l3135 0FF6                              l3063 0F1B                              l3055 04BC  
                            l3047 049A                              l3143 0B90                              l2601 0CB2  
                            l2257 0F11                              l2249 0EF7                              l2185 0E6F  
                            l2345 0BDF                              l2329 0BCC                              l3129 0FEB  
                            l3081 0F6C                              l3073 0F42                              l3065 0F26  
                            l3057 04C9                              l3049 04B8                              l3145 0B96  
                            l3137 0B81                              l2611 0CE4                              l2603 0CB8  
                            l2267 0F19                              l2187 0E75                              l3091 0F87  
                            l3075 0F4A                              l3083 0F72                              l3067 0F2D  
                            l3059 04D1                              l3139 0B86                              l2613 0CE9  
                            l2605 0CBB                              l2701 0711                              l2197 0E93  
                            l2189 0E79                              l3085 0F78                              l3077 0F4F  
                            l3069 0F34                              l2631 0BFF                              l2623 0BE1  
                            l2615 0CEC                              l2607 0CC0                              l2711 073C  
                            l2703 0717                              l3095 0F90                              l3079 0F5E  
                            l1841 0E12                              l2641 0D4F                              l2633 0C05  
                            l2625 0BE5                              l2617 0CED                              l2609 0CCF  
                            l2801 03DF                              l2721 027A                              l2713 073F  
                            l2705 0719                              l3097 0F96                              l3089 0F81  
                            l1771 0C4D                              l2299 0B5C                              l1851 0E23  
                            l1843 0E14                              l1835 0E06                              l2651 0D65  
                            l2643 0D54                              l2627 0BE9                              l2619 0CEE  
                            l2811 0417                              l2803 03F3                              l2731 028D  
                            l2723 0281                              l2715 074D                              l2707 071E  
                            l3099 0F9C                              l1781 0C63                              l1773 0C4E  
                            l1861 0E3B                              l1853 0E29                              l1845 0E18  
                            l1837 0E09                              l2661 0D81                              l2653 0D68  
                            l2645 0D56                              l2637 0D48                              l2629 0BF8  
                            l2901 012C                              l2821 044A                              l2813 0425  
                            l2805 0407                              l2733 028F                              l2725 0287  
                            l2741 02BC                              l2717 0750                              l2709 072D  
                            l3197 07D7                              l1783 0C68                              l1775 0C53  
                            l1767 0C40                              l1863 0E4C                              l1855 0E2C  
                            l1871 0E60                              l1847 0E1D                              l1839 0E0D  
                            l2671 0D9E                              l2663 0D87                              l2655 0D6F  
                            l2647 0D5A                              l2639 0D4B                              l2911 016C  
                            l2903 013A                              l3199 046B                              l2823 0458  
                            l2815 0432                              l2807 0408                              l2751 02E2  
                            l2743 02C3                              l2735 0291                              l2727 0289  
                            l2719 026D                              l1785 0C6B                              l1777 0C56  
                            l1769 0C4A                              l2593 0C0C                              l1873 0E65  
                            l1865 0E52                              l1857 0E33                              l1849 0E21  
                            l2665 0D8E                              l2657 0D73                              l2649 0D5F  
                            l2913 0184                              l2905 0147                              l2841 003A  
                            l2833 002B                              l2809 0415                              l2817 0441  
                            l2761 033C                              l2753 02FC                              l2745 02C9  
                            l2737 029E                              l2729 028B                              l2681 0678  
                            l1779 0C62                              l2595 0C16                              l2675 0C75  
                            l1875 0E6A                              l1867 0E53                              l1859 0E37  
                            l2659 0D77                              l2667 0D94                              l1787 0B34  
                            l2931 020C                              l2915 01AF                              l2907 014D  
                            l2923 01D5                              l2851 0066                              l2843 003C  
                            l2835 0032                              l2827 0466                              l2771 0368  
                            l2763 0341                              l2755 0309                              l2747 02CF  
                            l2739 02AD                              l2691 06C0                              l2683 068C  
                            l2597 0C26                              l1869 0E5A                              l2669 0D99  
                            l1797 0B6F                              l2933 0237                              l2925 01E4  
                            l2909 0169                              l2917 01CB                              l2861 0097  
                            l2853 0075                              l2845 003E                              l2837 0036  
                            l2781 039C                              l2773 0375                              l2765 034E  
                            l2757 0316                              l2749 02D5                              l2693 06DC  
                            l2685 068D                              l2677 064E                              l2951 0DCE  
                            l2943 0DA3                              l2599 0C2E                              l2927 01E6  
                            l2935 0253                              l2919 01D3                              l2871 00CF  
                            l2863 009D                              l2847 004B                              l2839 0038  
                            l2855 0084                              l2791 03AF                              l2775 037E  
                            l2767 035B                              l2759 032F                              l2695 06EB  
                            l2687 069A                              l2679 0662                              l2961 0DF7  
                            l2953 0DD5                              l2945 0DAE                              l2937 025B  
                            l2929 01F4                              l2881 00F9                              l2873 00D5  
                            l2865 00AA                              l2857 008B                              l2849 0057  
                            l2793 03B0                              l2777 038B                              l2785 03A1  
                            l2769 0362                              l2697 06FA                              l2689 06A6  
                            l2955 0DD8                              l2947 0DB5                              l2963 0B44  
                            l2939 0268                              l2883 0107                              l2875 00E2  
                            l2859 0091                              l2867 00C4                              l2787 03A7  
                            l2779 0398                              l2795 03B4                              l2699 0709  
                            l2971 075F                              l2957 0DDF                              l2949 0DC7  
                            l2965 0B47                              l2885 010A                              l2877 00E7  
                            l2893 0111                              l2869 00CA                              l2797 03CA  
                            l2789 03AC                              l2981 077A                              l2973 0760  
                            l2959 0DED                              l2967 0B48                              l2895 0116  
                            l2887 010F                              l2879 00F6                              l2799 03DE  
                            l2991 07A3                              l2983 0780                              l2975 0766  
                            l2969 0B49                              l2897 0125                              l2993 07A4  
                            l2985 078E                              l2977 076C                              l2899 012B  
                            l2995 07AC                              l2987 0794                              l2979 0773  
                            l2997 07B1                              l2989 079D                              l2999 07B8  
                            ?_isr 0070                              STR_1 05DA                              STR_2 05CB  
                            STR_3 0577                              STR_4 063A                              STR_5 0632  
                            STR_6 0603                              STR_7 0642                              STR_8 0588  
                            STR_9 0610                              u1104 0C4A                              u1200 0E18  
                            u1201 0E17                              u1210 0E29                              u1115 0C5A  
                            u1211 0E28                              u1230 0E3B                              u1231 0E3A  
                            u2200 0BE9                              u1225 0E2D                              u2201 0BE8  
                            u1090 0C47                              u1250 0E4C                              u1091 0C43  
                            u1251 0E4B                              u1245 0E3C                              u1270 0E60  
                            u1190 0E0D                              u2310 0D94                              u2230 0C05  
                            u1271 0E5F                              u1255 0E48                              u1191 0E0C  
                            u2311 0D93                              u2231 0C04                              u2215 0BF2  
                            u1280 0E65                              u2320 0D99                              u2240 0D4F  
                            u2400 0309                              u1281 0E64                              u1265 0E54  
                            u2321 0D98                              u2305 0D88                              u2241 0D4E  
                            u2225 0BF9                              u2401 0308                              u2170 0C3E  
                            u2250 0D5A                              u2410 0316                              u2330 0711  
                            u2171 0C3D                              u2251 0D59                              u2411 0315  
                            u2331 0710                              u2260 0D65                              u2180 0CB8  
                            u2500 0415                              u2420 033C                              u2340 0717  
                            u2261 0D64                              u2181 0CB7                              u2501 0414  
                            u2421 033B                              u2405 0305                              u2341 0716  
                            u2190 0CE4                              u2510 041E                              u2430 034E  
                            u2350 027A                              u2191 0CE3                              u2511 041C  
                            u2431 034D                              u2415 0312                              u2351 0279  
                            u2280 0D77                              u2600 00D5                              u2520 041F  
                            u2440 035B                              u2360 02C3                              u1800 0EC3  
                            u2281 0D76                              u2601 00D4                              u2441 035A  
                            u2425 0338                              u2361 02C2                              u1801 0EC2  
                            u2290 0D81                              u2610 00E2                              u2530 0449  
                            u2450 0368                              u2370 02C9                              u1810 0EDB  
                            u1730 0E87                              u2291 0D80                              u2275 0D69  
                            u2611 00E1                              u2531 0448                              u2451 0367  
                            u2435 034A                              u2371 02C8                              u2355 0276  
                            u1811 0EDA                              u1731 0E86                              u2620 014D  
                            u2540 0032                              u2460 0375                              u2380 02CF  
                            u2700 07A3                              u1820 0EE1                              u1740 0E8D  
                            u1900 0BD1                              u2621 014C                              u2541 0031  
                            u2461 0374                              u2445 0357                              u2381 02CE  
                            u2701 07A2                              u1821 0EE0                              u1741 0E8C  
                            u1901 0BD0                              u2630 01D3                              u2550 008B  
                            u2470 038B                              u2390 02E2                              u2710 07F6  
                            u1830 0EE7                              u1750 0E93                              u1910 0BD6  
                            u2295 0D7D                              u2631 01D2                              u2615 00DE  
                            u2551 008A                              u2471 038A                              u2391 02E1  
                            u2711 07F5                              u1831 0EE6                              u1751 0E92  
                            u1911 0BD5                              u2640 01E4                              u2560 0091  
                            u2480 0398                              u1840 0EED                              u1760 0E99  
                            u1920 0BDD                              u2800 0F96                              u2720 049A  
                            u2641 01E3                              u2561 0090                              u2481 0397  
                            u2465 0371                              u1841 0EEC                              u1761 0E98  
                            u1921 0BDC                              u2801 0F95                              u2721 0499  
                            u2650 01ED                              u2570 0097                              u2490 03A7  
                            u1850 0F05                              u1770 0EB1                              u2810 0F9C  
                            u2730 04DE                              u2651 01EB                              u2571 0096  
                            u2491 03A6                              u2475 0387                              u2395 02DE  
                            u1851 0F04                              u1771 0EB0                              u2811 0F9B  
                            u2731 04DD                              u2660 01EE                              u2580 00AA  
                            u1860 0F0B                              u1780 0EB7                              u2820 0FB0  
                            u2740 0F2D                              u2581 00A9                              u2485 0394  
                            u1861 0F0A                              u1781 0EB6                              u2821 0FAF  
                            u2741 0F2C                              u2725 0496                              u2670 025B  
                            u2590 00CA                              u1870 0F11                              u1790 0EBD  
                            u2830 0FC5                              u2750 0F34                              u2671 025A  
                            u2591 00C9                              u1871 0F10                              u1791 0EBC  
                            u2831 0FC4                              u2751 0F33                              u2735 04DA  
                            u2680 0780                              u1880 0F17                              u2840 0FDD  
                            u2760 0F3B                              u2585 00A6                              u2681 077F  
                            u1881 0F16                              u2841 0FDC                              u2761 0F3A  
                            u2690 0794                              u1890 0BCA                              u2850 0FE6  
                            u2770 0F42                              u2907 0101                              u2691 0793  
                            u1891 0BC9                              u2851 0FE5                              u2835 0FC1  
                            u2771 0F41                              _PEIE 005E                              u2860 0FF1  
                            u2780 0F78                              u2917 0DA9                              u2861 0FF0  
                            u2781 0F77                              u2790 0F87                              u2927 0DBB  
                            u2791 0F86                              u2937 0DCB                              u2947 0DE3  
                            u2957 0DF3                              u2877 04E6                              u2967 0E02  
                            u2887 0F66                              u2977 0C50                              u2897 0747  
                            u2987 0C65                              u2997 0C6F                              _flag 0036  
                            _main 0B81                              _loop 0F1B                              btemp 007E  
                            start 0010              ??_init_matrix_keypad 0073                    clcd_write@byte 0076  
                  clcd_write@mode 0073        __size_of_door_status_check 003E           __end_of_power_on_screen 04EE  
                           ??_isr 0070                             ?_main 0070                   __end_of___awdiv 0E6F  
                           ?_loop 0070                             STR_10 05AA                             STR_11 050E  
                           STR_12 050E                             STR_20 0522                             STR_21 05E9  
                           STR_13 0599                             STR_30 050D                             STR_22 064A  
                           STR_14 0544                             STR_15 0628                             STR_23 05F6  
                           STR_24 05AA                             STR_16 0566                             STR_25 0555  
                           STR_17 0511                             STR_26 05BB                             STR_18 0500  
                           STR_27 061C                             STR_19 0533                             STR_28 05BB  
                 __end_of___awmod 0DA3                             STR_29 061C                   ___awdiv@divisor 0073  
                           i1l337 0D3F                      ?_init_config 0070                   ___awdiv@counter 0048  
                           _PORTD 0008                             _TRISB 0086                             _TRISD 0088  
                    ?_init_timer2 0070                             _nRBPU 040F                _read_matrix_keypad 0BBC  
                           pclath 000A               ?_read_matrix_keypad 0070                             status 0003  
                           wtemp0 007E                      ?_scan_keypad 0070                   __initialization 0013  
                    __end_of_main 0B9E                      __end_of_loop 1000              ??_read_matrix_keypad 0075  
                          ??_main 0078                            ??_loop 005C                  ___awdiv@dividend 0075  
                          i1l2531 0D05                            i1l2533 0D12                            i1l2541 0D3C  
                          i1l2525 0CF0                            i1l2535 0D1B                            i1l2527 0CF4  
                          i1l2537 0D23                            i1l2529 0D03                            i1l2539 0D30  
                          u212_20 0CF4                            u212_21 0CF3                            u213_20 0D03  
                          u213_21 0D02                            u214_20 0D12                            u214_21 0D11  
                          u214_25 0D0E                            u215_20 0D23                            u215_21 0D22  
                          u216_20 0D30                            u216_21 0D2F                            u216_25 0D2C  
                          _TMR2IE 0461                            _TMR2IF 0061                            _TMR2ON 0092  
                          _TRISC1 0439                            _TRISC2 043A                            _TRISE1 0449  
                          _TRISE2 044A             __end_of_clear_display 0B3C           _init_display_controller 0DA3  
                          ___wmul 0BE1                         ??___awdiv 0077                  ?_power_on_screen 0070  
                       ??___awmod 0050                  ___awdiv@quotient 004A                   ___awmod@divisor 004C  
                 ___awmod@counter 0051                      __pdataCOMMON 007A                  __end_of_set_temp 026A  
                __end_of_set_time 0474                            saved_w 007E           __end_of__initialization 0024  
         __size_of_operation_call 009F                    __pcstackCOMMON 0070              __size_of_init_config 001E  
            __size_of_init_timer2 000D                        __pbssBANK0 0020                __size_of_init_clcd 000B  
    __end_of_cooking_mode_display 0CB2         ??_init_display_controller 0048                        _clcd_print 0C0C  
                      _clcd_putch 0B6C                        _clcd_write 0C3F              __size_of_scan_keypad 00AC  
                      __pmaintext 0B81                           ?___wmul 0073                        __pintentry 0004  
                         _T2CKPS0 0090                           _T2CKPS1 0091                        __stringtab 04EE  
                    isr@sec_count 0020                         ?_set_temp 0070                         ?_set_time 0070  
     __size_of_init_matrix_keypad 0010                           ___awdiv 0E06                           ___awmod 0D48  
                 __size_of___wmul 002B                           __ptext1 0474                           __ptext2 0F1B  
                         __ptext3 0BBC                           __ptext4 0E6F                           __ptext5 075C  
                         __ptext6 064E                           __ptext7 026A                           __ptext8 0028  
                         __ptext9 0CB2   __end_of_init_display_controller 0E06                 __end_of_init_clcd 0B4F  
                    __size_of_isr 0058                  ___awmod@dividend 004E                     ?_time_display 0070  
                         clrloop0 0B3D              end_of_initialization 0024                       set_temp@key 0058  
                     set_time@key 0055                    _operation_call 075C                           loop@key 005F  
                  _operation_mode 0040                       ?_clcd_print 0048                       ?_clcd_putch 0053  
                     ?_clcd_write 0073                        _reset_flag 003E                        ??_set_temp 0055  
                      ??_set_time 0053                      __pstringtext 0500       __size_of_read_matrix_keypad 0025  
            _cooking_mode_display 0C75                    ??_time_display 0055                     clcd_print@str 0048  
          __end_of_operation_call 07FB                    __end_of___wmul 0C0C                     __pidataCOMMON 07FB  
           ?_cooking_mode_display 0070          __size_of_power_on_screen 007A            __size_of_clear_display 0008  
             start_initialization 0013               __size_of_clcd_print 0033                      scan_keypad@i 0073  
             __size_of_clcd_putch 0015               __size_of_clcd_write 0036            read_matrix_keypad@mode 0076  
          read_matrix_keypad@once 007A                       __end_of_isr 0D48                   ?_operation_call 0070  
                        ??___wmul 0077                 operation_call@key 005B                     ??_init_config 0077  
                   ??_init_timer2 0073                       __pbssCOMMON 0078                         ___latbits 0002  
                   __pcstackBANK0 0048                     ??_scan_keypad 0073                     _clear_display 0B34  
            power_on_screen@i_131 005A              __end_of_time_display 075C                          ?___awdiv 0073  
                        ?___awmod 004C                         _heat_flag 0034                 __size_of_set_temp 0242  
               __size_of_set_time 020A                         __pstrings 04EE            ??_cooking_mode_display 0077  
                       _init_clcd 0B44               __end_of_init_config 0BBC                         _min_array 0045  
               ??_power_on_screen 0055               __end_of_init_timer2 0B5C                         _sec_array 0042  
        ?_init_display_controller 0070                 interrupt_function 0004                    ___wmul@product 0048  
                  ?_clear_display 0070                         clear_ram0 0B3C                      ??_clcd_print 0077  
                    ??_clcd_putch 0078        __end_of_init_matrix_keypad 0B6C                      ??_clcd_write 0074  
               set_temp@key_count 0028               __end_of_scan_keypad 0F1B                       __stringbase 0500  
               ___wmul@multiplier 0073                __end_of_clcd_print 0C3F                __end_of_clcd_putch 0B81  
              __end_of_clcd_write 0C75                        ?_init_clcd 0070             read_matrix_keypad@key 0077  
               set_time@blink_pos 002E                     set_temp@blink 002C                     set_time@blink 0032  
      __end_of_read_matrix_keypad 0BE1                  __size_of___awdiv 0069                  __size_of___awmod 005B  
              __end_of__stringtab 0500                 set_time@key_count 0078                       _init_config 0B9E  
                     _init_timer2 0B4F                  ??_operation_call 0059                          __ptext10 0B34  
                        __ptext11 0B6C                          __ptext20 0B44                          __ptext12 0BE1  
                        __ptext21 0DA3                          __ptext13 0D48                          __ptext22 0C3F  
                        __ptext14 0E06                          __ptext23 0CF0                          __ptext15 0C75  
                        __ptext16 0C0C                          __ptext17 0B9E                          __ptext18 0B4F  
                        __ptext19 0B5C                   ??_clear_display 0077                     __size_of_main 001D  
                   __size_of_loop 00E5                       _scan_keypad 0E6F             __size_of_time_display 010E  
                        _set_temp 0028                          _set_time 026A                 _door_status_check 0CB2  
              ?_door_status_check 0070                      set_temp@door 0024                          isr@count 0022  
                    set_temp@temp 0026                      set_temp@wait 002A                      set_time@wait 0030  
             ??_door_status_check 0077                       ??_init_clcd 0077                      _time_display 064E  
                        intlevel1 0000                         stringcode 04F8         __end_of_door_status_check 0CF0  
                 _power_on_screen 0474                          stringtab 04EE                  power_on_screen@i 0058  
